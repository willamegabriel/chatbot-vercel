import*as e from"node:fs";import*as t from"node:path";import*as s from"node:url";import*as r from"onnxruntime-common";import*as o from"onnxruntime-node";import*as n from"sharp";var a,i,l={"node:fs":t=>{t.exports=e},"node:path":e=>{e.exports=t},"node:url":e=>{e.exports=s},"onnxruntime-common":e=>{e.exports=r},"onnxruntime-node":e=>{e.exports=o},sharp:e=>{e.exports=n},"?8b6b":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(e,t,s)=>{s.r(t),s.d(t,{Environment:()=>te,Interpreter:()=>se,Template:()=>_e,parse:()=>N,tokenize:()=>d});var r=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndSet:"EndSet",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro",Break:"Break",Continue:"Continue"}),o=Object.freeze({set:r.Set,for:r.For,in:r.In,is:r.Is,if:r.If,else:r.Else,endset:r.EndSet,endif:r.EndIf,elif:r.ElseIf,endfor:r.EndFor,and:r.And,or:r.Or,not:r.Not,"not in":r.NotIn,macro:r.Macro,endmacro:r.EndMacro,break:r.Break,continue:r.Continue,true:r.BooleanLiteral,false:r.BooleanLiteral,none:r.NullLiteral,True:r.BooleanLiteral,False:r.BooleanLiteral,None:r.NullLiteral}),n=class{constructor(e,t){this.value=e,this.type=t}};function a(e){return/\w/.test(e)}function i(e){return/[0-9]/.test(e)}var l=[["{%",r.OpenStatement],["%}",r.CloseStatement],["{{",r.OpenExpression],["}}",r.CloseExpression],["(",r.OpenParen],[")",r.CloseParen],["{",r.OpenCurlyBracket],["}",r.CloseCurlyBracket],["[",r.OpenSquareBracket],["]",r.CloseSquareBracket],[",",r.Comma],[".",r.Dot],[":",r.Colon],["|",r.Pipe],["<=",r.ComparisonBinaryOperator],[">=",r.ComparisonBinaryOperator],["==",r.ComparisonBinaryOperator],["!=",r.ComparisonBinaryOperator],["<",r.ComparisonBinaryOperator],[">",r.ComparisonBinaryOperator],["+",r.AdditiveBinaryOperator],["-",r.AdditiveBinaryOperator],["*",r.MultiplicativeBinaryOperator],["/",r.MultiplicativeBinaryOperator],["%",r.MultiplicativeBinaryOperator],["=",r.Equals]],c=new Map([["n","\n"],["t","\t"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function d(e,t={}){const s=[],d=function(e,t={}){return e.endsWith("\n")&&(e=e.slice(0,-1)),e=e.replace(/{#.*?#}/gs,"{##}"),t.lstrip_blocks&&(e=e.replace(/^[ \t]*({[#%])/gm,"$1")),t.trim_blocks&&(e=e.replace(/([#%]})\n/g,"$1")),e.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}(e,t);let u=0;const _=e=>{let t="";for(;e(d[u]);)if("\\"!==d[u]){if(t+=d[u++],u>=d.length)throw new SyntaxError("Unexpected end of input")}else{if(++u,u>=d.length)throw new SyntaxError("Unexpected end of input");const e=d[u++],s=c.get(e);if(void 0===s)throw new SyntaxError(`Unexpected escaped character: ${e}`);t+=s}return t};e:for(;u<d.length;){const e=s.at(-1)?.type;if(void 0===e||e===r.CloseStatement||e===r.CloseExpression){let e="";for(;u<d.length&&("{"!==d[u]||"%"!==d[u+1]&&"{"!==d[u+1]);)e+=d[u++];if(e.length>0){s.push(new n(e,r.Text));continue}}_((e=>/\s/.test(e)));const t=d[u];if("-"===t||"+"===t){const e=s.at(-1)?.type;if(e===r.Text||void 0===e)throw new SyntaxError(`Unexpected character: ${t}`);switch(e){case r.Identifier:case r.NumericLiteral:case r.BooleanLiteral:case r.NullLiteral:case r.StringLiteral:case r.CloseParen:case r.CloseSquareBracket:break;default:{++u;const e=_(i);s.push(new n(`${t}${e}`,e.length>0?r.NumericLiteral:r.UnaryOperator));continue}}}for(const[e,t]of l){if(d.slice(u,u+e.length)===e){s.push(new n(e,t)),u+=e.length;continue e}}if("'"!==t&&'"'!==t)if(i(t)){const e=_(i);s.push(new n(e,r.NumericLiteral))}else{if(!a(t))throw new SyntaxError(`Unexpected character: ${t}`);{const e=_(a),t=Object.hasOwn(o,e)?o[e]:r.Identifier;t===r.In&&s.at(-1)?.type===r.Not?(s.pop(),s.push(new n("not in",r.NotIn))):s.push(new n(e,t))}}else{++u;const e=_((e=>e!==t));s.push(new n(e,r.StringLiteral)),++u}}return s}var u=class{type="Statement"},_=class extends u{constructor(e){super(),this.body=e}type="Program"},m=class extends u{constructor(e,t,s){super(),this.test=e,this.body=t,this.alternate=s}type="If"},p=class extends u{constructor(e,t,s,r){super(),this.loopvar=e,this.iterable=t,this.body=s,this.defaultBlock=r}type="For"},h=class extends u{type="Break"},g=class extends u{type="Continue"},f=class extends u{constructor(e,t,s){super(),this.assignee=e,this.value=t,this.body=s}type="Set"},M=class extends u{constructor(e,t,s){super(),this.name=e,this.args=t,this.body=s}type="Macro"},w=class extends u{type="Expression"},T=class extends w{constructor(e,t,s){super(),this.object=e,this.property=t,this.computed=s}type="MemberExpression"},b=class extends w{constructor(e,t){super(),this.callee=e,this.args=t}type="CallExpression"},x=class extends w{constructor(e){super(),this.value=e}type="Identifier"},P=class extends w{constructor(e){super(),this.value=e}type="Literal"},k=class extends P{type="NumericLiteral"},F=class extends P{type="StringLiteral"},y=class extends P{type="BooleanLiteral"},v=class extends P{type="NullLiteral"},C=class extends P{type="ArrayLiteral"},S=class extends P{type="TupleLiteral"},A=class extends P{type="ObjectLiteral"},E=class extends w{constructor(e,t,s){super(),this.operator=e,this.left=t,this.right=s}type="BinaryExpression"},L=class extends w{constructor(e,t){super(),this.operand=e,this.filter=t}type="FilterExpression"},I=class extends w{constructor(e,t){super(),this.iterable=e,this.test=t}type="SelectExpression"},z=class extends w{constructor(e,t,s){super(),this.operand=e,this.negate=t,this.test=s}type="TestExpression"},D=class extends w{constructor(e,t){super(),this.operator=e,this.argument=t}type="UnaryExpression"},j=class extends w{constructor(e=void 0,t=void 0,s=void 0){super(),this.start=e,this.stop=t,this.step=s}type="SliceExpression"},V=class extends w{constructor(e,t){super(),this.key=e,this.value=t}type="KeywordArgumentExpression"};function N(e){const t=new _([]);let s=0;function o(t,r){const o=e[s++];if(!o||o.type!==t)throw new Error(`Parser Error: ${r}. ${o.type} !== ${t}.`);return o}function n(){switch(e[s].type){case r.Text:return new F(o(r.Text,"Expected text token").value);case r.OpenStatement:return function(){let t;switch(o(r.OpenStatement,"Expected opening statement token"),e[s].type){case r.Set:++s,t=function(){const t=d();if(i(r.Equals)){++s;const e=d();return new f(t,e,[])}{const a=[];for(o(r.CloseStatement,"Expected %} token");e[s]?.type!==r.OpenStatement||e[s+1]?.type!==r.EndSet;){const e=n();a.push(e)}return o(r.OpenStatement,"Expected {% token"),o(r.EndSet,"Expected endset token"),new f(t,null,a)}}(),o(r.CloseStatement,"Expected closing statement token");break;case r.If:++s,t=l(),o(r.OpenStatement,"Expected {% token"),o(r.EndIf,"Expected endif token"),o(r.CloseStatement,"Expected %} token");break;case r.Macro:++s,t=function(){const e=$();if("Identifier"!==e.type)throw new SyntaxError("Expected identifier following macro statement");const t=B();o(r.CloseStatement,"Expected closing statement token");const s=[];for(;a(r.OpenStatement,r.EndMacro);)s.push(n());return new M(e,t,s)}(),o(r.OpenStatement,"Expected {% token"),o(r.EndMacro,"Expected endmacro token"),o(r.CloseStatement,"Expected %} token");break;case r.For:++s,t=function(){const e=c(!0);if(!(e instanceof x||e instanceof S))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${e.type} instead`);o(r.In,"Expected `in` keyword following loop variable");const t=d();o(r.CloseStatement,"Expected closing statement token");const l=[];for(;a(r.OpenStatement,r.EndFor)&&a(r.OpenStatement,r.Else);)l.push(n());const u=[];if(i(r.OpenStatement,r.Else))for(++s,++s,o(r.CloseStatement,"Expected closing statement token");a(r.OpenStatement,r.EndFor);)u.push(n());return new p(e,t,l,u)}(),o(r.OpenStatement,"Expected {% token"),o(r.EndFor,"Expected endfor token"),o(r.CloseStatement,"Expected %} token");break;case r.Break:++s,o(r.CloseStatement,"Expected closing statement token"),t=new h;break;case r.Continue:++s,o(r.CloseStatement,"Expected closing statement token"),t=new g;break;default:throw new SyntaxError(`Unknown statement type: ${e[s].type}`)}return t}();case r.OpenExpression:return function(){o(r.OpenExpression,"Expected opening expression token");const e=d();return o(r.CloseExpression,"Expected closing expression token"),e}();default:throw new SyntaxError(`Unexpected token type: ${e[s].type}`)}}function a(...t){return s+t.length<=e.length&&t.some(((t,r)=>t!==e[s+r].type))}function i(...t){return s+t.length<=e.length&&t.every(((t,r)=>t===e[s+r].type))}function l(){const t=d();o(r.CloseStatement,"Expected closing statement token");const a=[],c=[];for(;e[s]?.type!==r.OpenStatement||e[s+1]?.type!==r.ElseIf&&e[s+1]?.type!==r.Else&&e[s+1]?.type!==r.EndIf;)a.push(n());if(e[s]?.type===r.OpenStatement&&e[s+1]?.type!==r.EndIf)if(++s,i(r.ElseIf))o(r.ElseIf,"Expected elseif token"),c.push(l());else for(o(r.Else,"Expected else token"),o(r.CloseStatement,"Expected closing statement token");e[s]?.type!==r.OpenStatement||e[s+1]?.type!==r.EndIf;)c.push(n());return new m(t,a,c)}function c(e=!1){const t=e?$:d,o=[t()],n=i(r.Comma);for(;n&&(++s,o.push(t()),i(r.Comma)););return n?new S(o):o[0]}function d(){return function(){const e=u();if(i(r.If)){++s;const t=u();if(i(r.Else)){++s;const r=u();return new m(t,[e],[r])}return new I(e,t)}return e}()}function u(){let t=w();for(;i(r.Or);){const r=e[s];++s;const o=w();t=new E(r,t,o)}return t}function w(){let t=P();for(;i(r.And);){const r=e[s];++s;const o=P();t=new E(r,t,o)}return t}function P(){let t;for(;i(r.Not);){const r=e[s];++s;const o=P();t=new D(r,o)}return t??function(){let t=N();for(;i(r.ComparisonBinaryOperator)||i(r.In)||i(r.NotIn);){const r=e[s];++s;const o=N();t=new E(r,t,o)}return t}()}function N(){let t=q();for(;i(r.AdditiveBinaryOperator);){const r=e[s];++s;const o=q();t=new E(r,t,o)}return t}function O(e){let t=new b(e,B());return t=R(t),i(r.OpenParen)&&(t=O(t)),t}function B(){o(r.OpenParen,"Expected opening parenthesis for arguments list");const e=function(){const e=[];for(;!i(r.CloseParen);){let t=d();if(i(r.Equals)){if(++s,!(t instanceof x))throw new SyntaxError("Expected identifier for keyword argument");const e=d();t=new V(t,e)}e.push(t),i(r.Comma)&&++s}return e}();return o(r.CloseParen,"Expected closing parenthesis for arguments list"),e}function G(){const e=[];let t=!1;for(;!i(r.CloseSquareBracket);)i(r.Colon)?(e.push(void 0),++s,t=!0):(e.push(d()),i(r.Colon)&&(++s,t=!0));if(0===e.length)throw new SyntaxError("Expected at least one argument for member/slice expression");if(t){if(e.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new j(...e)}return e[0]}function R(t){for(;i(r.Dot)||i(r.OpenSquareBracket);){const n=e[s];let a;++s;const i=n.type!==r.Dot;if(i)a=G(),o(r.CloseSquareBracket,"Expected closing square bracket");else if(a=$(),"Identifier"!==a.type)throw new SyntaxError("Expected identifier following dot operator");t=new T(t,a,i)}return t}function q(){let t=W();for(;i(r.MultiplicativeBinaryOperator);){const r=e[s];++s;const o=W();t=new E(r,t,o)}return t}function W(){let e=function(){let e=function(){const e=R($());return i(r.OpenParen)?O(e):e}();for(;i(r.Pipe);){++s;let t=$();if(!(t instanceof x))throw new SyntaxError("Expected identifier for the filter");i(r.OpenParen)&&(t=O(t)),e=new L(e,t)}return e}();for(;i(r.Is);){++s;const t=i(r.Not);t&&++s;let o=$();if(o instanceof y?o=new x(o.value.toString()):o instanceof v&&(o=new x("none")),!(o instanceof x))throw new SyntaxError("Expected identifier for the test");e=new z(e,t,o)}return e}function $(){const t=e[s];switch(t.type){case r.NumericLiteral:return++s,new k(Number(t.value));case r.StringLiteral:return++s,new F(t.value);case r.BooleanLiteral:return++s,new y("true"===t.value.toLowerCase());case r.NullLiteral:return++s,new v(null);case r.Identifier:return++s,new x(t.value);case r.OpenParen:{++s;const t=c();if(e[s].type!==r.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${e[s].type} instead`);return++s,t}case r.OpenSquareBracket:{++s;const e=[];for(;!i(r.CloseSquareBracket);)e.push(d()),i(r.Comma)&&++s;return++s,new C(e)}case r.OpenCurlyBracket:{++s;const e=new Map;for(;!i(r.CloseCurlyBracket);){const t=d();o(r.Colon,"Expected colon between key and value in object literal");const n=d();e.set(t,n),i(r.Comma)&&++s}return++s,new A(e)}default:throw new SyntaxError(`Unexpected token: ${t.type}`)}}for(;s<e.length;)t.body.push(n());return t}function O(e,t,s=1){void 0===t&&(t=e,e=0);const r=[];for(let o=e;o<t;o+=s)r.push(o);return r}function B(e,t,s,r=1){const o=Math.sign(r);o>=0?(t=(t??=0)<0?Math.max(e.length+t,0):Math.min(t,e.length),s=(s??=e.length)<0?Math.max(e.length+s,0):Math.min(s,e.length)):(t=(t??=e.length-1)<0?Math.max(e.length+t,-1):Math.min(t,e.length-1),s=(s??=-1)<-1?Math.max(e.length+s,-1):Math.min(s,e.length-1));const n=[];for(let a=t;o*a<o*s;a+=r)n.push(e[a]);return n}function G(e){return e.replace(/\b\w/g,(e=>e.toUpperCase()))}var R=class extends Error{},q=class extends Error{},W=class{type="RuntimeValue";value;builtins=new Map;constructor(e=void 0){this.value=e}__bool__(){return new Q(!!this.value)}},$=class extends W{type="NumericValue"},U=class extends W{type="StringValue";builtins=new Map([["upper",new K((()=>new U(this.value.toUpperCase())))],["lower",new K((()=>new U(this.value.toLowerCase())))],["strip",new K((()=>new U(this.value.trim())))],["title",new K((()=>new U(G(this.value))))],["length",new $(this.value.length)],["rstrip",new K((()=>new U(this.value.trimEnd())))],["lstrip",new K((()=>new U(this.value.trimStart())))],["startswith",new K((e=>{if(0===e.length)throw new Error("startswith() requires at least one argument");const t=e[0];if(!(t instanceof U))throw new Error("startswith() argument must be a string");return new Q(this.value.startsWith(t.value))}))],["endswith",new K((e=>{if(0===e.length)throw new Error("endswith() requires at least one argument");const t=e[0];if(!(t instanceof U))throw new Error("endswith() argument must be a string");return new Q(this.value.endsWith(t.value))}))],["split",new K((e=>{const t=e[0]??new Z;if(!(t instanceof U||t instanceof Z))throw new Error("sep argument must be a string or null");const s=e[1]??new $(-1);if(!(s instanceof $))throw new Error("maxsplit argument must be a number");let r=[];if(t instanceof Z){const e=this.value.trimStart();for(const{0:t,index:o}of e.matchAll(/\S+/g)){if(-1!==s.value&&r.length>=s.value&&void 0!==o){r.push(t+e.slice(o+t.length));break}r.push(t)}}else{if(""===t.value)throw new Error("empty separator");r=this.value.split(t.value),-1!==s.value&&r.length>s.value&&r.push(r.splice(s.value).join(t.value))}return new J(r.map((e=>new U(e))))}))]])},Q=class extends W{type="BooleanValue"},X=class extends W{type="ObjectValue";__bool__(){return new Q(this.value.size>0)}builtins=new Map([["get",new K((([e,t])=>{if(!(e instanceof U))throw new Error(`Object key must be a string: got ${e.type}`);return this.value.get(e.value)??t??new Z}))],["items",new K((()=>new J(Array.from(this.value.entries()).map((([e,t])=>new J([new U(e),t]))))))]])},H=class extends X{type="KeywordArgumentsValue"},J=class extends W{type="ArrayValue";builtins=new Map([["length",new $(this.value.length)]]);__bool__(){return new Q(this.value.length>0)}},Y=class extends J{type="TupleValue"},K=class extends W{type="FunctionValue"},Z=class extends W{type="NullValue"},ee=class extends W{type="UndefinedValue"},te=class{constructor(e){this.parent=e}variables=new Map([["namespace",new K((e=>{if(0===e.length)return new X(new Map);if(1!==e.length||!(e[0]instanceof X))throw new Error("`namespace` expects either zero arguments or a single object argument");return e[0]}))]]);tests=new Map([["boolean",e=>"BooleanValue"===e.type],["callable",e=>e instanceof K],["odd",e=>{if("NumericValue"!==e.type)throw new Error(`Cannot apply test "odd" to type: ${e.type}`);return e.value%2!=0}],["even",e=>{if("NumericValue"!==e.type)throw new Error(`Cannot apply test "even" to type: ${e.type}`);return e.value%2==0}],["false",e=>"BooleanValue"===e.type&&!e.value],["true",e=>"BooleanValue"===e.type&&e.value],["none",e=>"NullValue"===e.type],["string",e=>"StringValue"===e.type],["number",e=>"NumericValue"===e.type],["integer",e=>"NumericValue"===e.type&&Number.isInteger(e.value)],["iterable",e=>"ArrayValue"===e.type||"StringValue"===e.type],["mapping",e=>"ObjectValue"===e.type],["lower",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toLowerCase()}],["upper",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toUpperCase()}],["none",e=>"NullValue"===e.type],["defined",e=>"UndefinedValue"!==e.type],["undefined",e=>"UndefinedValue"===e.type],["equalto",(e,t)=>e.value===t.value],["eq",(e,t)=>e.value===t.value]]);set(e,t){return this.declareVariable(e,re(t))}declareVariable(e,t){if(this.variables.has(e))throw new SyntaxError(`Variable already declared: ${e}`);return this.variables.set(e,t),t}setVariable(e,t){return this.variables.set(e,t),t}resolve(e){if(this.variables.has(e))return this;if(this.parent)return this.parent.resolve(e);throw new Error(`Unknown variable: ${e}`)}lookupVariable(e){try{return this.resolve(e).variables.get(e)??new ee}catch{return new ee}}},se=class{global;constructor(e){this.global=e??new te}run(e){return this.evaluate(e,this.global)}evaluateBinaryExpression(e,t){const s=this.evaluate(e.left,t);switch(e.operator.value){case"and":return s.__bool__().value?this.evaluate(e.right,t):s;case"or":return s.__bool__().value?s:this.evaluate(e.right,t)}const r=this.evaluate(e.right,t);switch(e.operator.value){case"==":return new Q(s.value==r.value);case"!=":return new Q(s.value!=r.value)}if(s instanceof ee||r instanceof ee)throw new Error("Cannot perform operation on undefined values");if(s instanceof Z||r instanceof Z)throw new Error("Cannot perform operation on null values");if(s instanceof $&&r instanceof $)switch(e.operator.value){case"+":return new $(s.value+r.value);case"-":return new $(s.value-r.value);case"*":return new $(s.value*r.value);case"/":return new $(s.value/r.value);case"%":return new $(s.value%r.value);case"<":return new Q(s.value<r.value);case">":return new Q(s.value>r.value);case">=":return new Q(s.value>=r.value);case"<=":return new Q(s.value<=r.value)}else if(s instanceof J&&r instanceof J){if("+"===e.operator.value)return new J(s.value.concat(r.value))}else if(r instanceof J){const t=void 0!==r.value.find((e=>e.value===s.value));switch(e.operator.value){case"in":return new Q(t);case"not in":return new Q(!t)}}if((s instanceof U||r instanceof U)&&"+"===e.operator.value)return new U(s.value.toString()+r.value.toString());if(s instanceof U&&r instanceof U)switch(e.operator.value){case"in":return new Q(r.value.includes(s.value));case"not in":return new Q(!r.value.includes(s.value))}if(s instanceof U&&r instanceof X)switch(e.operator.value){case"in":return new Q(r.value.has(s.value));case"not in":return new Q(!r.value.has(s.value))}throw new SyntaxError(`Unknown operator "${e.operator.value}" between ${s.type} and ${r.type}`)}evaluateArguments(e,t){const s=[],r=new Map;for(const o of e)if("KeywordArgumentExpression"===o.type){const e=o;r.set(e.key.value,this.evaluate(e.value,t))}else{if(r.size>0)throw new Error("Positional arguments must come before keyword arguments");s.push(this.evaluate(o,t))}return[s,r]}evaluateFilterExpression(e,t){const s=this.evaluate(e.operand,t);if("Identifier"===e.filter.type){const t=e.filter;if("tojson"===t.value)return new U(oe(s));if(s instanceof J)switch(t.value){case"list":return s;case"first":return s.value[0];case"last":return s.value[s.value.length-1];case"length":return new $(s.value.length);case"reverse":return new J(s.value.reverse());case"sort":return new J(s.value.sort(((e,t)=>{if(e.type!==t.type)throw new Error(`Cannot compare different types: ${e.type} and ${t.type}`);switch(e.type){case"NumericValue":return e.value-t.value;case"StringValue":return e.value.localeCompare(t.value);default:throw new Error(`Cannot compare type: ${e.type}`)}})));case"join":return new U(s.value.map((e=>e.value)).join(""));case"string":return new U(oe(s));default:throw new Error(`Unknown ArrayValue filter: ${t.value}`)}else if(s instanceof U)switch(t.value){case"length":return new $(s.value.length);case"upper":return new U(s.value.toUpperCase());case"lower":return new U(s.value.toLowerCase());case"title":return new U(G(s.value));case"capitalize":return new U(s.value.charAt(0).toUpperCase()+s.value.slice(1));case"trim":return new U(s.value.trim());case"indent":return new U(s.value.split("\n").map(((e,t)=>0===t||0===e.length?e:"    "+e)).join("\n"));case"join":case"string":return s;default:throw new Error(`Unknown StringValue filter: ${t.value}`)}else{if(s instanceof $){if("abs"===t.value)return new $(Math.abs(s.value));throw new Error(`Unknown NumericValue filter: ${t.value}`)}if(s instanceof X)switch(t.value){case"items":return new J(Array.from(s.value.entries()).map((([e,t])=>new J([new U(e),t]))));case"length":return new $(s.value.size);default:throw new Error(`Unknown ObjectValue filter: ${t.value}`)}}throw new Error(`Cannot apply filter "${t.value}" to type: ${s.type}`)}if("CallExpression"===e.filter.type){const r=e.filter;if("Identifier"!==r.callee.type)throw new Error(`Unknown filter: ${r.callee.type}`);const o=r.callee.value;if("tojson"===o){const[,e]=this.evaluateArguments(r.args,t),o=e.get("indent")??new Z;if(!(o instanceof $||o instanceof Z))throw new Error("If set, indent must be a number");return new U(oe(s,o.value))}if("join"===o){let e;if(s instanceof U)e=Array.from(s.value);else{if(!(s instanceof J))throw new Error(`Cannot apply filter "${o}" to type: ${s.type}`);e=s.value.map((e=>e.value))}const[n,a]=this.evaluateArguments(r.args,t),i=n.at(0)??a.get("separator")??new U("");if(!(i instanceof U))throw new Error("separator must be a string");return new U(e.join(i.value))}if(s instanceof J){switch(o){case"selectattr":case"rejectattr":{const e="selectattr"===o;if(s.value.some((e=>!(e instanceof X))))throw new Error(`\`${o}\` can only be applied to array of objects`);if(r.args.some((e=>"StringLiteral"!==e.type)))throw new Error(`arguments of \`${o}\` must be strings`);const[n,a,i]=r.args.map((e=>this.evaluate(e,t)));let l;if(a){const e=t.tests.get(a.value);if(!e)throw new Error(`Unknown test: ${a.value}`);l=e}else l=(...e)=>e[0].__bool__().value;const c=s.value.filter((t=>{const s=t.value.get(n.value),r=!!s&&l(s,i);return e?r:!r}));return new J(c)}case"map":{const[,e]=this.evaluateArguments(r.args,t);if(e.has("attribute")){const t=e.get("attribute");if(!(t instanceof U))throw new Error("attribute must be a string");const r=e.get("default"),o=s.value.map((e=>{if(!(e instanceof X))throw new Error("items in map must be an object");return e.value.get(t.value)??r??new ee}));return new J(o)}throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${o}`)}if(s instanceof U){if("indent"===o){const[e,o]=this.evaluateArguments(r.args,t),n=e.at(0)??o.get("width")??new $(4);if(!(n instanceof $))throw new Error("width must be a number");const a=e.at(1)??o.get("first")??new Q(!1),i=e.at(2)??o.get("blank")??new Q(!1),l=s.value.split("\n"),c=" ".repeat(n.value),d=l.map(((e,t)=>!a.value&&0===t||!i.value&&0===e.length?e:c+e));return new U(d.join("\n"))}throw new Error(`Unknown StringValue filter: ${o}`)}throw new Error(`Cannot apply filter "${o}" to type: ${s.type}`)}throw new Error(`Unknown filter: ${e.filter.type}`)}evaluateTestExpression(e,t){const s=this.evaluate(e.operand,t),r=t.tests.get(e.test.value);if(!r)throw new Error(`Unknown test: ${e.test.value}`);const o=r(s);return new Q(e.negate?!o:o)}evaluateUnaryExpression(e,t){const s=this.evaluate(e.argument,t);if("not"===e.operator.value)return new Q(!s.value);throw new SyntaxError(`Unknown operator: ${e.operator.value}`)}evalProgram(e,t){return this.evaluateBlock(e.body,t)}evaluateBlock(e,t){let s="";for(const r of e){const e=this.evaluate(r,t);"NullValue"!==e.type&&"UndefinedValue"!==e.type&&(s+=e.value)}return new U(s)}evaluateIdentifier(e,t){return t.lookupVariable(e.value)}evaluateCallExpression(e,t){const[s,r]=this.evaluateArguments(e.args,t);r.size>0&&s.push(new H(r));const o=this.evaluate(e.callee,t);if("FunctionValue"!==o.type)throw new Error(`Cannot call something that is not a function: got ${o.type}`);return o.value(s,t)}evaluateSliceExpression(e,t,s){if(!(e instanceof J||e instanceof U))throw new Error("Slice object must be an array or string");const r=this.evaluate(t.start,s),o=this.evaluate(t.stop,s),n=this.evaluate(t.step,s);if(!(r instanceof $||r instanceof ee))throw new Error("Slice start must be numeric or undefined");if(!(o instanceof $||o instanceof ee))throw new Error("Slice stop must be numeric or undefined");if(!(n instanceof $||n instanceof ee))throw new Error("Slice step must be numeric or undefined");return e instanceof J?new J(B(e.value,r.value,o.value,n.value)):new U(B(Array.from(e.value),r.value,o.value,n.value).join(""))}evaluateMemberExpression(e,t){const s=this.evaluate(e.object,t);let r,o;if(e.computed){if("SliceExpression"===e.property.type)return this.evaluateSliceExpression(s,e.property,t);r=this.evaluate(e.property,t)}else r=new U(e.property.value);if(s instanceof X){if(!(r instanceof U))throw new Error(`Cannot access property with non-string: got ${r.type}`);o=s.value.get(r.value)??s.builtins.get(r.value)}else if(s instanceof J||s instanceof U)if(r instanceof $)o=s.value.at(r.value),s instanceof U&&(o=new U(s.value.at(r.value)));else{if(!(r instanceof U))throw new Error(`Cannot access property with non-string/non-number: got ${r.type}`);o=s.builtins.get(r.value)}else{if(!(r instanceof U))throw new Error(`Cannot access property with non-string: got ${r.type}`);o=s.builtins.get(r.value)}return o instanceof W?o:new ee}evaluateSet(e,t){const s=e.value?this.evaluate(e.value,t):this.evaluateBlock(e.body,t);if("Identifier"===e.assignee.type){const r=e.assignee.value;t.setVariable(r,s)}else{if("MemberExpression"!==e.assignee.type)throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(e.assignee)}`);{const r=e.assignee,o=this.evaluate(r.object,t);if(!(o instanceof X))throw new Error("Cannot assign to member of non-object");if("Identifier"!==r.property.type)throw new Error("Cannot assign to member with non-identifier property");o.value.set(r.property.value,s)}}return new Z}evaluateIf(e,t){const s=this.evaluate(e.test,t);return this.evaluateBlock(s.__bool__().value?e.body:e.alternate,t)}evaluateFor(e,t){const s=new te(t);let r,o;if("SelectExpression"===e.iterable.type){const t=e.iterable;o=this.evaluate(t.iterable,s),r=t.test}else o=this.evaluate(e.iterable,s);if(!(o instanceof J))throw new Error(`Expected iterable type in for loop: got ${o.type}`);const n=[],a=[];for(let t=0;t<o.value.length;++t){const i=new te(s),l=o.value[t];let c;if("Identifier"===e.loopvar.type)c=t=>t.setVariable(e.loopvar.value,l);else{if("TupleLiteral"!==e.loopvar.type)throw new Error(`Invalid loop variable(s): ${e.loopvar.type}`);{const t=e.loopvar;if("ArrayValue"!==l.type)throw new Error(`Cannot unpack non-iterable type: ${l.type}`);const s=l;if(t.value.length!==s.value.length)throw new Error(`Too ${t.value.length>s.value.length?"few":"many"} items to unpack`);c=e=>{for(let r=0;r<t.value.length;++r){if("Identifier"!==t.value[r].type)throw new Error(`Cannot unpack non-identifier type: ${t.value[r].type}`);e.setVariable(t.value[r].value,s.value[r])}}}}if(r){c(i);if(!this.evaluate(r,i).__bool__().value)continue}n.push(l),a.push(c)}let i="",l=!0;for(let t=0;t<n.length;++t){const r=new Map([["index",new $(t+1)],["index0",new $(t)],["revindex",new $(n.length-t)],["revindex0",new $(n.length-t-1)],["first",new Q(0===t)],["last",new Q(t===n.length-1)],["length",new $(n.length)],["previtem",t>0?n[t-1]:new ee],["nextitem",t<n.length-1?n[t+1]:new ee]]);s.setVariable("loop",new X(r)),a[t](s);try{i+=this.evaluateBlock(e.body,s).value}catch(e){if(e instanceof q)continue;if(e instanceof R)break;throw e}l=!1}if(l){i+=this.evaluateBlock(e.defaultBlock,s).value}return new U(i)}evaluateMacro(e,t){return t.setVariable(e.name.value,new K(((t,s)=>{const r=new te(s);let o;t=t.slice(),"KeywordArgumentsValue"===t.at(-1)?.type&&(o=t.pop());for(let s=0;s<e.args.length;++s){const n=e.args[s],a=t[s];if("Identifier"===n.type){const e=n;if(!a)throw new Error(`Missing positional argument: ${e.value}`);r.setVariable(e.value,a)}else{if("KeywordArgumentExpression"!==n.type)throw new Error(`Unknown argument type: ${n.type}`);{const e=n,t=a??o?.value.get(e.key.value)??this.evaluate(e.value,r);r.setVariable(e.key.value,t)}}}return this.evaluateBlock(e.body,r)}))),new Z}evaluate(e,t){if(void 0===e)return new ee;switch(e.type){case"Program":return this.evalProgram(e,t);case"Set":return this.evaluateSet(e,t);case"If":return this.evaluateIf(e,t);case"For":return this.evaluateFor(e,t);case"Macro":return this.evaluateMacro(e,t);case"Break":throw new R;case"Continue":throw new q;case"NumericLiteral":return new $(Number(e.value));case"StringLiteral":return new U(e.value);case"BooleanLiteral":return new Q(e.value);case"NullLiteral":return new Z(e.value);case"ArrayLiteral":return new J(e.value.map((e=>this.evaluate(e,t))));case"TupleLiteral":return new Y(e.value.map((e=>this.evaluate(e,t))));case"ObjectLiteral":{const s=new Map;for(const[r,o]of e.value){const e=this.evaluate(r,t);if(!(e instanceof U))throw new Error(`Object keys must be strings: got ${e.type}`);s.set(e.value,this.evaluate(o,t))}return new X(s)}case"Identifier":return this.evaluateIdentifier(e,t);case"CallExpression":return this.evaluateCallExpression(e,t);case"MemberExpression":return this.evaluateMemberExpression(e,t);case"UnaryExpression":return this.evaluateUnaryExpression(e,t);case"BinaryExpression":return this.evaluateBinaryExpression(e,t);case"FilterExpression":return this.evaluateFilterExpression(e,t);case"TestExpression":return this.evaluateTestExpression(e,t);default:throw new SyntaxError(`Unknown node type: ${e.type}`)}}};function re(e){switch(typeof e){case"number":return new $(e);case"string":return new U(e);case"boolean":return new Q(e);case"undefined":return new ee;case"object":return null===e?new Z:Array.isArray(e)?new J(e.map(re)):new X(new Map(Object.entries(e).map((([e,t])=>[e,re(t)]))));case"function":return new K(((t,s)=>re(e(...t.map((e=>e.value)))??null)));default:throw new Error(`Cannot convert to runtime value: ${e}`)}}function oe(e,t,s){const r=s??0;switch(e.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(e.value);case"ArrayValue":case"ObjectValue":{const s=t?" ".repeat(t):"",o="\n"+s.repeat(r),n=o+s;if("ArrayValue"===e.type){const s=e.value.map((e=>oe(e,t,r+1)));return t?`[${n}${s.join(`,${n}`)}${o}]`:`[${s.join(", ")}]`}{const s=Array.from(e.value.entries()).map((([e,s])=>{const o=`"${e}": ${oe(s,t,r+1)}`;return t?`${n}${o}`:o}));return t?`{${s.join(",")}${o}}`:`{${s.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${e.type}`)}}var ne="\n",ae="{%- ",ie=" -%}",le={MultiplicativeBinaryOperator:2,AdditiveBinaryOperator:1,ComparisonBinaryOperator:0};function ce(...e){return ae+e.join(" ")+ie}function de(e,t,s){return e.map((e=>function(e,t,s){const r=s.repeat(t);switch(e.type){case"Program":return de(e.body,t,s);case"If":return function(e,t,s){const r=s.repeat(t),o=[];let n=e;for(;n&&(o.push({test:n.test,body:n.body}),1===n.alternate.length&&"If"===n.alternate[0].type);)n=n.alternate[0];let a=r+ce("if",ue(o[0].test))+ne+de(o[0].body,t+1,s);for(let e=1;e<o.length;e++)a+=ne+r+ce("elif",ue(o[e].test))+ne+de(o[e].body,t+1,s);n&&n.alternate.length>0&&(a+=ne+r+ce("else")+ne+de(n.alternate,t+1,s));return a+=ne+r+ce("endif"),a}(e,t,s);case"For":return function(e,t,s){const r=s.repeat(t);let o="";if("SelectExpression"===e.iterable.type){const t=e.iterable;o=`${ue(t.iterable)} if ${ue(t.test)}`}else o=ue(e.iterable);let n=r+ce("for",ue(e.loopvar),"in",o)+ne+de(e.body,t+1,s);e.defaultBlock.length>0&&(n+=ne+r+ce("else")+ne+de(e.defaultBlock,t+1,s));return n+=ne+r+ce("endfor"),n}(e,t,s);case"Set":return function(e,t,s){const r=s.repeat(t),o=ue(e.assignee),n=e.value?ue(e.value):"",a=r+ce("set",`${o}${e.value?" = "+n:""}`);if(0===e.body.length)return a;return a+ne+de(e.body,t+1,s)+ne+r+ce("endset")}(e,t,s);case"Macro":return function(e,t,s){const r=s.repeat(t),o=e.args.map(ue).join(", ");return r+ce("macro",`${e.name.value}(${o})`)+ne+de(e.body,t+1,s)+ne+r+ce("endmacro")}(e,t,s);case"Break":return r+ce("break");case"Continue":return r+ce("continue");default:return r+"{{- "+ue(e)+" -}}"}}(e,t,s))).join(ne)}function ue(e,t=-1){switch(e.type){case"Identifier":return e.value;case"NullLiteral":return"none";case"NumericLiteral":case"BooleanLiteral":return`${e.value}`;case"StringLiteral":return JSON.stringify(e.value);case"BinaryExpression":{const s=e,r=le[s.operator.type]??0,o=ue(s.left,r),n=ue(s.right,r+1),a=`${o} ${s.operator.value} ${n}`;return r<t?`(${a})`:a}case"UnaryExpression":{const t=e;return t.operator.value+("not"===t.operator.value?" ":"")+ue(t.argument,1/0)}case"LogicalNegationExpression":return`not ${ue(e.argument,1/0)}`;case"CallExpression":{const t=e,s=t.args.map((e=>ue(e,-1))).join(", ");return`${ue(t.callee,-1)}(${s})`}case"MemberExpression":{const t=e;let s=ue(t.object,-1);"Identifier"!==t.object.type&&(s=`(${s})`);let r=ue(t.property,-1);return t.computed||"Identifier"===t.property.type||(r=`(${r})`),t.computed?`${s}[${r}]`:`${s}.${r}`}case"FilterExpression":{const t=e,s=ue(t.operand,1/0);return"CallExpression"===t.filter.type?`${s} | ${ue(t.filter,-1)}`:`${s} | ${t.filter.value}`}case"SelectExpression":{const t=e;return`${ue(t.iterable,-1)} | select(${ue(t.test,-1)})`}case"TestExpression":{const t=e;return`${ue(t.operand,-1)} is${t.negate?" not":""} ${t.test.value}`}case"ArrayLiteral":case"TupleLiteral":{const t=e.value.map((e=>ue(e,-1))),s="ArrayLiteral"===e.type?"[]":"()";return`${s[0]}${t.join(", ")}${s[1]}`}case"ObjectLiteral":return`{ ${Array.from(e.value.entries()).map((([e,t])=>`${ue(e,-1)}: ${ue(t,-1)}`)).join(", ")} }`;case"SliceExpression":{const t=e;return`${t.start?ue(t.start,-1):""}:${t.stop?ue(t.stop,-1):""}${t.step?`:${ue(t.step,-1)}`:""}`}case"KeywordArgumentExpression":{const t=e;return`${t.key.value}=${ue(t.value,-1)}`}case"If":{const t=e,s=ue(t.test,-1);return`${ue(t.body[0],0)} if ${s} else ${ue(t.alternate[0],-1)}`}default:throw new Error(`Unknown expression type: ${e.type}`)}}var _e=class{parsed;constructor(e){const t=d(e,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=N(t)}render(e){const t=new te;if(t.set("false",!1),t.set("true",!0),t.set("raise_exception",(e=>{throw new Error(e)})),t.set("range",O),e)for(const[s,r]of Object.entries(e))t.set(s,r);return new se(t).run(this.parsed).value}format(e){return function(e,t="\t"){const s="number"==typeof t?" ".repeat(t):t;return de(e.body,0,s).replace(/\n$/,"")}(this.parsed,e?.indent||"\t")}}},"./src/backends/onnx.js":(e,t,s)=>{var r;s.r(t),s.d(t,{Tensor:()=>i.Tensor,createInferenceSession:()=>g,deviceToExecutionProviders:()=>p,isONNXProxy:()=>w,isONNXTensor:()=>f});var o=s("./src/env.js"),n=s("onnxruntime-node"),a=s("?8b6b"),i=s("onnxruntime-common");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),c=[];let d,u;const _=Symbol.for("onnxruntime");if(_ in globalThis)u=globalThis[_];else if(o.apis.IS_NODE_ENV){switch(u=n.default??n,process.platform){case"win32":c.push("dml");break;case"linux":"x64"===process.arch&&c.push("cuda")}c.push("cpu"),d=["cpu"]}else u=r||(r=s.t(a,2)),o.apis.IS_WEBNN_AVAILABLE&&c.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),o.apis.IS_WEBGPU_AVAILABLE&&c.push("webgpu"),c.push("wasm"),d=["wasm"];const m=u.InferenceSession;function p(e=null){if(!e)return d;switch(e){case"auto":return c;case"gpu":return c.filter((e=>["webgpu","cuda","dml","webnn-gpu"].includes(e)))}if(c.includes(e))return[l[e]??e];throw new Error(`Unsupported device: "${e}". Should be one of: ${c.join(", ")}.`)}let h=null;async function g(e,t,s){h&&await h;const r=m.create(e,t);h??=r;const o=await r;return o.config=s,o}function f(e){return e instanceof u.Tensor}const M=u?.env;function w(){return M?.wasm?.proxy}M?.wasm&&("undefined"!=typeof ServiceWorkerGlobalScope&&self instanceof ServiceWorkerGlobalScope||M.wasm.wasmPaths||(M.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${o.env.version}/dist/`),M.wasm.proxy=!1),M?.webgpu&&(M.webgpu.powerPreference="high-performance"),o.env.backends.onnx=M},"./src/base/feature_extraction_utils.js":(e,t,s)=>{s.r(t),s.d(t,{FeatureExtractor:()=>a,validate_audio_inputs:()=>i});var r=s("./src/utils/constants.js"),o=s("./src/utils/generic.js"),n=s("./src/utils/hub.js");class a extends o.Callable{constructor(e){super(),this.config=e}static async from_pretrained(e,t={}){return new this(await(0,n.getModelJSON)(e,r.FEATURE_EXTRACTOR_NAME,!0,t))}}function i(e,t){if(!(e instanceof Float32Array||e instanceof Float64Array))throw new Error(`${t} expects input to be a Float32Array or a Float64Array, but got ${e?.constructor?.name??typeof e} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(e,t,s)=>{s.r(t),s.d(t,{ImageProcessor:()=>w,center_to_corners_format:()=>u,post_process_instance_segmentation:()=>M,post_process_object_detection:()=>_,post_process_panoptic_segmentation:()=>f,post_process_semantic_segmentation:()=>m});var r=s("./src/utils/generic.js"),o=s("./src/utils/tensor.js"),n=s("./src/utils/maths.js"),a=(s("./src/utils/image.js"),s("./src/utils/core.js")),i=s("./src/utils/hub.js"),l=s("./src/utils/constants.js");function c(e,t,s=0,r=null){const o=e/t;let a=(0,n.bankers_round)(o)*t;return null!==r&&a>r&&(a=Math.floor(o)*t),a<s&&(a=Math.ceil(o)*t),a}function d([e,t],s){return[Math.max(Math.floor(e/s),1)*s,Math.max(Math.floor(t/s),1)*s]}function u([e,t,s,r]){return[e-s/2,t-r/2,e+s/2,t+r/2]}function _(e,t=.5,s=null,r=!1){const o=e.logits,a=e.pred_boxes,[i,l,c]=o.dims;if(null!==s&&s.length!==i)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let d=[];for(let e=0;e<i;++e){let i=null!==s?s[e]:null,_={boxes:[],classes:[],scores:[]},m=o[e],p=a[e];for(let e=0;e<l;++e){let s,o=m[e],a=[];if(r){s=o.sigmoid().data;for(let e=0;e<s.length;++e)s[e]>t&&a.push(e)}else{let e=(0,n.max)(o.data)[1];if(e===c-1)continue;if(s=(0,n.softmax)(o.data),s[e]<t)continue;a.push(e)}for(const t of a){let r=p[e].data;r=u(r),null!==i&&(r=r.map(((e,t)=>e*i[(t+1)%2]))),_.boxes.push(r),_.classes.push(t),_.scores.push(s[t])}}d.push(_)}return d}function m(e,t=null){const s=e.logits,r=s.dims[0];if(null!==t&&t.length!==r)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const n=[];for(let e=0;e<r;++e){const r=null!==t?t[e]:null;let a=s[e];null!==r&&(a=(0,o.interpolate)(a,r,"bilinear",!1));const[i,l]=r??a.dims.slice(-2),c=new o.Tensor("int32",new Int32Array(i*l),[i,l]),d=a[0].data,u=c.data;for(let e=1;e<a.dims[0];++e){const t=a[e].data;for(let s=0;s<t.length;++s)t[s]>d[s]&&(d[s]=t[s],u[s]=e)}const _=new Array(a.dims[0]);for(let e=0;e<u.length;++e){const t=u[e];_[t]=t}const m=_.filter((e=>void 0!==e));n.push({segmentation:c,labels:m})}return n}function p(e,t,s,r){const o=[],a=[],i=[];for(let l=0;l<e.dims[0];++l){const c=e[l],d=t[l],u=(0,n.max)(c.data)[1];if(u===r)continue;const _=(0,n.softmax)(c.data)[u];_>s&&(o.push(d),a.push(_),i.push(u))}return[o,a,i]}function h(e,t,s,r=.5,o=.8){const n=[];let a=0,i=0;const l=t[s].data;for(let t=0;t<e.length;++t)e[t]===s&&(n.push(t),++a),l[t]>=r&&++i;let c=a>0&&i>0;if(c){c=a/i>o}return[c,n]}function g(e,t,s,r,n,a=null,i=null){const[l,c]=i??e[0].dims,d=new o.Tensor("int32",new Int32Array(l*c),[l,c]),u=[];if(null!==i)for(let t=0;t<e.length;++t)e[t]=(0,o.interpolate)(e[t],i,"bilinear",!1);const _=new Int32Array(e[0].data.length),m=new Float32Array(e[0].data.length);for(let s=0;s<e.length;++s){let r=t[s];const o=e[s].data;for(let e=0;e<o.length;++e)o[e]*=r,o[e]>m[e]&&(_[e]=s,m[e]=o[e])}let p=0;const g=d.data;for(let o=0;o<s.length;++o){const a=s[o],[i,l]=h(_,e,o,r,n);if(i){++p;for(const e of l)g[e]=p;u.push({id:p,label_id:a,score:t[o]})}}return[d,u]}function f(e,t=.5,s=.5,r=.8,n=null,a=null){null===n&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),n=new Set);const i=e.class_queries_logits??e.logits,l=(e.masks_queries_logits??e.pred_masks).sigmoid();let[c,d,u]=i.dims;if(u-=1,null!==a&&a.length!==c)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let _=[];for(let e=0;e<c;++e){let c=null!==a?a[e]:null,d=i[e],m=l[e],[h,f,M]=p(d,m,t,u);if(0===M.length){let[e,t]=c??m.dims.slice(-2),s=new o.Tensor("int32",new Int32Array(e*t).fill(-1),[e,t]);_.push({segmentation:s,segments_info:[]});continue}let[w,T]=g(h,f,M,s,r,n,c);_.push({segmentation:w,segments_info:T})}return _}function M(e,t=.5,s=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class w extends r.Callable{constructor(e){super(),this.image_mean=e.image_mean??e.mean,this.image_std=e.image_std??e.std,this.resample=e.resample??2,this.do_rescale=e.do_rescale??!0,this.rescale_factor=e.rescale_factor??1/255,this.do_normalize=e.do_normalize,this.do_thumbnail=e.do_thumbnail,this.size=e.size??e.image_size,this.do_resize=e.do_resize??void 0!==this.size,this.size_divisibility=e.size_divisibility??e.size_divisor,this.do_center_crop=e.do_center_crop,this.crop_size=e.crop_size,this.do_convert_rgb=e.do_convert_rgb??!0,this.do_crop_margin=e.do_crop_margin,this.pad_size=e.pad_size,this.do_pad=e.do_pad,this.min_pixels=e.min_pixels,this.max_pixels=e.max_pixels,this.do_pad&&!this.pad_size&&this.size&&void 0!==this.size.width&&void 0!==this.size.height&&(this.pad_size=this.size),this.do_flip_channel_order=e.do_flip_channel_order??!1,this.config=e}async thumbnail(e,t,s=2){const r=e.height,o=e.width,n=t.height,a=t.width;let i=Math.min(r,n),l=Math.min(o,a);return i===r&&l===o?e:(r>o?l=Math.floor(o*i/r):o>r&&(i=Math.floor(r*l/o)),await e.resize(l,i,{resample:s}))}async crop_margin(e,t=200){const s=e.clone().grayscale(),r=(0,n.min)(s.data)[0],o=(0,n.max)(s.data)[0]-r;if(0===o)return e;const a=t/255;let i=s.width,l=s.height,c=0,d=0;const u=s.data;for(let e=0;e<s.height;++e){const t=e*s.width;for(let n=0;n<s.width;++n)(u[t+n]-r)/o<a&&(i=Math.min(i,n),l=Math.min(l,e),c=Math.max(c,n),d=Math.max(d,e))}return e=await e.crop([i,l,c,d])}pad_image(e,t,s,{mode:r="constant",center:o=!1,constant_values:n=0}={}){const[i,l,c]=t;let d,u;if("number"==typeof s?(d=s,u=s):"square"===s?d=u=Math.max(i,l):(d=s.width,u=s.height),d!==l||u!==i){const s=new Float32Array(d*u*c);if(Array.isArray(n))for(let e=0;e<s.length;++e)s[e]=n[e%c];else 0!==n&&s.fill(n);const[_,m]=o?[Math.floor((d-l)/2),Math.floor((u-i)/2)]:[0,0];for(let t=0;t<i;++t){const r=(t+m)*d,o=t*l;for(let t=0;t<l;++t){const n=(r+t+_)*c,a=(o+t)*c;for(let t=0;t<c;++t)s[n+t]=e[a+t]}}if("symmetric"===r){if(o)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const t=i-1,r=l-1;for(let o=0;o<u;++o){const n=o*d,u=(0,a.calculateReflectOffset)(o,t)*l;for(let t=0;t<d;++t){if(o<i&&t<l)continue;const d=(n+t)*c,_=(u+(0,a.calculateReflectOffset)(t,r))*c;for(let t=0;t<c;++t)s[d+t]=e[_+t]}}}e=s,t=[u,d,c]}return[e,t]}rescale(e){for(let t=0;t<e.length;++t)e[t]=this.rescale_factor*e[t]}get_resize_output_image_size(e,t){const[s,r]=e.size;let o,n;if(this.do_thumbnail){const{height:e,width:s}=t;o=Math.min(e,s)}else Number.isInteger(t)?(o=t,n=this.config.max_size??o):void 0!==t&&(o=t.shortest_edge,n=t.longest_edge);if(void 0!==o||void 0!==n){const e=void 0===o?1:Math.max(o/s,o/r),t=s*e,a=r*e,i=void 0===n?1:Math.min(n/t,n/a);let l=Math.floor(Number((t*i).toFixed(2))),c=Math.floor(Number((a*i).toFixed(2)));return void 0!==this.size_divisibility&&([l,c]=d([l,c],this.size_divisibility)),[l,c]}if(void 0!==t&&void 0!==t.width&&void 0!==t.height){let e=t.width,o=t.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let t=o/r,n=e/s;Math.abs(1-n)<Math.abs(1-t)?t=n:n=t,o=c(t*r,this.config.ensure_multiple_of),e=c(n*s,this.config.ensure_multiple_of)}return[e,o]}if(void 0!==this.size_divisibility)return d([s,r],this.size_divisibility);if(void 0!==this.min_pixels&&void 0!==this.max_pixels){return function(e,t,s=28,r=3136,o=1003520){if(e<s||t<s)throw new Error(`height:${e} or width:${t} must be larger than factor:${s}`);if(Math.max(e,t)/Math.min(e,t)>200)throw new Error("absolute aspect ratio must be smaller than 200, got "+Math.max(e,t)/Math.min(e,t));let n=Math.round(e/s)*s,a=Math.round(t/s)*s;if(n*a>o){const r=Math.sqrt(e*t/o);n=Math.floor(e/r/s)*s,a=Math.floor(t/r/s)*s}else if(n*a<r){const o=Math.sqrt(r/(e*t));n=Math.ceil(e*o/s)*s,a=Math.ceil(t*o/s)*s}return[n,a]}(r,s,this.config.patch_size*this.config.merge_size,this.min_pixels,this.max_pixels)}throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(t)}`)}async resize(e){const[t,s]=this.get_resize_output_image_size(e,this.size);return await e.resize(t,s,{resample:this.resample})}async preprocess(e,{do_normalize:t=null,do_pad:s=null,do_convert_rgb:r=null,do_convert_grayscale:n=null,do_flip_channel_order:a=null}={}){this.do_crop_margin&&(e=await this.crop_margin(e));const[i,l]=e.size;if(r??this.do_convert_rgb?e=e.rgb():n&&(e=e.grayscale()),this.do_resize&&(e=await this.resize(e)),this.do_thumbnail&&(e=await this.thumbnail(e,this.size,this.resample)),this.do_center_crop){let t,s;Number.isInteger(this.crop_size)?(t=this.crop_size,s=this.crop_size):(t=this.crop_size.width,s=this.crop_size.height),e=await e.center_crop(t,s)}const c=[e.height,e.width];let u=Float32Array.from(e.data),_=[e.height,e.width,e.channels];if(this.do_rescale&&this.rescale(u),t??this.do_normalize){let t=this.image_mean;Array.isArray(this.image_mean)||(t=new Array(e.channels).fill(t));let s=this.image_std;if(Array.isArray(this.image_std)||(s=new Array(e.channels).fill(t)),t.length!==e.channels||s.length!==e.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${t.length}) and \`image_std\` (${s.length}) must match the number of channels in the image (${e.channels}).`);for(let r=0;r<u.length;r+=e.channels)for(let o=0;o<e.channels;++o)u[r+o]=(u[r+o]-t[o])/s[o]}if(s??this.do_pad)if(this.pad_size){const t=this.pad_image(u,[e.height,e.width,e.channels],this.pad_size);[u,_]=t}else if(this.size_divisibility){const[e,t]=d([_[1],_[0]],this.size_divisibility);[u,_]=this.pad_image(u,_,{width:e,height:t})}if(a??this.do_flip_channel_order){if(3!==_[2])throw new Error("Flipping channel order is only supported for RGB images.");for(let e=0;e<u.length;e+=3){const t=u[e];u[e]=u[e+2],u[e+2]=t}}return{original_size:[l,i],reshaped_input_size:c,pixel_values:new o.Tensor("float32",u,_).permute(2,0,1)}}async _call(e,...t){Array.isArray(e)||(e=[e]);const s=await Promise.all(e.map((e=>this.preprocess(e))));return{pixel_values:(0,o.stack)(s.map((e=>e.pixel_values)),0),original_sizes:s.map((e=>e.original_size)),reshaped_input_sizes:s.map((e=>e.reshaped_input_size))}}static async from_pretrained(e,t={}){return new this(await(0,i.getModelJSON)(e,l.IMAGE_PROCESSOR_NAME,!0,t))}}},"./src/base/processing_utils.js":(e,t,s)=>{s.r(t),s.d(t,{Processor:()=>a});var r=s("./src/utils/constants.js"),o=s("./src/utils/generic.js"),n=s("./src/utils/hub.js");class a extends o.Callable{static classes=["image_processor_class","tokenizer_class","feature_extractor_class"];static uses_processor_config=!1;static uses_chat_template_file=!1;constructor(e,t,s){super(),this.config=e,this.components=t,this.chat_template=s}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(e,t={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(e,{tokenize:!1,chat_template:this.chat_template??void 0,...t})}batch_decode(...e){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...e)}decode(...e){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...e)}async _call(e,...t){for(const s of[this.image_processor,this.feature_extractor,this.tokenizer])if(s)return s(e,...t);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(e,t={}){const[s,o,a]=await Promise.all([this.uses_processor_config?(0,n.getModelJSON)(e,r.PROCESSOR_NAME,!0,t):{},Promise.all(this.classes.filter((e=>e in this)).map((async s=>{const r=await this[s].from_pretrained(e,t);return[s.replace(/_class$/,""),r]}))).then(Object.fromEntries),this.uses_chat_template_file?(0,n.getModelText)(e,r.CHAT_TEMPLATE_NAME,!0,t):null]);return new this(s,o,a)}}},"./src/configs.js":(e,t,s)=>{s.r(t),s.d(t,{AutoConfig:()=>l,PretrainedConfig:()=>i,getKeyValueShapes:()=>a});var r=s("./src/utils/core.js"),o=s("./src/utils/hub.js");function n(e){const t={};let s={};switch(e.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"smolvlm":case"gemma3n":s=n(e.text_config);break;case"moondream1":s=n(e.phi_config);break;case"musicgen":s=n(e.decoder);break;case"multi_modality":s=n(e.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":t.num_heads="num_attention_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":case"llava_qwen2":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size",t.num_attention_heads="num_attention_heads";break;case"qwen3":case"gemma":case"gemma2":case"gemma3_text":case"gemma3n_text":case"glm":case"helium":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.dim_kv="head_dim";break;case"openelm":t.num_heads="num_kv_heads",t.num_layers="num_transformer_layers",t.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":t.num_heads="num_heads",t.num_layers="num_layers",t.hidden_size="hidden_size";break;case"bloom":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="hidden_size";break;case"mpt":t.num_heads="n_heads",t.num_layers="n_layers",t.hidden_size="d_model";break;case"exaone":t.num_heads="num_key_value_heads",t.num_layers="num_layers",t.dim_kv="head_dim",t.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":t.num_decoder_layers="num_decoder_layers",t.num_decoder_heads="num_heads",t.decoder_dim_kv="d_kv",t.num_encoder_layers="num_layers",t.num_encoder_heads="num_heads",t.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="d_model",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="d_model";break;case"speecht5":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="hidden_size",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="hidden_size";break;case"trocr":t.num_encoder_layers=t.num_decoder_layers="decoder_layers",t.num_encoder_heads=t.num_decoder_heads="decoder_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="d_model";break;case"musicgen_decoder":t.num_encoder_layers=t.num_decoder_layers="num_hidden_layers",t.num_encoder_heads=t.num_decoder_heads="num_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="hidden_size";break;case"moonshine":t.num_decoder_layers="decoder_num_hidden_layers",t.num_decoder_heads="decoder_num_key_value_heads",t.num_encoder_layers="encoder_num_hidden_layers",t.num_encoder_heads="encoder_num_key_value_heads",t.encoder_hidden_size=t.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const o=n(e.decoder),a="num_decoder_layers"in o,i=(0,r.pick)(e,["model_type","is_encoder_decoder"]);return a?(i.num_decoder_layers=o.num_decoder_layers,i.num_decoder_heads=o.num_decoder_heads,i.decoder_hidden_size=o.decoder_hidden_size,i.num_encoder_layers=o.num_encoder_layers,i.num_encoder_heads=o.num_encoder_heads,i.encoder_hidden_size=o.encoder_hidden_size):(i.num_layers=o.num_layers,i.num_heads=o.num_heads,i.hidden_size=o.hidden_size),i}const o={...s,...(0,r.pick)(e,["model_type","multi_query","is_encoder_decoder"])};for(const s in t)o[s]=e[t[s]];return o}function a(e,{prefix:t="past_key_values",batch_size:s=1}={}){const r={},o=e.normalized_config;if(o.is_encoder_decoder&&"num_encoder_heads"in o&&"num_decoder_heads"in o){const e=o.encoder_dim_kv??o.encoder_hidden_size/o.num_encoder_heads,n=o.decoder_dim_kv??o.decoder_hidden_size/o.num_decoder_heads,a=[s,o.num_encoder_heads,0,e],i=[s,o.num_decoder_heads,0,n];for(let e=0;e<o.num_decoder_layers;++e)r[`${t}.${e}.encoder.key`]=a,r[`${t}.${e}.encoder.value`]=a,r[`${t}.${e}.decoder.key`]=i,r[`${t}.${e}.decoder.value`]=i}else{const e=o.num_heads,n=o.num_layers,a=o.dim_kv??o.hidden_size/(o.num_attention_heads??e);if("falcon"===o.model_type){const o=[s*e,0,a];for(let e=0;e<n;++e)r[`${t}.${e}.key`]=o,r[`${t}.${e}.value`]=o}else if(o.multi_query){const o=[s*e,0,2*a];for(let e=0;e<n;++e)r[`${t}.${e}.key_value`]=o}else if("bloom"===o.model_type){const o=[s*e,a,0],i=[s*e,0,a];for(let e=0;e<n;++e)r[`${t}.${e}.key`]=o,r[`${t}.${e}.value`]=i}else if("openelm"===o.model_type)for(let o=0;o<n;++o){const n=[s,e[o],0,a];r[`${t}.${o}.key`]=n,r[`${t}.${o}.value`]=n}else{const o=[s,e,0,a];for(let e=0;e<n;++e)r[`${t}.${e}.key`]=o,r[`${t}.${e}.value`]=o}}return r}class i{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(e){Object.assign(this,e),this.normalized_config=n(this)}static async from_pretrained(e,{progress_callback:t=null,config:s=null,cache_dir:r=null,local_files_only:n=!1,revision:a="main"}={}){!s||s instanceof i||(s=new i(s));const l=s??await async function(e,t){return await(0,o.getModelJSON)(e,"config.json",!0,t)}(e,{progress_callback:t,config:s,cache_dir:r,local_files_only:n,revision:a});return new this(l)}}class l{static async from_pretrained(...e){return i.from_pretrained(...e)}}},"./src/env.js":(e,t,s)=>{s.r(t),s.d(t,{apis:()=>g,env:()=>b});var r=s("node:fs"),o=s("node:path"),n=s("node:url");const a="undefined"!=typeof window&&void 0!==window.document,i="undefined"!=typeof self&&["DedicatedWorkerGlobalScope","ServiceWorkerGlobalScope","SharedWorkerGlobalScope"].includes(self.constructor?.name),l="undefined"!=typeof self&&"caches"in self,c="undefined"!=typeof navigator&&"gpu"in navigator,d="undefined"!=typeof navigator&&"ml"in navigator,u="undefined"!=typeof process,_=u&&"node"===process?.release?.name,m=!x(r.default),p=!x(o.default),h=void 0!==globalThis.Deno,g=(globalThis.Bun,Object.freeze({IS_BROWSER_ENV:a,IS_WEBWORKER_ENV:i,IS_WEB_CACHE_AVAILABLE:l,IS_WEBGPU_AVAILABLE:c,IS_WEBNN_AVAILABLE:d,IS_PROCESS_AVAILABLE:u,IS_NODE_ENV:_,IS_FS_AVAILABLE:m,IS_PATH_AVAILABLE:p})),f=m&&p;let M="./";if(f){const e=Object(import.meta).url;e?M=o.default.dirname(o.default.dirname(n.default.fileURLToPath(e))):"undefined"!=typeof __dirname&&(M=o.default.dirname(__dirname))}const w=f?o.default.join(M,"/.cache/"):null,T="/models/",b={version:"3.6.1",backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(a||i),localModelPath:f?o.default.join(M,T):T,useFS:m,useBrowserCache:l&&!h,useFSCache:m,cacheDir:w,useCustomCache:!1,customCache:null};function x(e){return 0===Object.keys(e).length}},"./src/generation/configuration_utils.js":(e,t,s)=>{s.r(t),s.d(t,{GenerationConfig:()=>o});var r=s("./src/utils/core.js");class o{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;streamer=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(e){Object.assign(this,(0,r.pick)(e,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(e,t,s)=>{s.r(t),s.d(t,{ClassifierFreeGuidanceLogitsProcessor:()=>f,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>c,LogitsProcessor:()=>n,LogitsProcessorList:()=>i,LogitsWarper:()=>a,MinLengthLogitsProcessor:()=>p,MinNewTokensLengthLogitsProcessor:()=>h,NoBadWordsLogitsProcessor:()=>g,NoRepeatNGramLogitsProcessor:()=>_,RepetitionPenaltyLogitsProcessor:()=>m,SuppressTokensAtBeginLogitsProcessor:()=>d,TemperatureLogitsWarper:()=>M,TopKLogitsWarper:()=>T,TopPLogitsWarper:()=>w,WhisperTimeStampLogitsProcessor:()=>u});var r=s("./src/utils/generic.js"),o=(s("./src/utils/tensor.js"),s("./src/utils/maths.js"));class n extends r.Callable{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class a extends r.Callable{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class i extends r.Callable{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,t){let s=t;for(const t of this.processors)s=t(e,s);return s}[Symbol.iterator](){return this.processors.values()}}class l extends n{constructor(e){super(),this.bos_token_id=e}_call(e,t){for(let s=0;s<e.length;++s)if(1===e[s].length){const e=t[s].data;e.fill(-1/0),e[this.bos_token_id]=0}return t}}class c extends n{constructor(e,t){super(),this.max_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let s=0;s<e.length;++s)if(e[s].length===this.max_length-1){const e=t[s].data;e.fill(-1/0);for(const t of this.eos_token_id)e[t]=0}return t}}class d extends n{constructor(e,t){super(),this.begin_suppress_tokens=e,this.begin_index=t}_call(e,t){for(let s=0;s<e.length;++s)if(e[s].length===this.begin_index){const e=t[s].data;for(const t of this.begin_suppress_tokens)e[t]=-1/0}return t}}class u extends n{constructor(e,t){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=t.length,t.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,t){for(let s=0;s<e.length;++s){const r=t[s].data;if(r[this.no_timestamps_token_id]=-1/0,e[s].length===this.begin_index-1){r.fill(-1/0),r[this.timestamp_begin]=0;continue}const n=e[s].slice(this.begin_index),a=n.length>=1&&n[n.length-1]>=this.timestamp_begin,i=n.length<2||n[n.length-2]>=this.timestamp_begin;if(a&&(i?r.subarray(this.timestamp_begin).fill(-1/0):r.subarray(0,this.eos_token_id).fill(-1/0)),e[s].length===this.begin_index&&null!==this.max_initial_timestamp_index){const e=this.timestamp_begin+this.max_initial_timestamp_index;r.subarray(e+1).fill(-1/0)}const l=(0,o.log_softmax)(r);Math.log(l.subarray(this.timestamp_begin).map(Math.exp).reduce(((e,t)=>e+t)))>(0,o.max)(l.subarray(0,this.timestamp_begin))[0]&&r.subarray(0,this.timestamp_begin).fill(-1/0)}return t}}class _ extends n{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const t=e.length,s=[];for(let r=0;r<t+1-this.no_repeat_ngram_size;++r){const t=[];for(let s=0;s<this.no_repeat_ngram_size;++s)t.push(e[r+s]);s.push(t.map(Number))}const r=new Map;for(const e of s){const t=e.slice(0,e.length-1),s=JSON.stringify(t),o=r.get(s)??[];o.push(e[e.length-1]),r.set(s,o)}return r}getGeneratedNgrams(e,t){const s=t.slice(t.length+1-this.no_repeat_ngram_size,t.length);return e.get(JSON.stringify(s.map(Number)))??[]}calcBannedNgramTokens(e){const t=[];if(e.length+1<this.no_repeat_ngram_size)return t;{const t=this.getNgrams(e);return this.getGeneratedNgrams(t,e)}}_call(e,t){for(let s=0;s<e.length;++s){const r=t[s].data,o=this.calcBannedNgramTokens(e[s]);for(const e of o)r[e]=-1/0}return t}}class m extends n{constructor(e){super(),this.penalty=e}_call(e,t){for(let s=0;s<e.length;++s){const r=t[s].data;for(const t of new Set(e[s])){const e=Number(t);r[e]<0?r[e]*=this.penalty:r[e]/=this.penalty}}return t}}class p extends n{constructor(e,t){super(),this.min_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let s=0;s<e.length;++s)if(e[s].length<this.min_length){const e=t[s].data;for(const t of this.eos_token_id)e[t]=-1/0}return t}}class h extends n{constructor(e,t,s){super(),this.prompt_length_to_skip=e,this.min_new_tokens=t,this.eos_token_id=Array.isArray(s)?s:[s]}_call(e,t){for(let s=0;s<e.length;++s){if(e[s].length-this.prompt_length_to_skip<this.min_new_tokens){const e=t[s].data;for(const t of this.eos_token_id)e[t]=-1/0}}return t}}class g extends n{constructor(e,t){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let s=0;s<e.length;++s){const r=t[s].data,o=e[s];for(const e of this.bad_words_ids){if(o.length<e.length-1)continue;let t=!0;for(let s=1;s<=e.length-1;++s)if(e.at(-s-1)!=o.at(-s)){t=!1;break}t&&(r[e.at(-1)]=-1/0)}}return t}}class f extends n{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,t){if(t.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${t.dims[0]} for the logits and ${e.length} for the input ids.`);const s=e.length,r=t.slice([0,s],null),o=t.slice([s,t.dims[0]],null);for(let e=0;e<o.data.length;++e)o.data[e]+=(r.data[e]-o.data[e])*this.guidance_scale;return o}}class M extends a{constructor(e){if(super(),"number"!=typeof e||e<=0){let t=`\`temperature\` (=${e}) must be a strictly positive float, otherwise your next token scores will be invalid.`;0===e&&(t+=" If you're looking for greedy decoding strategies, set `do_sample=false`.")}this.temperature=e}_call(e,t){const s=t.data;for(let e=0;e<s.length;++e)s[e]/=this.temperature;return t}}class w extends a{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:s=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(s)||s<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${s}`);this.top_p=e,this.filter_value=t,this.min_tokens_to_keep=s}}class T extends a{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:s=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,s),this.filter_value=t}}},"./src/generation/logits_sampler.js":(e,t,s)=>{s.r(t),s.d(t,{LogitsSampler:()=>a});var r=s("./src/utils/generic.js"),o=s("./src/utils/tensor.js"),n=s("./src/utils/maths.js");s("./src/generation/configuration_utils.js");class a extends r.Callable{constructor(e){super(),this.generation_config=e}async _call(e){return this.sample(e)}async sample(e){throw Error("sample should be implemented in subclasses.")}getLogits(e,t){let s=e.dims.at(-1),r=e.data;if(-1===t)r=r.slice(-s);else{let e=t*s;r=r.slice(e,e+s)}return r}randomSelect(e){let t=0;for(let s=0;s<e.length;++s)t+=e[s];let s=Math.random()*t;for(let t=0;t<e.length;++t)if(s-=e[t],s<=0)return t;return 0}static getSampler(e){if(e.do_sample)return new l(e);if(e.num_beams>1)return new c(e);if(e.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${e.num_return_sequences}.`);return new i(e)}}class i extends a{async sample(e){const t=(0,n.max)(e.data)[1];return[[BigInt(t),0]]}}class l extends a{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[s,r]=await(0,o.topk)(e,t),a=(0,n.softmax)(s.data);return Array.from({length:this.generation_config.num_beams},(()=>{const e=this.randomSelect(a);return[r.data[e],Math.log(a[e])]}))}}class c extends a{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[s,r]=await(0,o.topk)(e,t),a=(0,n.softmax)(s.data);return Array.from({length:this.generation_config.num_beams},((e,t)=>[r.data[t],Math.log(a[t])]))}}},"./src/generation/stopping_criteria.js":(e,t,s)=>{s.r(t),s.d(t,{EosTokenCriteria:()=>i,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>a,StoppingCriteria:()=>o,StoppingCriteriaList:()=>n});var r=s("./src/utils/generic.js");class o extends r.Callable{_call(e,t){throw Error("StoppingCriteria needs to be subclassed")}}class n extends r.Callable{constructor(){super(),this.criteria=[]}push(e){this.criteria.push(e)}extend(e){e instanceof n?e=e.criteria:e instanceof o&&(e=[e]),this.criteria.push(...e)}_call(e,t){const s=new Array(e.length).fill(!1);for(const r of this.criteria){const o=r(e,t);for(let e=0;e<s.length;++e)s[e]||=o[e]}return s}[Symbol.iterator](){return this.criteria.values()}}class a extends o{constructor(e,t=null){super(),this.max_length=e,this.max_position_embeddings=t}_call(e){return e.map((e=>e.length>=this.max_length))}}class i extends o{constructor(e){super(),Array.isArray(e)||(e=[e]),this.eos_token_id=e}_call(e,t){return e.map((e=>{const t=e.at(-1);return this.eos_token_id.some((e=>t==e))}))}}class l extends o{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(e,t){return new Array(e.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(e,t,s)=>{s.r(t),s.d(t,{BaseStreamer:()=>a,TextStreamer:()=>l,WhisperTextStreamer:()=>c});var r=s("./src/utils/core.js"),o=s("./src/tokenizers.js"),n=s("./src/env.js");class a{put(e){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const i=n.apis.IS_PROCESS_AVAILABLE?e=>process.stdout.write(e):e=>console.log(e);class l extends a{constructor(e,{skip_prompt:t=!1,callback_function:s=null,token_callback_function:r=null,skip_special_tokens:o=!0,decode_kwargs:n={},...a}={}){super(),this.tokenizer=e,this.skip_prompt=t,this.callback_function=s??i,this.token_callback_function=r,this.decode_kwargs={skip_special_tokens:o,...n,...a},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(e){if(e.length>1)throw Error("TextStreamer only supports batch size of 1");const t=this.next_tokens_are_prompt;if(t&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const s=e[0];this.token_callback_function?.(s),this.token_cache=(0,r.mergeArrays)(this.token_cache,s);const n=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let a;t||n.endsWith("\n")?(a=n.slice(this.print_len),this.token_cache=[],this.print_len=0):n.length>0&&(0,o.is_chinese_char)(n.charCodeAt(n.length-1))?(a=n.slice(this.print_len),this.print_len+=a.length):(a=n.slice(this.print_len,n.lastIndexOf(" ")+1),this.print_len+=a.length),this.on_finalized_text(a,!1)}end(){let e;if(this.token_cache.length>0){e=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0}else e="";this.next_tokens_are_prompt=!0,this.on_finalized_text(e,!0)}on_finalized_text(e,t){e.length>0&&this.callback_function?.(e),t&&this.callback_function===i&&n.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.("\n")}}class c extends l{constructor(e,{skip_prompt:t=!1,callback_function:s=null,token_callback_function:r=null,on_chunk_start:o=null,on_chunk_end:n=null,on_finalize:a=null,time_precision:i=.02,skip_special_tokens:l=!0,decode_kwargs:c={}}={}){super(e,{skip_prompt:t,skip_special_tokens:l,callback_function:s,token_callback_function:r,decode_kwargs:c}),this.timestamp_begin=e.timestamp_begin,this.on_chunk_start=o,this.on_chunk_end=n,this.on_finalize=a,this.time_precision=i,this.waiting_for_timestamp=!1}put(e){if(e.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const t=e[0];if(1===t.length){const e=Number(t[0])-this.timestamp_begin;if(e>=0){const s=e*this.time_precision;return this.waiting_for_timestamp?this.on_chunk_end?.(s):this.on_chunk_start?.(s),this.waiting_for_timestamp=!this.waiting_for_timestamp,void this.token_callback_function?.(t)}}return super.put(e)}end(){super.end(),this.on_finalize?.()}}},"./src/models.js":(e,t,s)=>{s.r(t),s.d(t,{ASTForAudioClassification:()=>As,ASTModel:()=>Ss,ASTPreTrainedModel:()=>Cs,AlbertForMaskedLM:()=>Ot,AlbertForQuestionAnswering:()=>Nt,AlbertForSequenceClassification:()=>Vt,AlbertModel:()=>jt,AlbertPreTrainedModel:()=>Dt,AutoModel:()=>pd,AutoModelForAudioClassification:()=>Id,AutoModelForAudioFrameClassification:()=>Dd,AutoModelForAudioTextToText:()=>Wd,AutoModelForCTC:()=>Ld,AutoModelForCausalLM:()=>bd,AutoModelForDepthEstimation:()=>Od,AutoModelForDocumentQuestionAnswering:()=>jd,AutoModelForImageClassification:()=>Fd,AutoModelForImageFeatureExtraction:()=>Rd,AutoModelForImageMatting:()=>Vd,AutoModelForImageSegmentation:()=>yd,AutoModelForImageTextToText:()=>qd,AutoModelForImageToImage:()=>Nd,AutoModelForMaskGeneration:()=>Ed,AutoModelForMaskedLM:()=>xd,AutoModelForNormalEstimation:()=>Bd,AutoModelForObjectDetection:()=>Sd,AutoModelForPoseEstimation:()=>Gd,AutoModelForQuestionAnswering:()=>Pd,AutoModelForSemanticSegmentation:()=>vd,AutoModelForSeq2SeqLM:()=>fd,AutoModelForSequenceClassification:()=>hd,AutoModelForSpeechSeq2Seq:()=>Md,AutoModelForTextToSpectrogram:()=>wd,AutoModelForTextToWaveform:()=>Td,AutoModelForTokenClassification:()=>gd,AutoModelForUniversalSegmentation:()=>Cd,AutoModelForVision2Seq:()=>kd,AutoModelForXVector:()=>zd,AutoModelForZeroShotObjectDetection:()=>Ad,BartForConditionalGeneration:()=>Yt,BartForSequenceClassification:()=>Kt,BartModel:()=>Jt,BartPretrainedModel:()=>Ht,BaseModelOutput:()=>ae,BeitForImageClassification:()=>zn,BeitModel:()=>In,BeitPreTrainedModel:()=>Ln,BertForMaskedLM:()=>ce,BertForQuestionAnswering:()=>_e,BertForSequenceClassification:()=>de,BertForTokenClassification:()=>ue,BertModel:()=>le,BertPreTrainedModel:()=>ie,BlenderbotForConditionalGeneration:()=>as,BlenderbotModel:()=>ns,BlenderbotPreTrainedModel:()=>os,BlenderbotSmallForConditionalGeneration:()=>cs,BlenderbotSmallModel:()=>ls,BlenderbotSmallPreTrainedModel:()=>is,BloomForCausalLM:()=>qo,BloomModel:()=>Ro,BloomPreTrainedModel:()=>Go,CLIPModel:()=>sr,CLIPPreTrainedModel:()=>tr,CLIPSegForImageSegmentation:()=>wr,CLIPSegModel:()=>Mr,CLIPSegPreTrainedModel:()=>fr,CLIPTextModel:()=>rr,CLIPTextModelWithProjection:()=>or,CLIPVisionModel:()=>nr,CLIPVisionModelWithProjection:()=>ar,CamembertForMaskedLM:()=>Ue,CamembertForQuestionAnswering:()=>He,CamembertForSequenceClassification:()=>Qe,CamembertForTokenClassification:()=>Xe,CamembertModel:()=>$e,CamembertPreTrainedModel:()=>We,CausalLMOutput:()=>Yd,CausalLMOutputWithPast:()=>Kd,ChineseCLIPModel:()=>_r,ChineseCLIPPreTrainedModel:()=>ur,ClapAudioModelWithProjection:()=>Ml,ClapModel:()=>gl,ClapPreTrainedModel:()=>hl,ClapTextModelWithProjection:()=>fl,CodeGenForCausalLM:()=>Br,CodeGenModel:()=>Or,CodeGenPreTrainedModel:()=>Nr,CohereForCausalLM:()=>po,CohereModel:()=>mo,CoherePreTrainedModel:()=>_o,ConvBertForMaskedLM:()=>ze,ConvBertForQuestionAnswering:()=>Ve,ConvBertForSequenceClassification:()=>De,ConvBertForTokenClassification:()=>je,ConvBertModel:()=>Ie,ConvBertPreTrainedModel:()=>Le,ConvNextForImageClassification:()=>Qa,ConvNextModel:()=>Ua,ConvNextPreTrainedModel:()=>$a,ConvNextV2ForImageClassification:()=>Ja,ConvNextV2Model:()=>Ha,ConvNextV2PreTrainedModel:()=>Xa,DFineForObjectDetection:()=>ta,DFineModel:()=>ea,DFinePreTrainedModel:()=>Zn,DPTForDepthEstimation:()=>ka,DPTModel:()=>Pa,DPTPreTrainedModel:()=>xa,DacDecoderModel:()=>Pc,DacDecoderOutput:()=>Tc,DacEncoderModel:()=>xc,DacEncoderOutput:()=>wc,DacModel:()=>bc,DacPreTrainedModel:()=>Mc,DebertaForMaskedLM:()=>Ke,DebertaForQuestionAnswering:()=>tt,DebertaForSequenceClassification:()=>Ze,DebertaForTokenClassification:()=>et,DebertaModel:()=>Ye,DebertaPreTrainedModel:()=>Je,DebertaV2ForMaskedLM:()=>ot,DebertaV2ForQuestionAnswering:()=>it,DebertaV2ForSequenceClassification:()=>nt,DebertaV2ForTokenClassification:()=>at,DebertaV2Model:()=>rt,DebertaV2PreTrainedModel:()=>st,DecisionTransformerModel:()=>Kl,DecisionTransformerPreTrainedModel:()=>Yl,DeiTForImageClassification:()=>la,DeiTModel:()=>ia,DeiTPreTrainedModel:()=>aa,DepthAnythingForDepthEstimation:()=>ya,DepthAnythingPreTrainedModel:()=>Fa,DepthProForDepthEstimation:()=>La,DepthProPreTrainedModel:()=>Ea,DetrForObjectDetection:()=>Vn,DetrForSegmentation:()=>Nn,DetrModel:()=>jn,DetrObjectDetectionOutput:()=>On,DetrPreTrainedModel:()=>Dn,DetrSegmentationOutput:()=>Bn,Dinov2ForImageClassification:()=>Za,Dinov2Model:()=>Ka,Dinov2PreTrainedModel:()=>Ya,Dinov2WithRegistersForImageClassification:()=>si,Dinov2WithRegistersModel:()=>ti,Dinov2WithRegistersPreTrainedModel:()=>ei,DistilBertForMaskedLM:()=>mt,DistilBertForQuestionAnswering:()=>_t,DistilBertForSequenceClassification:()=>dt,DistilBertForTokenClassification:()=>ut,DistilBertModel:()=>ct,DistilBertPreTrainedModel:()=>lt,DonutSwinModel:()=>Wa,DonutSwinPreTrainedModel:()=>qa,EfficientNetForImageClassification:()=>Al,EfficientNetModel:()=>Sl,EfficientNetPreTrainedModel:()=>Cl,ElectraForMaskedLM:()=>Be,ElectraForQuestionAnswering:()=>qe,ElectraForSequenceClassification:()=>Ge,ElectraForTokenClassification:()=>Re,ElectraModel:()=>Oe,ElectraPreTrainedModel:()=>Ne,EsmForMaskedLM:()=>gt,EsmForSequenceClassification:()=>ft,EsmForTokenClassification:()=>Mt,EsmModel:()=>ht,EsmPreTrainedModel:()=>pt,ExaoneForCausalLM:()=>Kr,ExaoneModel:()=>Yr,ExaonePreTrainedModel:()=>Jr,FalconForCausalLM:()=>pl,FalconModel:()=>ml,FalconPreTrainedModel:()=>_l,FastViTForImageClassification:()=>fn,FastViTModel:()=>gn,FastViTPreTrainedModel:()=>hn,Florence2ForConditionalGeneration:()=>Ws,Florence2PreTrainedModel:()=>qs,GLPNForDepthEstimation:()=>Ra,GLPNModel:()=>Ga,GLPNPreTrainedModel:()=>Ba,GPT2LMHeadModel:()=>xr,GPT2Model:()=>br,GPT2PreTrainedModel:()=>Tr,GPTBigCodeForCausalLM:()=>Vr,GPTBigCodeModel:()=>jr,GPTBigCodePreTrainedModel:()=>Dr,GPTJForCausalLM:()=>zr,GPTJModel:()=>Ir,GPTJPreTrainedModel:()=>Lr,GPTNeoForCausalLM:()=>Cr,GPTNeoModel:()=>vr,GPTNeoPreTrainedModel:()=>yr,GPTNeoXForCausalLM:()=>Er,GPTNeoXModel:()=>Ar,GPTNeoXPreTrainedModel:()=>Sr,Gemma2ForCausalLM:()=>To,Gemma2Model:()=>wo,Gemma2PreTrainedModel:()=>Mo,Gemma3ForCausalLM:()=>Po,Gemma3Model:()=>xo,Gemma3PreTrainedModel:()=>bo,Gemma3nForConditionalGeneration:()=>Hs,Gemma3nPreTrainedModel:()=>Xs,GemmaForCausalLM:()=>fo,GemmaModel:()=>go,GemmaPreTrainedModel:()=>ho,GlmForCausalLM:()=>Hr,GlmModel:()=>Xr,GlmPreTrainedModel:()=>Qr,GraniteForCausalLM:()=>uo,GraniteModel:()=>co,GranitePreTrainedModel:()=>lo,GroundingDinoForObjectDetection:()=>oi,GroundingDinoPreTrainedModel:()=>ri,GroupViTModel:()=>pn,GroupViTPreTrainedModel:()=>mn,HeliumForCausalLM:()=>Ur,HeliumModel:()=>$r,HeliumPreTrainedModel:()=>Wr,HieraForImageClassification:()=>ua,HieraModel:()=>da,HieraPreTrainedModel:()=>ca,HubertForCTC:()=>qi,HubertForSequenceClassification:()=>Wi,HubertModel:()=>Ri,HubertPreTrainedModel:()=>Gi,IJepaForImageClassification:()=>tn,IJepaModel:()=>en,IJepaPreTrainedModel:()=>Zo,Idefics3ForConditionalGeneration:()=>Ys,Idefics3PreTrainedModel:()=>Js,ImageMattingOutput:()=>Zd,JAISLMHeadModel:()=>Fr,JAISModel:()=>kr,JAISPreTrainedModel:()=>Pr,JinaCLIPModel:()=>pr,JinaCLIPPreTrainedModel:()=>mr,JinaCLIPTextModel:()=>hr,JinaCLIPVisionModel:()=>gr,LiteWhisperForConditionalGeneration:()=>zs,LlamaForCausalLM:()=>qr,LlamaModel:()=>Rr,LlamaPreTrainedModel:()=>Gr,LlavaForConditionalGeneration:()=>Bs,LlavaOnevisionForConditionalGeneration:()=>Gs,LlavaPreTrainedModel:()=>Os,LlavaQwen2ForCausalLM:()=>Qs,LongT5ForConditionalGeneration:()=>$t,LongT5Model:()=>Wt,LongT5PreTrainedModel:()=>qt,M2M100ForConditionalGeneration:()=>fi,M2M100Model:()=>gi,M2M100PreTrainedModel:()=>hi,MBartForCausalLM:()=>rs,MBartForConditionalGeneration:()=>ts,MBartForSequenceClassification:()=>ss,MBartModel:()=>es,MBartPreTrainedModel:()=>Zt,MPNetForMaskedLM:()=>yt,MPNetForQuestionAnswering:()=>St,MPNetForSequenceClassification:()=>vt,MPNetForTokenClassification:()=>Ct,MPNetModel:()=>Ft,MPNetPreTrainedModel:()=>kt,MT5ForConditionalGeneration:()=>Xt,MT5Model:()=>Qt,MT5PreTrainedModel:()=>Ut,MarianMTModel:()=>pi,MarianModel:()=>mi,MarianPreTrainedModel:()=>_i,MaskFormerForInstanceSegmentation:()=>Oa,MaskFormerModel:()=>Na,MaskFormerPreTrainedModel:()=>Va,MaskedLMOutput:()=>Hd,Metric3DForDepthEstimation:()=>za,Metric3DPreTrainedModel:()=>Ia,Metric3Dv2ForDepthEstimation:()=>ja,Metric3Dv2PreTrainedModel:()=>Da,MgpstrForSceneTextRecognition:()=>rc,MgpstrModelOutput:()=>tc,MgpstrPreTrainedModel:()=>sc,MimiDecoderModel:()=>fc,MimiDecoderOutput:()=>pc,MimiEncoderModel:()=>gc,MimiEncoderOutput:()=>mc,MimiModel:()=>hc,MimiPreTrainedModel:()=>_c,MistralForCausalLM:()=>ll,MistralModel:()=>il,MistralPreTrainedModel:()=>al,MobileBertForMaskedLM:()=>bt,MobileBertForQuestionAnswering:()=>Pt,MobileBertForSequenceClassification:()=>xt,MobileBertModel:()=>Tt,MobileBertPreTrainedModel:()=>wt,MobileLLMForCausalLM:()=>to,MobileLLMModel:()=>eo,MobileLLMPreTrainedModel:()=>Zr,MobileNetV1ForImageClassification:()=>Vl,MobileNetV1ForSemanticSegmentation:()=>Nl,MobileNetV1Model:()=>jl,MobileNetV1PreTrainedModel:()=>Dl,MobileNetV2ForImageClassification:()=>Gl,MobileNetV2ForSemanticSegmentation:()=>Rl,MobileNetV2Model:()=>Bl,MobileNetV2PreTrainedModel:()=>Ol,MobileNetV3ForImageClassification:()=>$l,MobileNetV3ForSemanticSegmentation:()=>Ul,MobileNetV3Model:()=>Wl,MobileNetV3PreTrainedModel:()=>ql,MobileNetV4ForImageClassification:()=>Hl,MobileNetV4ForSemanticSegmentation:()=>Jl,MobileNetV4Model:()=>Xl,MobileNetV4PreTrainedModel:()=>Ql,MobileViTForImageClassification:()=>xn,MobileViTModel:()=>bn,MobileViTPreTrainedModel:()=>Tn,MobileViTV2ForImageClassification:()=>Fn,MobileViTV2Model:()=>kn,MobileViTV2PreTrainedModel:()=>Pn,ModelOutput:()=>ne,ModernBertForMaskedLM:()=>be,ModernBertForSequenceClassification:()=>xe,ModernBertForTokenClassification:()=>Pe,ModernBertModel:()=>Te,ModernBertPreTrainedModel:()=>we,Moondream1ForConditionalGeneration:()=>Rs,MoonshineForConditionalGeneration:()=>Vs,MoonshineModel:()=>js,MoonshinePreTrainedModel:()=>Ds,MptForCausalLM:()=>Uo,MptModel:()=>$o,MptPreTrainedModel:()=>Wo,MultiModalityCausalLM:()=>ec,MultiModalityPreTrainedModel:()=>Zl,MusicgenForCausalLM:()=>Il,MusicgenForConditionalGeneration:()=>zl,MusicgenModel:()=>Ll,MusicgenPreTrainedModel:()=>El,NeoBertForMaskedLM:()=>he,NeoBertForQuestionAnswering:()=>Me,NeoBertForSequenceClassification:()=>ge,NeoBertForTokenClassification:()=>fe,NeoBertModel:()=>pe,NeoBertPreTrainedModel:()=>me,NomicBertModel:()=>Fe,NomicBertPreTrainedModel:()=>ke,OPTForCausalLM:()=>Ho,OPTModel:()=>Xo,OPTPreTrainedModel:()=>Qo,Olmo2ForCausalLM:()=>io,Olmo2Model:()=>ao,Olmo2PreTrainedModel:()=>no,OlmoForCausalLM:()=>oo,OlmoModel:()=>ro,OlmoPreTrainedModel:()=>so,OpenELMForCausalLM:()=>yo,OpenELMModel:()=>Fo,OpenELMPreTrainedModel:()=>ko,OwlViTForObjectDetection:()=>Cn,OwlViTModel:()=>vn,OwlViTPreTrainedModel:()=>yn,Owlv2ForObjectDetection:()=>En,Owlv2Model:()=>An,Owlv2PreTrainedModel:()=>Sn,PaliGemmaForConditionalGeneration:()=>Us,PaliGemmaPreTrainedModel:()=>$s,PatchTSMixerForPrediction:()=>cc,PatchTSMixerModel:()=>lc,PatchTSMixerPreTrainedModel:()=>ic,PatchTSTForPrediction:()=>ac,PatchTSTModel:()=>nc,PatchTSTPreTrainedModel:()=>oc,Phi3ForCausalLM:()=>Bo,Phi3Model:()=>Oo,Phi3PreTrainedModel:()=>No,Phi3VForCausalLM:()=>er,Phi3VPreTrainedModel:()=>Zs,PhiForCausalLM:()=>Vo,PhiModel:()=>jo,PhiPreTrainedModel:()=>Do,PreTrainedModel:()=>oe,PretrainedMixin:()=>Cc,PvtForImageClassification:()=>an,PvtModel:()=>nn,PvtPreTrainedModel:()=>on,PyAnnoteForAudioFrameClassification:()=>Fi,PyAnnoteModel:()=>ki,PyAnnotePreTrainedModel:()=>Pi,QuestionAnsweringModelOutput:()=>Jd,Qwen2ForCausalLM:()=>So,Qwen2Model:()=>Co,Qwen2PreTrainedModel:()=>vo,Qwen2VLForConditionalGeneration:()=>zo,Qwen2VLPreTrainedModel:()=>Io,Qwen3ForCausalLM:()=>Lo,Qwen3Model:()=>Eo,Qwen3PreTrainedModel:()=>Ao,RFDetrForObjectDetection:()=>Yn,RFDetrModel:()=>Jn,RFDetrObjectDetectionOutput:()=>Kn,RFDetrPreTrainedModel:()=>Hn,RTDetrForObjectDetection:()=>qn,RTDetrModel:()=>Rn,RTDetrObjectDetectionOutput:()=>Wn,RTDetrPreTrainedModel:()=>Gn,RTDetrV2ForObjectDetection:()=>Qn,RTDetrV2Model:()=>Un,RTDetrV2ObjectDetectionOutput:()=>Xn,RTDetrV2PreTrainedModel:()=>$n,ResNetForImageClassification:()=>pa,ResNetModel:()=>ma,ResNetPreTrainedModel:()=>_a,RoFormerForMaskedLM:()=>Ce,RoFormerForQuestionAnswering:()=>Ee,RoFormerForSequenceClassification:()=>Se,RoFormerForTokenClassification:()=>Ae,RoFormerModel:()=>ve,RoFormerPreTrainedModel:()=>ye,RobertaForMaskedLM:()=>_s,RobertaForQuestionAnswering:()=>hs,RobertaForSequenceClassification:()=>ms,RobertaForTokenClassification:()=>ps,RobertaModel:()=>us,RobertaPreTrainedModel:()=>ds,SamImageSegmentationOutput:()=>ui,SamModel:()=>di,SamPreTrainedModel:()=>ci,SapiensForDepthEstimation:()=>Sa,SapiensForNormalEstimation:()=>Aa,SapiensForSemanticSegmentation:()=>Ca,SapiensPreTrainedModel:()=>va,SegformerForImageClassification:()=>Pl,SegformerForSemanticSegmentation:()=>kl,SegformerModel:()=>xl,SegformerPreTrainedModel:()=>bl,Seq2SeqLMOutput:()=>$d,SequenceClassifierOutput:()=>Ud,SiglipModel:()=>lr,SiglipPreTrainedModel:()=>ir,SiglipTextModel:()=>cr,SiglipVisionModel:()=>dr,SmolVLMForConditionalGeneration:()=>Ks,SnacDecoderModel:()=>vc,SnacEncoderModel:()=>yc,SnacModel:()=>Fc,SnacPreTrainedModel:()=>kc,SpeechT5ForSpeechToText:()=>tl,SpeechT5ForTextToSpeech:()=>sl,SpeechT5HifiGan:()=>rl,SpeechT5Model:()=>el,SpeechT5PreTrainedModel:()=>Zi,SqueezeBertForMaskedLM:()=>Lt,SqueezeBertForQuestionAnswering:()=>zt,SqueezeBertForSequenceClassification:()=>It,SqueezeBertModel:()=>Et,SqueezeBertPreTrainedModel:()=>At,StableLmForCausalLM:()=>vl,StableLmModel:()=>yl,StableLmPreTrainedModel:()=>Fl,Starcoder2ForCausalLM:()=>ul,Starcoder2Model:()=>dl,Starcoder2PreTrainedModel:()=>cl,StyleTextToSpeech2Model:()=>Ki,StyleTextToSpeech2PreTrainedModel:()=>Yi,Swin2SRForImageSuperResolution:()=>ba,Swin2SRModel:()=>Ta,Swin2SRPreTrainedModel:()=>wa,SwinForImageClassification:()=>fa,SwinForSemanticSegmentation:()=>Ma,SwinModel:()=>ga,SwinPreTrainedModel:()=>ha,T5ForConditionalGeneration:()=>Rt,T5Model:()=>Gt,T5PreTrainedModel:()=>Bt,TableTransformerForObjectDetection:()=>oa,TableTransformerModel:()=>ra,TableTransformerObjectDetectionOutput:()=>na,TableTransformerPreTrainedModel:()=>sa,TokenClassifierOutput:()=>Xd,TrOCRForCausalLM:()=>nl,TrOCRPreTrainedModel:()=>ol,UltravoxModel:()=>uc,UltravoxPreTrainedModel:()=>dc,UniSpeechForCTC:()=>Ai,UniSpeechForSequenceClassification:()=>Ei,UniSpeechModel:()=>Si,UniSpeechPreTrainedModel:()=>Ci,UniSpeechSatForAudioFrameClassification:()=>ji,UniSpeechSatForCTC:()=>zi,UniSpeechSatForSequenceClassification:()=>Di,UniSpeechSatModel:()=>Ii,UniSpeechSatPreTrainedModel:()=>Li,ViTForImageClassification:()=>Ko,ViTMAEModel:()=>cn,ViTMAEPreTrainedModel:()=>ln,ViTMSNForImageClassification:()=>_n,ViTMSNModel:()=>un,ViTMSNPreTrainedModel:()=>dn,ViTModel:()=>Yo,ViTPreTrainedModel:()=>Jo,VisionEncoderDecoderModel:()=>Ns,VitMatteForImageMatting:()=>wn,VitMattePreTrainedModel:()=>Mn,VitPoseForPoseEstimation:()=>rn,VitPosePreTrainedModel:()=>sn,VitsModel:()=>Tl,VitsModelOutput:()=>eu,VitsPreTrainedModel:()=>wl,Wav2Vec2BertForCTC:()=>Oi,Wav2Vec2BertForSequenceClassification:()=>Bi,Wav2Vec2BertModel:()=>Ni,Wav2Vec2BertPreTrainedModel:()=>Vi,Wav2Vec2ForAudioFrameClassification:()=>xi,Wav2Vec2ForCTC:()=>Ti,Wav2Vec2ForSequenceClassification:()=>bi,Wav2Vec2Model:()=>wi,Wav2Vec2PreTrainedModel:()=>Mi,WavLMForAudioFrameClassification:()=>Ji,WavLMForCTC:()=>Qi,WavLMForSequenceClassification:()=>Xi,WavLMForXVector:()=>Hi,WavLMModel:()=>Ui,WavLMPreTrainedModel:()=>$i,WeSpeakerResNetModel:()=>vi,WeSpeakerResNetPreTrainedModel:()=>yi,WhisperForConditionalGeneration:()=>Is,WhisperModel:()=>Ls,WhisperPreTrainedModel:()=>Es,XLMForQuestionAnswering:()=>bs,XLMForSequenceClassification:()=>ws,XLMForTokenClassification:()=>Ts,XLMModel:()=>fs,XLMPreTrainedModel:()=>gs,XLMRobertaForMaskedLM:()=>ks,XLMRobertaForQuestionAnswering:()=>vs,XLMRobertaForSequenceClassification:()=>Fs,XLMRobertaForTokenClassification:()=>ys,XLMRobertaModel:()=>Ps,XLMRobertaPreTrainedModel:()=>xs,XLMWithLMHeadModel:()=>Ms,XVectorOutput:()=>Qd,YolosForObjectDetection:()=>ii,YolosModel:()=>ai,YolosObjectDetectionOutput:()=>li,YolosPreTrainedModel:()=>ni});var r=s("./src/configs.js"),o=s("./src/backends/onnx.js"),n=s("./src/utils/dtypes.js"),a=s("./src/utils/generic.js"),i=s("./src/utils/core.js"),l=s("./src/utils/hub.js"),c=s("./src/utils/constants.js"),d=s("./src/generation/logits_process.js"),u=s("./src/generation/configuration_utils.js"),_=s("./src/utils/tensor.js"),m=s("./src/utils/image.js"),p=s("./src/utils/maths.js"),h=s("./src/generation/stopping_criteria.js"),g=s("./src/generation/logits_sampler.js"),f=s("./src/env.js"),M=s("./src/models/whisper/generation_whisper.js"),w=s("./src/models/whisper/common_whisper.js");const T=0,b=1,x=2,P=3,k=4,F=5,y=6,v=7,C=8,S=9,A=10,E=11,L=12,I=new Map,z=new Map,D=new Map;async function j(e,t,s){return Object.fromEntries(await Promise.all(Object.keys(t).map((async a=>{const{buffer_or_path:i,session_options:c,session_config:d}=await async function(e,t,s){let a=s.config?.["transformers.js_config"]??{},i=s.device??a.device;i&&"string"!=typeof i&&(i.hasOwnProperty(t)?i=i[t]:(console.warn(`device not specified for "${t}". Using the default device.`),i=null));const c=i??(f.apis.IS_NODE_ENV?"cpu":"wasm"),d=(0,o.deviceToExecutionProviders)(c),u=a.device_config??{};u.hasOwnProperty(c)&&(a={...a,...u[c]});let _=s.dtype??a.dtype;if("string"!=typeof _&&(_&&_.hasOwnProperty(t)?_=_[t]:(_=n.DEFAULT_DEVICE_DTYPE_MAPPING[c]??n.DATA_TYPES.fp32,console.warn(`dtype not specified for "${t}". Using the default dtype (${_}) for this device (${c}).`))),_===n.DATA_TYPES.auto){let e=a.dtype;"string"!=typeof e&&(e=e?.[t]),_=e&&e!==n.DATA_TYPES.auto&&n.DATA_TYPES.hasOwnProperty(e)?e:n.DEFAULT_DEVICE_DTYPE_MAPPING[c]??n.DATA_TYPES.fp32}const m=_;if(!n.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(m))throw new Error(`Invalid dtype: ${m}. Should be one of: ${Object.keys(n.DATA_TYPES).join(", ")}`);if(m===n.DATA_TYPES.fp16&&"webgpu"===c&&!await(0,n.isWebGpuFp16Supported)())throw new Error(`The device (${c}) does not support fp16.`);const p=a.kv_cache_dtype,h=p?"string"==typeof p?p:p[m]??"float32":void 0;if(h&&!["float32","float16"].includes(h))throw new Error(`Invalid kv_cache_dtype: ${h}. Should be one of: float32, float16`);const g={dtype:m,kv_cache_dtype:h,device:c},M=`${t}${n.DEFAULT_DTYPE_SUFFIX_MAPPING[m]}.onnx`,w=`${s.subfolder??""}/${M}`,T={...s.session_options};T.executionProviders??=d;const b=a.free_dimension_overrides;b?T.freeDimensionOverrides??=b:c.startsWith("webnn")&&!T.freeDimensionOverrides&&console.warn(`WebNN does not currently support dynamic shapes and requires 'free_dimension_overrides' to be set in config.json, preferably as a field within config["transformers.js_config"]["device_config"]["${c}"]. When 'free_dimension_overrides' is not set, you may experience significant performance degradation.`);const x=f.apis.IS_NODE_ENV&&f.env.useFSCache,P=(0,l.getModelFile)(e,w,!0,s,x),k=s.use_external_data_format??a.use_external_data_format;let F=[];if(k){let r;r="object"==typeof k?k.hasOwnProperty(M)?k[M]:!!k.hasOwnProperty(t)&&k[t]:k;const o=+r;if(o>l.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${o}) exceeds the maximum allowed value (${l.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let t=0;t<o;++t){const r=`${M}_data${0===t?"":"_"+t}`,o=`${s.subfolder??""}/${r}`;F.push(new Promise((async(t,n)=>{const a=await(0,l.getModelFile)(e,o,!0,s,x);t(a instanceof Uint8Array?{path:r,data:a}:r)})))}}else void 0!==T.externalData&&(F=T.externalData.map((async t=>{if("string"==typeof t.data){const r=await(0,l.getModelFile)(e,t.data,!0,s);return{...t,data:r}}return t})));if(F.length>0){const e=await Promise.all(F);f.apis.IS_NODE_ENV||(T.externalData=e)}if("webgpu"===c){const e=(0,r.getKeyValueShapes)(s.config,{prefix:"present"});if(Object.keys(e).length>0&&!(0,o.isONNXProxy)()){const t={};for(const s in e)t[s]="gpu-buffer";T.preferredOutputLocation=t}}return{buffer_or_path:await P,session_options:T,session_config:g}}(e,t[a],s);return[a,await(0,o.createInferenceSession)(i,c,d)]}))))}async function V(e,t,s){return Object.fromEntries(await Promise.all(Object.keys(t).map((async r=>[r,await(0,l.getModelJSON)(e,t[r],!1,s)]))))}let N=Promise.resolve();async function O(e,t){const s=function(e,t){const s=Object.create(null),r=[];for(const n of e.inputNames){const e=t[n];e instanceof _.Tensor?s[n]=(0,o.isONNXProxy)()?e.clone():e:r.push(n)}if(r.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${r.join(", ")}.`);const n=Object.keys(t).length,a=e.inputNames.length;if(n>a){let s=Object.keys(t).filter((t=>!e.inputNames.includes(t)));console.warn(`WARNING: Too many inputs were provided (${n} > ${a}). The following inputs will be ignored: "${s.join(", ")}".`)}return s}(e,t);try{const t=Object.fromEntries(Object.entries(s).map((([e,t])=>[e,t.ort_tensor]))),r=()=>e.run(t);return B(await(f.apis.IS_BROWSER_ENV||f.apis.IS_WEBWORKER_ENV?N=N.then(r):r()))}catch(e){const t=Object.fromEntries(Object.entries(s).map((([e,t])=>{const s={type:t.type,dims:t.dims,location:t.location};return"gpu-buffer"!==s.location&&(s.data=t.data),[e,s]})));throw console.error(`An error occurred during model execution: "${e}".`),console.error("Inputs given to model:",t),e}}function B(e){for(let t in e)(0,o.isONNXTensor)(e[t])?e[t]=new _.Tensor(e[t]):"object"==typeof e[t]&&B(e[t]);return e}function G(e){if(e instanceof _.Tensor)return e;if(0===e.length)throw Error("items must be non-empty");if(Array.isArray(e[0])){if(e.some((t=>t.length!==e[0].length)))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new _.Tensor("int64",BigInt64Array.from(e.flat().map((e=>BigInt(e)))),[e.length,e[0].length])}return new _.Tensor("int64",BigInt64Array.from(e.map((e=>BigInt(e)))),[1,e.length])}function R(e){return new _.Tensor("bool",[e],[1])}async function q(e,t){let{encoder_outputs:s,input_ids:r,decoder_input_ids:o,...n}=t;if(!s){const r=(0,i.pick)(t,e.sessions.model.inputNames);s=(await W(e,r)).last_hidden_state}n.input_ids=o,n.encoder_hidden_states=s,e.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(n.encoder_attention_mask=t.attention_mask);return await U(e,n,!0)}async function W(e,t){const s=e.sessions.model,r=(0,i.pick)(t,s.inputNames);if(s.inputNames.includes("inputs_embeds")&&!r.inputs_embeds){if(!t.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");r.inputs_embeds=await e.encode_text({input_ids:t.input_ids})}if(s.inputNames.includes("token_type_ids")&&!r.token_type_ids){if(!r.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");r.token_type_ids=(0,_.zeros_like)(r.input_ids)}if(s.inputNames.includes("pixel_mask")&&!r.pixel_mask){if(!r.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const e=r.pixel_values.dims;r.pixel_mask=(0,_.ones)([e[0],e[2],e[3]])}return await O(s,r)}async function $(e,t){const s=await e.encode(t);return await e.decode(s)}async function U(e,t,s=!1){const r=e.sessions[s?"decoder_model_merged":"model"],{past_key_values:o,...n}=t;if(r.inputNames.includes("use_cache_branch")&&(n.use_cache_branch=R(!!o)),r.inputNames.includes("position_ids")&&n.attention_mask&&!n.position_ids){const t=["paligemma","gemma3_text","gemma3"].includes(e.config.model_type)?1:0;n.position_ids=function(e,t=null,s=0){const{input_ids:r,inputs_embeds:o,attention_mask:n}=e,{data:a,dims:i}=Z(n,s);let l=new _.Tensor("int64",a,i);if(t){const e=-(r??o).dims.at(1);l=l.slice(null,[e,null])}return l}(n,o,t)}e.addPastKeyValues(n,o);const a=(0,i.pick)(n,r.inputNames);return await O(r,a)}function Q({modality_token_id:e,inputs_embeds:t,modality_features:s,input_ids:r,attention_mask:o}){const n=r.tolist().map((t=>t.reduce(((t,s,r)=>(s==e&&t.push(r),t)),[]))),a=n.reduce(((e,t)=>e+t.length),0),i=s.dims[0];if(a!==i)throw new Error(`Number of tokens and features do not match: tokens: ${a}, features ${i}`);let l=0;for(let e=0;e<n.length;++e){const r=n[e],o=t[e];for(let e=0;e<r.length;++e)o[r[e]].data.set(s[l++].data)}return{inputs_embeds:t,attention_mask:o}}function X({image_token_id:e,inputs_embeds:t,image_features:s,input_ids:r,attention_mask:o}){return Q({modality_token_id:e,inputs_embeds:t,modality_features:s,input_ids:r,attention_mask:o})}function H({audio_token_id:e,inputs_embeds:t,audio_features:s,input_ids:r,attention_mask:o}){return Q({modality_token_id:e,inputs_embeds:t,modality_features:s,input_ids:r,attention_mask:o})}async function J(e,{encode_function:t,merge_function:s,modality_input_name:r,modality_output_name:o,input_ids:n=null,attention_mask:a=null,position_ids:i=null,inputs_embeds:l=null,past_key_values:c=null,generation_config:d=null,logits_processor:u=null,...m}){const p=m[r];if(!l)if(l=await e.encode_text({input_ids:n,...m}),p&&1!==n.dims[1]){const e=await t({[r]:p,...m});({inputs_embeds:l,attention_mask:a}=s({[o]:e,inputs_embeds:l,input_ids:n,attention_mask:a}))}else if(c&&p&&1===n.dims[1]){const e=n.dims[1],t=Object.values(c)[0].dims.at(-2);a=(0,_.cat)([(0,_.ones)([n.dims[0],t]),a.slice(null,[a.dims[1]-e,a.dims[1]])],1)}if(!i&&"qwen2_vl"===e.config.model_type){const{image_grid_thw:t,video_grid_thw:s}=m;[i]=e.get_rope_index(n,t,s,a)}return await U(e,{inputs_embeds:l,past_key_values:c,attention_mask:a,position_ids:i,generation_config:d,logits_processor:u},!0)}async function Y(e,t){return await J(e,{...t,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:e.encode_audio.bind(e),merge_function:e._merge_input_ids_with_audio_features.bind(e)})}async function K(e,t){return await J(e,{...t,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:e.encode_image.bind(e),merge_function:e._merge_input_ids_with_image_features.bind(e)})}function Z(e,t=0){const[s,r]=e.dims,o=e.data,n=new BigInt64Array(o.length);for(let e=0;e<s;++e){const s=e*r;let a=BigInt(t);for(let e=0;e<r;++e){const t=s+e;0n===o[t]?n[t]=BigInt(1):(n[t]=a,a+=o[t])}}return{data:n,dims:e.dims}}function ee(e,t,s,r){const o=s.past_key_values?Object.values(s.past_key_values)[0].dims.at(-2):0;if(!s.attention_mask){let e;for(const t of["input_ids","inputs_embeds","position_ids"])if(s[t]){e=s[t].dims;break}if(!e)throw new Error("attention_mask is not provided, and unable to infer its shape from model inputs.");s.attention_mask=(0,_.ones)([e[0],o+e[1]])}if(s.past_key_values){const{input_ids:e,attention_mask:t}=s;t&&t.dims[1]>e.dims[1]||o<e.dims[1]&&(s.input_ids=e.slice(null,[o,null]))}return s}function te(e,t,s,r){return s.past_key_values&&(t=t.map((e=>[e.at(-1)]))),{...s,decoder_input_ids:G(t)}}function se(e,...t){return e.config.is_encoder_decoder?te(e,...t):ee(e,...t)}function re(e,t,s,r){const o=!!s.past_key_values;if(null!==r.guidance_scale&&r.guidance_scale>1&&(o?s.input_ids=(0,_.cat)([s.input_ids,s.input_ids],0):(s.input_ids=(0,_.cat)([s.input_ids,(0,_.full_like)(s.input_ids,BigInt(r.pad_token_id))],0),s.attention_mask=(0,_.cat)([s.attention_mask,(0,_.full_like)(s.attention_mask,0n)],0))),!o&&s.pixel_values||(s.pixel_values=(0,_.full)([0,0,3,384,384],1)),o){const e=0,t=1,r=e>0?1:0,o=1;s.images_seq_mask=new _.Tensor("bool",new Array(e+t).fill(!0).fill(!1,0,t),[o,e+t]),s.images_emb_mask=new _.Tensor("bool",new Array(e).fill(!!r),[o,1,e])}return s}class oe extends a.Callable{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(e,t,s){super(),this.config=e,this.sessions=t,this.configs=s;const r=D.get(this.constructor),o=I.get(r);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,o){case k:this.can_generate=!0,this._forward=U,this._prepare_inputs_for_generation=ee;break;case x:case P:case v:this.can_generate=!0,this._forward=q,this._prepare_inputs_for_generation=te;break;case b:this._forward=q;break;case y:this.can_generate=!0,this._forward=K,this._prepare_inputs_for_generation=se;break;case A:this.can_generate=!0,this._forward=Y,this._prepare_inputs_for_generation=se;break;case S:case L:this.can_generate=!0,this._prepare_inputs_for_generation=se;break;case C:this.can_generate=!0,this._prepare_inputs_for_generation=re;break;case E:this._forward=$;break;default:this._forward=W}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const e=[];for(const t of Object.values(this.sessions))t?.handler?.dispose&&e.push(t.handler.dispose());return await Promise.all(e)}static async from_pretrained(e,{progress_callback:t=null,config:s=null,cache_dir:o=null,local_files_only:n=!1,revision:a="main",model_file_name:i=null,subfolder:l="onnx",device:d=null,dtype:u=null,use_external_data_format:_=null,session_options:m={}}={}){let p={progress_callback:t,config:s,cache_dir:o,local_files_only:n,revision:a,model_file_name:i,subfolder:l,device:d,dtype:u,use_external_data_format:_,session_options:m};const h=D.get(this),g=I.get(h);let f;if(s=p.config=await r.AutoConfig.from_pretrained(e,p),g===k)f=await Promise.all([j(e,{model:p.model_file_name??"model"},p),V(e,{generation_config:"generation_config.json"},p)]);else if(g===x||g===P)f=await Promise.all([j(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},p),V(e,{generation_config:"generation_config.json"},p)]);else if(g===F)f=await Promise.all([j(e,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},p)]);else if(g===b)f=await Promise.all([j(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},p)]);else if(g===y){const t={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};s.is_encoder_decoder&&(t.model="encoder_model"),f=await Promise.all([j(e,t,p),V(e,{generation_config:"generation_config.json"},p)])}else if(g===A){const t={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};f=await Promise.all([j(e,t,p),V(e,{generation_config:"generation_config.json"},p)])}else if(g===L){const t={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};f=await Promise.all([j(e,t,p),V(e,{generation_config:"generation_config.json"},p)])}else if(g===v)f=await Promise.all([j(e,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},p),V(e,{generation_config:"generation_config.json"},p)]);else if(g===C)f=await Promise.all([j(e,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},p),V(e,{generation_config:"generation_config.json"},p)]);else if(g===S)f=await Promise.all([j(e,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},p),V(e,{generation_config:"generation_config.json"},p)]);else if(g===E)f=await Promise.all([j(e,{encoder_model:"encoder_model",decoder_model:"decoder_model"},p)]);else{if(g!==T){const e=h??s?.model_type;"custom"!==e&&console.warn(`Model type for '${e}' not found, assuming encoder-only architecture. Please report this at ${c.GITHUB_ISSUE_URL}.`)}f=await Promise.all([j(e,{model:p.model_file_name??"model"},p)])}return new this(s,...f)}async _call(e){return await this.forward(e)}async forward(e){return await this._forward(this,e)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(e){const t=new d.LogitsProcessorList;return null!==e.temperature&&1!==e.temperature&&t.push(new d.TemperatureLogitsWarper(e.temperature)),null!==e.top_k&&0!==e.top_k&&t.push(new d.TopKLogitsWarper(e.top_k)),null!==e.top_p&&e.top_p<1&&t.push(new d.TopPLogitsWarper(e.top_p)),t}_get_logits_processor(e,t,s=null){const r=new d.LogitsProcessorList;if(null!==e.repetition_penalty&&1!==e.repetition_penalty&&r.push(new d.RepetitionPenaltyLogitsProcessor(e.repetition_penalty)),null!==e.no_repeat_ngram_size&&e.no_repeat_ngram_size>0&&r.push(new d.NoRepeatNGramLogitsProcessor(e.no_repeat_ngram_size)),null!==e.bad_words_ids&&r.push(new d.NoBadWordsLogitsProcessor(e.bad_words_ids,e.eos_token_id)),null!==e.min_length&&null!==e.eos_token_id&&e.min_length>0&&r.push(new d.MinLengthLogitsProcessor(e.min_length,e.eos_token_id)),null!==e.min_new_tokens&&null!==e.eos_token_id&&e.min_new_tokens>0&&r.push(new d.MinNewTokensLengthLogitsProcessor(t,e.min_new_tokens,e.eos_token_id)),null!==e.forced_bos_token_id&&r.push(new d.ForcedBOSTokenLogitsProcessor(e.forced_bos_token_id)),null!==e.forced_eos_token_id&&r.push(new d.ForcedEOSTokenLogitsProcessor(e.max_length,e.forced_eos_token_id)),null!==e.begin_suppress_tokens){const s=t>1||null===e.forced_bos_token_id?t:t+1;r.push(new d.SuppressTokensAtBeginLogitsProcessor(e.begin_suppress_tokens,s))}return null!==e.guidance_scale&&e.guidance_scale>1&&r.push(new d.ClassifierFreeGuidanceLogitsProcessor(e.guidance_scale)),null!==s&&r.extend(s),r}_prepare_generation_config(e,t,s=u.GenerationConfig){const r={...this.config};for(const e of["decoder","generator","text_config"])e in r&&Object.assign(r,r[e]);const o=new s(r);return Object.assign(o,this.generation_config??{}),e&&Object.assign(o,e),t&&Object.assign(o,(0,i.pick)(t,Object.getOwnPropertyNames(o))),o}_get_stopping_criteria(e,t=null){const s=new h.StoppingCriteriaList;return null!==e.max_length&&s.push(new h.MaxLengthCriteria(e.max_length,this.config.max_position_embeddings??null)),null!==e.eos_token_id&&s.push(new h.EosTokenCriteria(e.eos_token_id)),t&&s.extend(t),s}_validate_model_class(){if(!this.can_generate){const e=[Oc,qc,Nc,Ic],t=D.get(this.constructor),s=new Set,r=this.config.model_type;for(const t of e){const e=t.get(r);e&&s.add(e[0])}let o=`The current model class (${t}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw s.size>0&&(o+=` Please use the following class instead: ${[...s].join(", ")}`),Error(o)}}prepare_inputs_for_generation(...e){return this._prepare_inputs_for_generation(this,...e)}_update_model_kwargs_for_generation({generated_input_ids:e,outputs:t,model_inputs:s,is_encoder_decoder:r}){return s.past_key_values=this.getPastKeyValues(t,s.past_key_values),s.input_ids=new _.Tensor("int64",e.flat(),[e.length,1]),r||(s.attention_mask=(0,_.cat)([s.attention_mask,(0,_.ones)([s.attention_mask.dims[0],1])],1)),s.position_ids=null,s}_prepare_model_inputs({inputs:e,bos_token_id:t,model_kwargs:s}){const r=(0,i.pick)(s,this.forward_params),o=this.main_input_name;if(o in r){if(e)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else r[o]=e;return{inputs_tensor:r[o],model_inputs:r,model_input_name:o}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:e,model_inputs:t,model_input_name:s,generation_config:r}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!t.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:e,pixel_values:s,attention_mask:r,...o}=t,n=await this._prepare_inputs_embeds(t);t={...o,...(0,i.pick)(n,["inputs_embeds","attention_mask"])}}let{last_hidden_state:o}=await W(this,t);if(null!==r.guidance_scale&&r.guidance_scale>1)o=(0,_.cat)([o,(0,_.full_like)(o,0)],0),"attention_mask"in t&&(t.attention_mask=(0,_.cat)([t.attention_mask,(0,_.zeros_like)(t.attention_mask)],0));else if(t.decoder_input_ids){const e=G(t.decoder_input_ids).dims[0];if(e!==o.dims[0]){if(1!==o.dims[0])throw new Error(`The encoder outputs have a different batch size (${o.dims[0]}) than the decoder inputs (${e}).`);o=(0,_.cat)(Array.from({length:e},(()=>o)),0)}}return t.encoder_outputs=o,t}_prepare_decoder_input_ids_for_generation({batch_size:e,model_input_name:t,model_kwargs:s,decoder_start_token_id:r,bos_token_id:o,generation_config:n}){let{decoder_input_ids:a,...i}=s;if(!(a instanceof _.Tensor)){if(a)Array.isArray(a[0])||(a=Array.from({length:e},(()=>a)));else if(r??=o,"musicgen"===this.config.model_type)a=Array.from({length:e*this.config.decoder.num_codebooks},(()=>[r]));else if(Array.isArray(r)){if(r.length!==e)throw new Error(`\`decoder_start_token_id\` expcted to have length ${e} but got ${r.length}`);a=r}else a=Array.from({length:e},(()=>[r]));a=G(a)}return s.decoder_attention_mask=(0,_.ones_like)(a),{input_ids:a,model_inputs:i}}async generate({inputs:e=null,generation_config:t=null,logits_processor:s=null,stopping_criteria:r=null,streamer:o=null,...n}){this._validate_model_class(),t=this._prepare_generation_config(t,n);let{inputs_tensor:a,model_inputs:i,model_input_name:l}=this._prepare_model_inputs({inputs:e,model_kwargs:n});const c=this.config.is_encoder_decoder;let d;c&&("encoder_outputs"in i||(i=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:a,model_inputs:i,model_input_name:l,generation_config:t}))),c?({input_ids:d,model_inputs:i}=this._prepare_decoder_input_ids_for_generation({batch_size:i[l].dims.at(0),model_input_name:l,model_kwargs:i,decoder_start_token_id:t.decoder_start_token_id,bos_token_id:t.bos_token_id,generation_config:t})):d=i[l];let u=d.dims.at(-1);null!==t.max_new_tokens&&(t.max_length=u+t.max_new_tokens);const m=this._get_logits_processor(t,u,s),p=this._get_stopping_criteria(t,r),h=i[l].dims.at(0),f=g.LogitsSampler.getSampler(t),M=new Array(h).fill(0),w=d.tolist();let T;o&&o.put(w);let b={};for(;;){if(i=this.prepare_inputs_for_generation(w,i,t),T=await this.forward(i),t.output_attentions&&t.return_dict_in_generate){const e=this.getAttentions(T);for(const t in e)t in b||(b[t]=[]),b[t].push(e[t])}const e=m(w,T.logits.slice(null,-1,null)),s=[];for(let t=0;t<e.dims.at(0);++t){const r=e[t],o=await f(r);for(const[e,r]of o){const o=BigInt(e);M[t]+=r,w[t].push(o),s.push([o]);break}}o&&o.put(s);if(p(w).every((e=>e)))break;i=this._update_model_kwargs_for_generation({generated_input_ids:s,outputs:T,model_inputs:i,is_encoder_decoder:c})}o&&o.end();const x=this.getPastKeyValues(T,i.past_key_values,!0),P=new _.Tensor("int64",w.flat(),[w.length,w[0].length]);if(t.return_dict_in_generate)return{sequences:P,past_key_values:x,...b};for(const e of Object.values(T))"gpu-buffer"===e.location&&e.dispose();return P}getPastKeyValues(e,t,s=!1){const r=Object.create(null);for(const o in e)if(o.startsWith("present")){const n=o.replace("present","past_key_values"),a=o.includes("encoder");if(r[n]=a&&t?t[n]:e[o],t&&(!a||s)){const e=t[n];"gpu-buffer"===e.location&&e.dispose()}}return r}getAttentions(e){const t={};for(const s of["cross_attentions","encoder_attentions","decoder_attentions"])for(const r in e)r.startsWith(s)&&(s in t||(t[s]=[]),t[s].push(e[r]));return t}addPastKeyValues(e,t){if(t)Object.assign(e,t);else{const t=this.sessions.decoder_model_merged??this.sessions.model,s=t?.config?.kv_cache_dtype??"float32",o="float16"===s?new _.DataTypeMap.float16:[],n=(e[this.main_input_name]??e.attention_mask)?.dims?.[0]??1,a=(0,r.getKeyValueShapes)(this.config,{batch_size:n});for(const t in a)e[t]=new _.Tensor(s,o,a[t])}}async encode_image({pixel_values:e}){return(await O(this.sessions.vision_encoder,{pixel_values:e})).image_features}async encode_text({input_ids:e}){return(await O(this.sessions.embed_tokens,{input_ids:e})).inputs_embeds}async encode_audio({audio_values:e}){return(await O(this.sessions.audio_encoder,{audio_values:e})).audio_features}}class ne{}class ae extends ne{constructor({last_hidden_state:e,hidden_states:t=null,attentions:s=null}){super(),this.last_hidden_state=e,this.hidden_states=t,this.attentions=s}}class ie extends oe{}class le extends ie{}class ce extends ie{async _call(e){return new Hd(await super._call(e))}}class de extends ie{async _call(e){return new Ud(await super._call(e))}}class ue extends ie{async _call(e){return new Xd(await super._call(e))}}class _e extends ie{async _call(e){return new Jd(await super._call(e))}}class me extends oe{}class pe extends me{}class he extends me{async _call(e){return new Hd(await super._call(e))}}class ge extends me{async _call(e){return new Ud(await super._call(e))}}class fe extends me{async _call(e){return new Xd(await super._call(e))}}class Me extends me{async _call(e){return new Jd(await super._call(e))}}class we extends oe{}class Te extends we{}class be extends we{async _call(e){return new Hd(await super._call(e))}}class xe extends we{async _call(e){return new Ud(await super._call(e))}}class Pe extends we{async _call(e){return new Xd(await super._call(e))}}class ke extends oe{}class Fe extends ke{}class ye extends oe{}class ve extends ye{}class Ce extends ye{async _call(e){return new Hd(await super._call(e))}}class Se extends ye{async _call(e){return new Ud(await super._call(e))}}class Ae extends ye{async _call(e){return new Xd(await super._call(e))}}class Ee extends ye{async _call(e){return new Jd(await super._call(e))}}class Le extends oe{}class Ie extends Le{}class ze extends Le{async _call(e){return new Hd(await super._call(e))}}class De extends Le{async _call(e){return new Ud(await super._call(e))}}class je extends Le{async _call(e){return new Xd(await super._call(e))}}class Ve extends Le{async _call(e){return new Jd(await super._call(e))}}class Ne extends oe{}class Oe extends Ne{}class Be extends Ne{async _call(e){return new Hd(await super._call(e))}}class Ge extends Ne{async _call(e){return new Ud(await super._call(e))}}class Re extends Ne{async _call(e){return new Xd(await super._call(e))}}class qe extends Ne{async _call(e){return new Jd(await super._call(e))}}class We extends oe{}class $e extends We{}class Ue extends We{async _call(e){return new Hd(await super._call(e))}}class Qe extends We{async _call(e){return new Ud(await super._call(e))}}class Xe extends We{async _call(e){return new Xd(await super._call(e))}}class He extends We{async _call(e){return new Jd(await super._call(e))}}class Je extends oe{}class Ye extends Je{}class Ke extends Je{async _call(e){return new Hd(await super._call(e))}}class Ze extends Je{async _call(e){return new Ud(await super._call(e))}}class et extends Je{async _call(e){return new Xd(await super._call(e))}}class tt extends Je{async _call(e){return new Jd(await super._call(e))}}class st extends oe{}class rt extends st{}class ot extends st{async _call(e){return new Hd(await super._call(e))}}class nt extends st{async _call(e){return new Ud(await super._call(e))}}class at extends st{async _call(e){return new Xd(await super._call(e))}}class it extends st{async _call(e){return new Jd(await super._call(e))}}class lt extends oe{}class ct extends lt{}class dt extends lt{async _call(e){return new Ud(await super._call(e))}}class ut extends lt{async _call(e){return new Xd(await super._call(e))}}class _t extends lt{async _call(e){return new Jd(await super._call(e))}}class mt extends lt{async _call(e){return new Hd(await super._call(e))}}class pt extends oe{}class ht extends pt{}class gt extends pt{async _call(e){return new Hd(await super._call(e))}}class ft extends pt{async _call(e){return new Ud(await super._call(e))}}class Mt extends pt{async _call(e){return new Xd(await super._call(e))}}class wt extends oe{}class Tt extends wt{}class bt extends wt{async _call(e){return new Hd(await super._call(e))}}class xt extends wt{async _call(e){return new Ud(await super._call(e))}}class Pt extends wt{async _call(e){return new Jd(await super._call(e))}}class kt extends oe{}class Ft extends kt{}class yt extends kt{async _call(e){return new Hd(await super._call(e))}}class vt extends kt{async _call(e){return new Ud(await super._call(e))}}class Ct extends kt{async _call(e){return new Xd(await super._call(e))}}class St extends kt{async _call(e){return new Jd(await super._call(e))}}class At extends oe{}class Et extends At{}class Lt extends At{async _call(e){return new Hd(await super._call(e))}}class It extends At{async _call(e){return new Ud(await super._call(e))}}class zt extends At{async _call(e){return new Jd(await super._call(e))}}class Dt extends oe{}class jt extends Dt{}class Vt extends Dt{async _call(e){return new Ud(await super._call(e))}}class Nt extends Dt{async _call(e){return new Jd(await super._call(e))}}class Ot extends Dt{async _call(e){return new Hd(await super._call(e))}}class Bt extends oe{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class Gt extends Bt{}class Rt extends Bt{}class qt extends oe{}class Wt extends qt{}class $t extends qt{}class Ut extends oe{}class Qt extends Ut{}class Xt extends Ut{}class Ht extends oe{}class Jt extends Ht{}class Yt extends Ht{}class Kt extends Ht{async _call(e){return new Ud(await super._call(e))}}class Zt extends oe{}class es extends Zt{}class ts extends Zt{}class ss extends Zt{async _call(e){return new Ud(await super._call(e))}}class rs extends Zt{}class os extends oe{}class ns extends os{}class as extends os{}class is extends oe{}class ls extends is{}class cs extends is{}class ds extends oe{}class us extends ds{}class _s extends ds{async _call(e){return new Hd(await super._call(e))}}class ms extends ds{async _call(e){return new Ud(await super._call(e))}}class ps extends ds{async _call(e){return new Xd(await super._call(e))}}class hs extends ds{async _call(e){return new Jd(await super._call(e))}}class gs extends oe{}class fs extends gs{}class Ms extends gs{async _call(e){return new Hd(await super._call(e))}}class ws extends gs{async _call(e){return new Ud(await super._call(e))}}class Ts extends gs{async _call(e){return new Xd(await super._call(e))}}class bs extends gs{async _call(e){return new Jd(await super._call(e))}}class xs extends oe{}class Ps extends xs{}class ks extends xs{async _call(e){return new Hd(await super._call(e))}}class Fs extends xs{async _call(e){return new Ud(await super._call(e))}}class ys extends xs{async _call(e){return new Xd(await super._call(e))}}class vs extends xs{async _call(e){return new Jd(await super._call(e))}}class Cs extends oe{}class Ss extends Cs{}class As extends Cs{}class Es extends oe{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class Ls extends Es{}class Is extends Es{_prepare_generation_config(e,t){return super._prepare_generation_config(e,t,M.WhisperGenerationConfig)}_retrieve_init_tokens(e){const t=[e.decoder_start_token_id];let s=e.language;const r=e.task;if(e.is_multilingual){s||(console.warn("No language specified - defaulting to English (en)."),s="en");const o=`<|${(0,w.whisper_language_to_code)(s)}|>`;t.push(e.lang_to_id[o]),t.push(e.task_to_id[r??"transcribe"])}else if(s||r)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!e.return_timestamps&&e.no_timestamps_token_id&&t.at(-1)!==e.no_timestamps_token_id?t.push(e.no_timestamps_token_id):e.return_timestamps&&t.at(-1)===e.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),t.pop()),t.filter((e=>null!=e))}async generate({inputs:e=null,generation_config:t=null,logits_processor:s=null,stopping_criteria:r=null,...o}){t=this._prepare_generation_config(t,o);const n=o.decoder_input_ids??this._retrieve_init_tokens(t);if(t.return_timestamps&&(s??=new d.LogitsProcessorList,s.push(new d.WhisperTimeStampLogitsProcessor(t,n))),t.begin_suppress_tokens&&(s??=new d.LogitsProcessorList,s.push(new d.SuppressTokensAtBeginLogitsProcessor(t.begin_suppress_tokens,n.length))),t.return_token_timestamps){if(!t.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");"translate"===t.task&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),t.output_attentions=!0,t.return_dict_in_generate=!0}const a=await super.generate({inputs:e,generation_config:t,logits_processor:s,decoder_input_ids:n,...o});return t.return_token_timestamps&&(a.token_timestamps=this._extract_token_timestamps(a,t.alignment_heads,t.num_frames)),a}_extract_token_timestamps(e,t,s=null,r=.02){if(!e.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");null==s&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let o=this.config.median_filter_width;void 0===o&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),o=7);const n=e.cross_attentions,a=Array.from({length:this.config.decoder_layers},((e,t)=>(0,_.cat)(n.map((e=>e[t])),2))),l=(0,_.stack)(t.map((([e,t])=>{if(e>=a.length)throw new Error(`Layer index ${e} is out of bounds for cross attentions (length ${a.length}).`);return s?a[e].slice(null,t,null,[0,s]):a[e].slice(null,t)}))).transpose(1,0,2,3),[c,d]=(0,_.std_mean)(l,-2,0,!0),u=l.clone();for(let e=0;e<u.dims[0];++e){const t=u[e];for(let s=0;s<t.dims[0];++s){const r=t[s],n=c[e][s][0].data,a=d[e][s][0].data;for(let e=0;e<r.dims[0];++e){let t=r[e].data;for(let e=0;e<t.length;++e)t[e]=(t[e]-a[e])/n[e];t.set((0,p.medianFilter)(t,o))}}}const m=[(0,_.mean)(u,1)],h=e.sequences.dims,g=new _.Tensor("float32",new Float32Array(h[0]*h[1]),h);for(let e=0;e<h[0];++e){const t=m[e].neg().squeeze_(0),[s,o]=(0,p.dynamic_time_warping)(t.tolist()),n=Array.from({length:s.length-1},((e,t)=>s[t+1]-s[t])),a=(0,i.mergeArrays)([1],n).map((e=>!!e)),l=[];for(let e=0;e<a.length;++e)a[e]&&l.push(o[e]*r);g[e].data.set(l,1)}return g}}class zs extends Is{}class Ds extends oe{requires_attention_mask=!1;main_input_name="input_values";forward_params=["input_values","decoder_input_ids","past_key_values"]}class js extends Ds{}class Vs extends Ds{}class Ns extends oe{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class Os extends oe{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class Bs extends Os{_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),s=e.image_features.view(-1,t);return X({image_token_id:this.config.image_token_index,...e,image_features:s})}}class Gs extends Bs{}class Rs extends Bs{}class qs extends oe{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class Ws extends qs{_merge_input_ids_with_image_features({inputs_embeds:e,image_features:t,input_ids:s,attention_mask:r}){return{inputs_embeds:(0,_.cat)([t,e],1),attention_mask:(0,_.cat)([(0,_.ones)(t.dims.slice(0,2)),r],1)}}async _prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:s,attention_mask:r}){if(!e&&!t)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let o,n;return e&&(o=await this.encode_text({input_ids:e})),t&&(n=await this.encode_image({pixel_values:t})),o&&n?({inputs_embeds:s,attention_mask:r}=this._merge_input_ids_with_image_features({inputs_embeds:o,image_features:n,input_ids:e,attention_mask:r})):s=o||n,{inputs_embeds:s,attention_mask:r}}async forward({input_ids:e,pixel_values:t,attention_mask:s,decoder_input_ids:r,decoder_attention_mask:o,encoder_outputs:n,past_key_values:a,inputs_embeds:i,decoder_inputs_embeds:l}){if(i||({inputs_embeds:i,attention_mask:s}=await this._prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:i,attention_mask:s})),!n){let{last_hidden_state:e}=await W(this,{inputs_embeds:i,attention_mask:s});n=e}if(!l){if(!r)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");l=await this.encode_text({input_ids:r})}const c={inputs_embeds:l,attention_mask:o,encoder_attention_mask:s,encoder_hidden_states:n,past_key_values:a};return await U(this,c,!0)}}class $s extends oe{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class Us extends $s{_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),s=e.image_features.view(-1,t);return X({image_token_id:this.config.image_token_index,...e,image_features:s})}}class Qs extends Os{_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),s=e.image_features.view(-1,t);return X({image_token_id:this.config.image_token_index,...e,image_features:s})}}class Xs extends oe{forward_params=["input_ids","attention_mask","inputs_embeds","per_layer_inputs","position_ids","pixel_values","input_features","input_features_mask","past_key_values"]}class Hs extends Xs{async forward({input_ids:e=null,attention_mask:t=null,pixel_values:s=null,input_features:r=null,input_features_mask:o=null,position_ids:n=null,inputs_embeds:a=null,per_layer_inputs:i=null,past_key_values:l=null,generation_config:c=null,logits_processor:d=null,...u}){if(!(a&&i||(({inputs_embeds:a,per_layer_inputs:i}=await O(this.sessions.embed_tokens,{input_ids:e})),1===e.dims[1]))){if(s){const{image_features:r}=await O(this.sessions.vision_encoder,{pixel_values:s});({inputs_embeds:a,attention_mask:t}=this._merge_input_ids_with_image_features({image_features:r,inputs_embeds:a,input_ids:e,attention_mask:t}))}if(r){const{audio_features:s}=await O(this.sessions.audio_encoder,{input_features:r,input_features_mask:o});({inputs_embeds:a,attention_mask:t}=this._merge_input_ids_with_audio_features({audio_features:s,inputs_embeds:a,input_ids:e,attention_mask:t}))}}return await U(this,{inputs_embeds:a,per_layer_inputs:i,past_key_values:l,attention_mask:t,position_ids:n,generation_config:c,logits_processor:d},!0)}_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),s=e.image_features.view(-1,t);return X({image_token_id:this.config.image_token_id,...e,image_features:s})}_merge_input_ids_with_audio_features(e){const t=e.audio_features.dims.at(-1),s=e.audio_features.view(-1,t);return H({audio_token_id:this.config.audio_token_id,...e,audio_features:s})}}class Js extends oe{forward_params=["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"]}class Ys extends Js{async encode_image({pixel_values:e,pixel_attention_mask:t}){return(await O(this.sessions.vision_encoder,{pixel_values:e,pixel_attention_mask:t})).image_features}_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),s=e.image_features.view(-1,t);return X({image_token_id:this.config.image_token_id,...e,image_features:s})}}class Ks extends Ys{}class Zs extends oe{forward_params=["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"]}class er extends Zs{async forward({input_ids:e=null,attention_mask:t=null,pixel_values:s=null,image_sizes:r=null,position_ids:o=null,inputs_embeds:n=null,past_key_values:a=null,generation_config:i=null,logits_processor:l=null,...c}){if(!n){let t;if(s&&1!==e.dims[1]){if(!r)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:t}=await O(this.sessions.vision_encoder,{pixel_values:s,image_sizes:r}))}else{const e=this.config.normalized_config.hidden_size;t=new _.Tensor("float32",[],[0,e])}({inputs_embeds:n}=await O(this.sessions.prepare_inputs_embeds,{input_ids:e,image_features:t}))}return await U(this,{inputs_embeds:n,past_key_values:a,attention_mask:t,position_ids:o,generation_config:i,logits_processor:l},!1)}}class tr extends oe{}class sr extends tr{}class rr extends tr{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class or extends tr{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class nr extends tr{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class ar extends tr{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class ir extends oe{}class lr extends ir{}class cr extends ir{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class dr extends tr{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class ur extends oe{}class _r extends ur{}class mr extends oe{}class pr extends mr{async forward(e){const t=!e.input_ids,s=!e.pixel_values;if(t&&s)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(t&&(e.input_ids=(0,_.ones)([e.pixel_values.dims[0],1])),s){const{image_size:t}=this.config.vision_config;e.pixel_values=(0,_.full)([0,3,t,t],0)}const{text_embeddings:r,image_embeddings:o,l2norm_text_embeddings:n,l2norm_image_embeddings:a}=await super.forward(e),i={};return t||(i.text_embeddings=r,i.l2norm_text_embeddings=n),s||(i.image_embeddings=o,i.l2norm_image_embeddings=a),i}}class hr extends mr{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class gr extends mr{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class fr extends oe{}class Mr extends fr{}class wr extends fr{}class Tr extends oe{}class br extends Tr{}class xr extends Tr{}class Pr extends oe{}class kr extends Pr{}class Fr extends Pr{}class yr extends oe{}class vr extends yr{}class Cr extends yr{}class Sr extends oe{}class Ar extends Sr{}class Er extends Sr{}class Lr extends oe{}class Ir extends Lr{}class zr extends Lr{}class Dr extends oe{}class jr extends Dr{}class Vr extends Dr{}class Nr extends oe{}class Or extends Nr{}class Br extends Nr{}class Gr extends oe{}class Rr extends Gr{}class qr extends Gr{}class Wr extends oe{}class $r extends Wr{}class Ur extends Wr{}class Qr extends oe{}class Xr extends Qr{}class Hr extends Qr{}class Jr extends oe{}class Yr extends Jr{}class Kr extends Jr{}class Zr extends oe{}class eo extends Zr{}class to extends Zr{}class so extends oe{}class ro extends so{}class oo extends so{}class no extends oe{}class ao extends no{}class io extends no{}class lo extends oe{}class co extends lo{}class uo extends lo{}class _o extends oe{}class mo extends _o{}class po extends _o{}class ho extends oe{}class go extends ho{}class fo extends ho{}class Mo extends oe{}class wo extends Mo{}class To extends Mo{}class bo extends oe{}class xo extends bo{}class Po extends bo{}class ko extends oe{}class Fo extends ko{}class yo extends ko{}class vo extends oe{}class Co extends vo{}class So extends vo{}class Ao extends oe{}class Eo extends Ao{}class Lo extends Ao{}class Io extends oe{forward_params=["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"]}class zo extends Io{get_rope_index(e,t,s,r){const{vision_config:o,image_token_id:n,video_token_id:a,vision_start_token_id:i}=this.config,l=o.spatial_merge_size??2,c=[];if(t||s){let o=e.tolist();r||(r=(0,_.ones_like)(e));const d=r.tolist(),u=Array.from({length:3},(t=>Array.from({length:e.dims[0]},(t=>Array.from({length:e.dims[1]},(e=>1)))))),m=t?t.tolist():[],h=s?s.tolist():[];let g=0,f=0;for(let e=0;e<o.length;++e){const t=o[e].filter(((t,s)=>1==d[e][s])),s=t.reduce(((e,t,s)=>(t==i&&e.push(s),e)),[]).map((e=>t[e+1])),r=s.filter((e=>e==n)).length,_=s.filter((e=>e==a)).length;let M=[],w=0,T=r,b=_;for(let e=0;e<s.length;++e){const e=t.findIndex(((e,t)=>t>w&&e==n)),s=t.findIndex(((e,t)=>t>w&&e==a)),r=T>0&&-1!==e?e:t.length+1,o=b>0&&-1!==s?s:t.length+1;let i,c,d,u;r<o?([c,d,u]=m[g],++g,--T,i=r):([c,d,u]=h[f],++f,--b,i=o);const[_,x,P]=[Number(c),Math.floor(Number(d)/l),Math.floor(Number(u)/l)],k=i-w,F=M.length>0?(0,p.max)(M.at(-1))[0]+1:0;M.push(Array.from({length:3*k},((e,t)=>F+t%k)));const y=k+F,v=_*x*P,C=Array.from({length:v},((e,t)=>y+Math.floor(t/(x*P)))),S=Array.from({length:v},((e,t)=>y+Math.floor(t/P)%x)),A=Array.from({length:v},((e,t)=>y+t%P));M.push([C,S,A].flat()),w=i+v}if(w<t.length){const e=M.length>0?(0,p.max)(M.at(-1))[0]+1:0,s=t.length-w;M.push(Array.from({length:3*s},((t,r)=>e+r%s)))}const x=M.reduce(((e,t)=>e+t.length),0),P=new Array(x);let k=0;for(let e=0;e<3;++e)for(let t=0;t<M.length;++t){const s=M[t],r=s.length/3;for(let t=e*r;t<(e+1)*r;++t)P[k++]=s[t]}let F=0;const y=d[e];for(let t=0;t<y.length;++t)if(1==y[t]){for(let s=0;s<3;++s)u[s][e][t]=P[s*x/3+F];++F}const v=(0,p.max)(P)[0];c.push(v+1-o[e].length)}return[new _.Tensor("int64",u.flat(1/0),[3,e.dims[0],e.dims[1]]),new _.Tensor("int64",c,[c.length,1])]}if(r){const{data:e,dims:t}=Z(r),s=BigInt64Array.from({length:3*e.length},((t,s)=>e[s%e.length])),o=Array.from({length:t[0]},((s,r)=>(0,p.max)(e.subarray(t[1]*r,t[1]*(r+1)))[0]+1n+BigInt(t[1])));return[new _.Tensor("int64",s,[3,...t]),new _.Tensor("int64",o,[o.length,1])]}{const[t,s]=e.dims,r=BigInt64Array.from({length:3*t*s},((e,r)=>BigInt(Math.floor(r%s/t))));return[new _.Tensor("int64",r,[3,...e.dims]),(0,_.zeros)([t,1])]}}async encode_image({pixel_values:e,image_grid_thw:t}){return(await O(this.sessions.vision_encoder,{pixel_values:e,grid_thw:t})).image_features}_merge_input_ids_with_image_features(e){return X({image_token_id:this.config.image_token_id,...e})}prepare_inputs_for_generation(e,t,s){if(t.attention_mask&&!t.position_ids)if(t.past_key_values){t.pixel_values=null;const e=BigInt(Object.values(t.past_key_values)[0].dims.at(-2)),s=t.rope_deltas.map((t=>e+t));t.position_ids=(0,_.stack)([s,s,s],0)}else[t.position_ids,t.rope_deltas]=this.get_rope_index(t.input_ids,t.image_grid_thw,t.video_grid_thw,t.attention_mask);return t}}class Do extends oe{}class jo extends Do{}class Vo extends Do{}class No extends oe{}class Oo extends No{}class Bo extends No{}class Go extends oe{}class Ro extends Go{}class qo extends Go{}class Wo extends oe{}class $o extends Wo{}class Uo extends Wo{}class Qo extends oe{}class Xo extends Qo{}class Ho extends Qo{}class Jo extends oe{}class Yo extends Jo{}class Ko extends Jo{async _call(e){return new Ud(await super._call(e))}}class Zo extends oe{}class en extends Zo{}class tn extends Zo{async _call(e){return new Ud(await super._call(e))}}class sn extends oe{}class rn extends sn{}class on extends oe{}class nn extends on{}class an extends on{async _call(e){return new Ud(await super._call(e))}}class ln extends oe{}class cn extends ln{}class dn extends oe{}class un extends dn{}class _n extends dn{async _call(e){return new Ud(await super._call(e))}}class mn extends oe{}class pn extends mn{}class hn extends oe{}class gn extends hn{}class fn extends hn{async _call(e){return new Ud(await super._call(e))}}class Mn extends oe{}class wn extends Mn{async _call(e){return new Zd(await super._call(e))}}class Tn extends oe{}class bn extends Tn{}class xn extends Tn{async _call(e){return new Ud(await super._call(e))}}class Pn extends oe{}class kn extends Pn{}class Fn extends Pn{async _call(e){return new Ud(await super._call(e))}}class yn extends oe{}class vn extends yn{}class Cn extends yn{}class Sn extends oe{}class An extends Sn{}class En extends Sn{}class Ln extends oe{}class In extends Ln{}class zn extends Ln{async _call(e){return new Ud(await super._call(e))}}class Dn extends oe{}class jn extends Dn{}class Vn extends Dn{async _call(e){return new On(await super._call(e))}}class Nn extends Dn{async _call(e){return new Bn(await super._call(e))}}class On extends ne{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class Bn extends ne{constructor({logits:e,pred_boxes:t,pred_masks:s}){super(),this.logits=e,this.pred_boxes=t,this.pred_masks=s}}class Gn extends oe{}class Rn extends Gn{}class qn extends Gn{async _call(e){return new Wn(await super._call(e))}}class Wn extends ne{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class $n extends oe{}class Un extends $n{}class Qn extends $n{async _call(e){return new Xn(await super._call(e))}}class Xn extends Wn{}class Hn extends oe{}class Jn extends Hn{}class Yn extends Hn{async _call(e){return new Kn(await super._call(e))}}class Kn extends Wn{}class Zn extends oe{}class ea extends Zn{}class ta extends Zn{async _call(e){return new Wn(await super._call(e))}}class sa extends oe{}class ra extends sa{}class oa extends sa{async _call(e){return new na(await super._call(e))}}class na extends On{}class aa extends oe{}class ia extends aa{}class la extends aa{async _call(e){return new Ud(await super._call(e))}}class ca extends oe{}class da extends ca{}class ua extends ca{async _call(e){return new Ud(await super._call(e))}}class _a extends oe{}class ma extends _a{}class pa extends _a{async _call(e){return new Ud(await super._call(e))}}class ha extends oe{}class ga extends ha{}class fa extends ha{async _call(e){return new Ud(await super._call(e))}}class Ma extends ha{}class wa extends oe{}class Ta extends wa{}class ba extends wa{}class xa extends oe{}class Pa extends xa{}class ka extends xa{}class Fa extends oe{}class ya extends Fa{}class va extends oe{}class Ca extends va{}class Sa extends va{}class Aa extends va{}class Ea extends oe{}class La extends Ea{}class Ia extends oe{}class za extends Ia{}class Da extends oe{}class ja extends Da{}class Va extends oe{}class Na extends Va{}class Oa extends Va{}class Ba extends oe{}class Ga extends Ba{}class Ra extends Ba{}class qa extends oe{}class Wa extends qa{}class $a extends oe{}class Ua extends $a{}class Qa extends $a{async _call(e){return new Ud(await super._call(e))}}class Xa extends oe{}class Ha extends Xa{}class Ja extends Xa{async _call(e){return new Ud(await super._call(e))}}class Ya extends oe{}class Ka extends Ya{}class Za extends Ya{async _call(e){return new Ud(await super._call(e))}}class ei extends oe{}class ti extends ei{}class si extends ei{async _call(e){return new Ud(await super._call(e))}}class ri extends oe{}class oi extends ri{}class ni extends oe{}class ai extends ni{}class ii extends ni{async _call(e){return new li(await super._call(e))}}class li extends ne{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class ci extends oe{}class di extends ci{async get_image_embeddings({pixel_values:e}){return await W(this,{pixel_values:e})}async forward(e){if(e.image_embeddings&&e.image_positional_embeddings||(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels&&e.input_points){const t=e.input_points.dims.slice(0,-1),s=t.reduce(((e,t)=>e*t),1);e.input_labels=new _.Tensor("int64",new BigInt64Array(s).fill(1n),t)}const t={image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings};return e.input_points&&(t.input_points=e.input_points),e.input_labels&&(t.input_labels=e.input_labels),e.input_boxes&&(t.input_boxes=e.input_boxes),await O(this.sessions.prompt_encoder_mask_decoder,t)}async _call(e){return new ui(await super._call(e))}}class ui extends ne{constructor({iou_scores:e,pred_masks:t}){super(),this.iou_scores=e,this.pred_masks=t}}class _i extends oe{}class mi extends _i{}class pi extends _i{}class hi extends oe{}class gi extends hi{}class fi extends hi{}class Mi extends oe{}class wi extends Mi{}class Ti extends Mi{async _call(e){return new Yd(await super._call(e))}}class bi extends Mi{async _call(e){return new Ud(await super._call(e))}}class xi extends Mi{async _call(e){return new Xd(await super._call(e))}}class Pi extends oe{}class ki extends Pi{}class Fi extends Pi{async _call(e){return new Xd(await super._call(e))}}class yi extends oe{}class vi extends yi{}class Ci extends oe{}class Si extends Ci{}class Ai extends Ci{async _call(e){return new Yd(await super._call(e))}}class Ei extends Ci{async _call(e){return new Ud(await super._call(e))}}class Li extends oe{}class Ii extends Li{}class zi extends Li{async _call(e){return new Yd(await super._call(e))}}class Di extends Li{async _call(e){return new Ud(await super._call(e))}}class ji extends Li{async _call(e){return new Xd(await super._call(e))}}class Vi extends oe{}class Ni extends Vi{}class Oi extends Vi{async _call(e){return new Yd(await super._call(e))}}class Bi extends Vi{async _call(e){return new Ud(await super._call(e))}}class Gi extends oe{}class Ri extends Mi{}class qi extends Mi{async _call(e){return new Yd(await super._call(e))}}class Wi extends Mi{async _call(e){return new Ud(await super._call(e))}}class $i extends oe{}class Ui extends $i{}class Qi extends $i{async _call(e){return new Yd(await super._call(e))}}class Xi extends $i{async _call(e){return new Ud(await super._call(e))}}class Hi extends $i{async _call(e){return new Qd(await super._call(e))}}class Ji extends $i{async _call(e){return new Xd(await super._call(e))}}class Yi extends oe{}class Ki extends Yi{}class Zi extends oe{}class el extends Zi{}class tl extends Zi{}class sl extends Zi{async generate_speech(e,t,{threshold:s=.5,minlenratio:r=0,maxlenratio:o=20,vocoder:n=null}={}){const a={input_ids:e},{encoder_outputs:i,encoder_attention_mask:l}=await W(this,a),c=i.dims[1]/this.config.reduction_factor,d=Math.floor(c*o),u=Math.floor(c*r),m=this.config.num_mel_bins;let p=[],h=null,g=null,f=0;for(;;){++f;const e=R(!!g);let r;r=g?g.output_sequence_out:new _.Tensor("float32",new Float32Array(m),[1,1,m]);let o={use_cache_branch:e,output_sequence:r,encoder_attention_mask:l,speaker_embeddings:t,encoder_hidden_states:i};this.addPastKeyValues(o,h),g=await O(this.sessions.decoder_model_merged,o),h=this.getPastKeyValues(g,h);const{prob:n,spectrum:a}=g;if(p.push(a),f>=u&&(Array.from(n.data).filter((e=>e>=s)).length>0||f>=d))break}const M=(0,_.cat)(p),{waveform:w}=await O(n.sessions.model,{spectrogram:M});return{spectrogram:M,waveform:w}}}class rl extends oe{main_input_name="spectrogram"}class ol extends oe{}class nl extends ol{}class al extends oe{}class il extends al{}class ll extends al{}class cl extends oe{}class dl extends cl{}class ul extends cl{}class _l extends oe{}class ml extends _l{}class pl extends _l{}class hl extends oe{}class gl extends hl{}class fl extends hl{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class Ml extends hl{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"audio_model"})}}class wl extends oe{}class Tl extends wl{async _call(e){return new eu(await super._call(e))}}class bl extends oe{}class xl extends bl{}class Pl extends bl{}class kl extends bl{}class Fl extends oe{}class yl extends Fl{}class vl extends Fl{}class Cl extends oe{}class Sl extends Cl{}class Al extends Cl{async _call(e){return new Ud(await super._call(e))}}class El extends oe{}class Ll extends El{}class Il extends El{}class zl extends oe{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(e){const[t,s]=e.dims,r=this.config.decoder.num_codebooks,o=s-r;let n=0;for(let t=0;t<e.size;++t){if(e.data[t]===this.config.decoder.pad_token_id)continue;const a=t%s-Math.floor(t/s)%r;a>0&&a<=o&&(e.data[n++]=e.data[t])}const a=Math.floor(t/r),i=n/(a*r);return new _.Tensor(e.type,e.data.slice(0,n),[a,r,i])}prepare_inputs_for_generation(e,t,s){let r=structuredClone(e);for(let e=0;e<r.length;++e)for(let t=0;t<r[e].length;++t)e%this.config.decoder.num_codebooks>=t&&(r[e][t]=BigInt(this.config.decoder.pad_token_id));null!==s.guidance_scale&&s.guidance_scale>1&&(r=r.concat(r));return super.prepare_inputs_for_generation(r,t,s)}async generate(e){const t=await super.generate(e),s=this._apply_and_filter_by_delay_pattern_mask(t).unsqueeze_(0),{audio_values:r}=await O(this.sessions.encodec_decode,{audio_codes:s});return r}}class Dl extends oe{}class jl extends Dl{}class Vl extends Dl{async _call(e){return new Ud(await super._call(e))}}class Nl extends Dl{}class Ol extends oe{}class Bl extends Ol{}class Gl extends Ol{async _call(e){return new Ud(await super._call(e))}}class Rl extends Ol{}class ql extends oe{}class Wl extends ql{}class $l extends ql{async _call(e){return new Ud(await super._call(e))}}class Ul extends ql{}class Ql extends oe{}class Xl extends Ql{}class Hl extends Ql{async _call(e){return new Ud(await super._call(e))}}class Jl extends Ql{}class Yl extends oe{}class Kl extends Yl{}class Zl extends oe{}class ec extends Zl{forward_params=["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"];constructor(...e){super(...e),this._generation_mode="text"}async forward(e){const t=this._generation_mode??"text";let s;if("text"!==t&&e.past_key_values){const t=this.sessions.gen_img_embeds,r=(0,i.pick)({image_ids:e.input_ids},t.inputNames);s=await O(t,r)}else{const t=this.sessions.prepare_inputs_embeds,r=(0,i.pick)(e,t.inputNames);s=await O(t,r)}const r={...e,...s},o=await U(this,r),n=this.sessions["text"===t?"lm_head":"gen_head"];if(!n)throw new Error(`Unable to find "${n}" generation head`);const a=await O(n,(0,i.pick)(o,n.inputNames));return{...s,...o,...a}}async generate(e){return this._generation_mode="text",super.generate(e)}async generate_images(e){this._generation_mode="image";const t=(e.inputs??e[this.main_input_name]).dims[1],s=(await super.generate(e)).slice(null,[t,null]),r=this.sessions.image_decode,{decoded_image:o}=await O(r,{generated_tokens:s}),n=o.add_(1).mul_(127.5).clamp_(0,255).to("uint8"),a=[];for(const e of n){const t=m.RawImage.fromTensor(e);a.push(t)}return a}}class tc extends ne{constructor({char_logits:e,bpe_logits:t,wp_logits:s}){super(),this.char_logits=e,this.bpe_logits=t,this.wp_logits=s}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class sc extends oe{}class rc extends sc{async _call(e){return new tc(await super._call(e))}}class oc extends oe{}class nc extends oc{}class ac extends oc{}class ic extends oe{}class lc extends ic{}class cc extends ic{}class dc extends oe{forward_params=["input_ids","attention_mask","position_ids","audio_values","past_key_values"]}class uc extends dc{_merge_input_ids_with_audio_features(e){const t=e.audio_features.dims.at(-1),s=e.audio_features.view(-1,t);return H({audio_token_id:this.config.ignore_index,...e,audio_features:s})}}class _c extends oe{main_input_name="input_values";forward_params=["input_values"]}class mc extends ne{constructor({audio_codes:e}){super(),this.audio_codes=e}}class pc extends ne{constructor({audio_values:e}){super(),this.audio_values=e}}class hc extends _c{async encode(e){return new mc(await O(this.sessions.encoder_model,e))}async decode(e){return new pc(await O(this.sessions.decoder_model,e))}}class gc extends _c{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"encoder_model"})}}class fc extends _c{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"decoder_model"})}}class Mc extends oe{main_input_name="input_values";forward_params=["input_values"]}class wc extends ne{constructor({audio_codes:e}){super(),this.audio_codes=e}}class Tc extends ne{constructor({audio_values:e}){super(),this.audio_values=e}}class bc extends Mc{async encode(e){return new wc(await O(this.sessions.encoder_model,e))}async decode(e){return new Tc(await O(this.sessions.decoder_model,e))}}class xc extends Mc{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"encoder_model"})}}class Pc extends Mc{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"decoder_model"})}}class kc extends oe{main_input_name="input_values";forward_params=["input_values"]}class Fc extends kc{async encode(e){return await O(this.sessions.encoder_model,e)}async decode(e){return await O(this.sessions.decoder_model,e)}}class yc extends kc{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"encoder_model"})}}class vc extends kc{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"decoder_model"})}}class Cc{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(e,{progress_callback:t=null,config:s=null,cache_dir:o=null,local_files_only:n=!1,revision:a="main",model_file_name:i=null,subfolder:l="onnx",device:c=null,dtype:d=null,use_external_data_format:u=null,session_options:_={}}={}){const m={progress_callback:t,config:s,cache_dir:o,local_files_only:n,revision:a,model_file_name:i,subfolder:l,device:c,dtype:d,use_external_data_format:u,session_options:_};if(m.config=await r.AutoConfig.from_pretrained(e,m),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const p=m.config.model_type;for(const t of this.MODEL_CLASS_MAPPINGS){let s=t.get(p);if(!s){for(const e of t.values())if(e[0]===p){s=e;break}if(!s)continue}return await s[1].from_pretrained(e,m)}if(this.BASE_IF_FAIL)return md.has(p)||console.warn(`Unknown model class "${p}", attempting to construct from base class.`),await oe.from_pretrained(e,m);throw Error(`Unsupported model type: ${p}`)}}const Sc=new Map([["bert",["BertModel",le]],["neobert",["NeoBertModel",pe]],["modernbert",["ModernBertModel",Te]],["nomic_bert",["NomicBertModel",Fe]],["roformer",["RoFormerModel",ve]],["electra",["ElectraModel",Oe]],["esm",["EsmModel",ht]],["convbert",["ConvBertModel",Ie]],["camembert",["CamembertModel",$e]],["deberta",["DebertaModel",Ye]],["deberta-v2",["DebertaV2Model",rt]],["mpnet",["MPNetModel",Ft]],["albert",["AlbertModel",jt]],["distilbert",["DistilBertModel",ct]],["roberta",["RobertaModel",us]],["xlm",["XLMModel",fs]],["xlm-roberta",["XLMRobertaModel",Ps]],["clap",["ClapModel",gl]],["clip",["CLIPModel",sr]],["clipseg",["CLIPSegModel",Mr]],["chinese_clip",["ChineseCLIPModel",_r]],["siglip",["SiglipModel",lr]],["jina_clip",["JinaCLIPModel",pr]],["mobilebert",["MobileBertModel",Tt]],["squeezebert",["SqueezeBertModel",Et]],["wav2vec2",["Wav2Vec2Model",wi]],["wav2vec2-bert",["Wav2Vec2BertModel",Ni]],["unispeech",["UniSpeechModel",Si]],["unispeech-sat",["UniSpeechSatModel",Ii]],["hubert",["HubertModel",Ri]],["wavlm",["WavLMModel",Ui]],["audio-spectrogram-transformer",["ASTModel",Ss]],["vits",["VitsModel",Tl]],["pyannote",["PyAnnoteModel",ki]],["wespeaker-resnet",["WeSpeakerResNetModel",vi]],["detr",["DetrModel",jn]],["rt_detr",["RTDetrModel",Rn]],["rt_detr_v2",["RTDetrV2Model",Un]],["rf_detr",["RFDetrModel",Jn]],["d_fine",["DFineModel",ea]],["table-transformer",["TableTransformerModel",ra]],["vit",["ViTModel",Yo]],["ijepa",["IJepaModel",en]],["pvt",["PvtModel",nn]],["vit_msn",["ViTMSNModel",un]],["vit_mae",["ViTMAEModel",cn]],["groupvit",["GroupViTModel",pn]],["fastvit",["FastViTModel",gn]],["mobilevit",["MobileViTModel",bn]],["mobilevitv2",["MobileViTV2Model",kn]],["owlvit",["OwlViTModel",vn]],["owlv2",["Owlv2Model",An]],["beit",["BeitModel",In]],["deit",["DeiTModel",ia]],["hiera",["HieraModel",da]],["convnext",["ConvNextModel",Ua]],["convnextv2",["ConvNextV2Model",Ha]],["dinov2",["Dinov2Model",Ka]],["dinov2_with_registers",["Dinov2WithRegistersModel",ti]],["resnet",["ResNetModel",ma]],["swin",["SwinModel",ga]],["swin2sr",["Swin2SRModel",Ta]],["donut-swin",["DonutSwinModel",Wa]],["yolos",["YolosModel",ai]],["dpt",["DPTModel",Pa]],["glpn",["GLPNModel",Ga]],["hifigan",["SpeechT5HifiGan",rl]],["efficientnet",["EfficientNetModel",Sl]],["decision_transformer",["DecisionTransformerModel",Kl]],["patchtst",["PatchTSTForPrediction",nc]],["patchtsmixer",["PatchTSMixerForPrediction",lc]],["mobilenet_v1",["MobileNetV1Model",jl]],["mobilenet_v2",["MobileNetV2Model",Bl]],["mobilenet_v3",["MobileNetV3Model",Wl]],["mobilenet_v4",["MobileNetV4Model",Xl]],["maskformer",["MaskFormerModel",Na]],["mgp-str",["MgpstrForSceneTextRecognition",rc]],["style_text_to_speech_2",["StyleTextToSpeech2Model",Ki]]]),Ac=new Map([["t5",["T5Model",Gt]],["longt5",["LongT5Model",Wt]],["mt5",["MT5Model",Qt]],["bart",["BartModel",Jt]],["mbart",["MBartModel",es]],["marian",["MarianModel",mi]],["whisper",["WhisperModel",Ls]],["m2m_100",["M2M100Model",gi]],["blenderbot",["BlenderbotModel",ns]],["blenderbot-small",["BlenderbotSmallModel",ls]]]),Ec=new Map([["mimi",["MimiModel",hc]],["dac",["DacModel",bc]],["snac",["SnacModel",Fc]]]),Lc=new Map([["bloom",["BloomModel",Ro]],["jais",["JAISModel",kr]],["gpt2",["GPT2Model",br]],["gptj",["GPTJModel",Ir]],["gpt_bigcode",["GPTBigCodeModel",jr]],["gpt_neo",["GPTNeoModel",vr]],["gpt_neox",["GPTNeoXModel",Ar]],["codegen",["CodeGenModel",Or]],["llama",["LlamaModel",Rr]],["exaone",["ExaoneModel",Yr]],["olmo",["OlmoModel",ro]],["olmo2",["Olmo2Model",ao]],["mobilellm",["MobileLLMModel",eo]],["granite",["GraniteModel",co]],["cohere",["CohereModel",mo]],["gemma",["GemmaModel",go]],["gemma2",["Gemma2Model",wo]],["gemma3_text",["Gemma3Model",xo]],["helium",["HeliumModel",$r]],["glm",["GlmModel",Xr]],["openelm",["OpenELMModel",Fo]],["qwen2",["Qwen2Model",Co]],["qwen3",["Qwen3Model",Eo]],["phi",["PhiModel",jo]],["phi3",["Phi3Model",Oo]],["mpt",["MptModel",$o]],["opt",["OPTModel",Xo]],["mistral",["MistralModel",il]],["starcoder2",["Starcoder2Model",dl]],["falcon",["FalconModel",ml]],["stablelm",["StableLmModel",yl]]]),Ic=new Map([["speecht5",["SpeechT5ForSpeechToText",tl]],["whisper",["WhisperForConditionalGeneration",Is]],["lite-whisper",["LiteWhisperForConditionalGeneration",zs]],["moonshine",["MoonshineForConditionalGeneration",Vs]]]),zc=new Map([["speecht5",["SpeechT5ForTextToSpeech",sl]]]),Dc=new Map([["vits",["VitsModel",Tl]],["musicgen",["MusicgenForConditionalGeneration",zl]]]),jc=new Map([["bert",["BertForSequenceClassification",de]],["neobert",["NeoBertForSequenceClassification",ge]],["modernbert",["ModernBertForSequenceClassification",xe]],["roformer",["RoFormerForSequenceClassification",Se]],["electra",["ElectraForSequenceClassification",Ge]],["esm",["EsmForSequenceClassification",ft]],["convbert",["ConvBertForSequenceClassification",De]],["camembert",["CamembertForSequenceClassification",Qe]],["deberta",["DebertaForSequenceClassification",Ze]],["deberta-v2",["DebertaV2ForSequenceClassification",nt]],["mpnet",["MPNetForSequenceClassification",vt]],["albert",["AlbertForSequenceClassification",Vt]],["distilbert",["DistilBertForSequenceClassification",dt]],["roberta",["RobertaForSequenceClassification",ms]],["xlm",["XLMForSequenceClassification",ws]],["xlm-roberta",["XLMRobertaForSequenceClassification",Fs]],["bart",["BartForSequenceClassification",Kt]],["mbart",["MBartForSequenceClassification",ss]],["mobilebert",["MobileBertForSequenceClassification",xt]],["squeezebert",["SqueezeBertForSequenceClassification",It]]]),Vc=new Map([["bert",["BertForTokenClassification",ue]],["neobert",["NeoBertForTokenClassification",fe]],["modernbert",["ModernBertForTokenClassification",Pe]],["roformer",["RoFormerForTokenClassification",Ae]],["electra",["ElectraForTokenClassification",Re]],["esm",["EsmForTokenClassification",Mt]],["convbert",["ConvBertForTokenClassification",je]],["camembert",["CamembertForTokenClassification",Xe]],["deberta",["DebertaForTokenClassification",et]],["deberta-v2",["DebertaV2ForTokenClassification",at]],["mpnet",["MPNetForTokenClassification",Ct]],["distilbert",["DistilBertForTokenClassification",ut]],["roberta",["RobertaForTokenClassification",ps]],["xlm",["XLMForTokenClassification",Ts]],["xlm-roberta",["XLMRobertaForTokenClassification",ys]]]),Nc=new Map([["t5",["T5ForConditionalGeneration",Rt]],["longt5",["LongT5ForConditionalGeneration",$t]],["mt5",["MT5ForConditionalGeneration",Xt]],["bart",["BartForConditionalGeneration",Yt]],["mbart",["MBartForConditionalGeneration",ts]],["marian",["MarianMTModel",pi]],["m2m_100",["M2M100ForConditionalGeneration",fi]],["blenderbot",["BlenderbotForConditionalGeneration",as]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",cs]]]),Oc=new Map([["bloom",["BloomForCausalLM",qo]],["gpt2",["GPT2LMHeadModel",xr]],["jais",["JAISLMHeadModel",Fr]],["gptj",["GPTJForCausalLM",zr]],["gpt_bigcode",["GPTBigCodeForCausalLM",Vr]],["gpt_neo",["GPTNeoForCausalLM",Cr]],["gpt_neox",["GPTNeoXForCausalLM",Er]],["codegen",["CodeGenForCausalLM",Br]],["llama",["LlamaForCausalLM",qr]],["exaone",["ExaoneForCausalLM",Kr]],["olmo",["OlmoForCausalLM",oo]],["olmo2",["Olmo2ForCausalLM",io]],["mobilellm",["MobileLLMForCausalLM",to]],["granite",["GraniteForCausalLM",uo]],["cohere",["CohereForCausalLM",po]],["gemma",["GemmaForCausalLM",fo]],["gemma2",["Gemma2ForCausalLM",To]],["gemma3_text",["Gemma3ForCausalLM",Po]],["helium",["HeliumForCausalLM",Ur]],["glm",["GlmForCausalLM",Hr]],["openelm",["OpenELMForCausalLM",yo]],["qwen2",["Qwen2ForCausalLM",So]],["qwen3",["Qwen3ForCausalLM",Lo]],["phi",["PhiForCausalLM",Vo]],["phi3",["Phi3ForCausalLM",Bo]],["mpt",["MptForCausalLM",Uo]],["opt",["OPTForCausalLM",Ho]],["mbart",["MBartForCausalLM",rs]],["mistral",["MistralForCausalLM",ll]],["starcoder2",["Starcoder2ForCausalLM",ul]],["falcon",["FalconForCausalLM",pl]],["trocr",["TrOCRForCausalLM",nl]],["stablelm",["StableLmForCausalLM",vl]],["phi3_v",["Phi3VForCausalLM",er]]]),Bc=new Map([["multi_modality",["MultiModalityCausalLM",ec]]]),Gc=new Map([["bert",["BertForMaskedLM",ce]],["neobert",["NeoBertForMaskedLM",he]],["modernbert",["ModernBertForMaskedLM",be]],["roformer",["RoFormerForMaskedLM",Ce]],["electra",["ElectraForMaskedLM",Be]],["esm",["EsmForMaskedLM",gt]],["convbert",["ConvBertForMaskedLM",ze]],["camembert",["CamembertForMaskedLM",Ue]],["deberta",["DebertaForMaskedLM",Ke]],["deberta-v2",["DebertaV2ForMaskedLM",ot]],["mpnet",["MPNetForMaskedLM",yt]],["albert",["AlbertForMaskedLM",Ot]],["distilbert",["DistilBertForMaskedLM",mt]],["roberta",["RobertaForMaskedLM",_s]],["xlm",["XLMWithLMHeadModel",Ms]],["xlm-roberta",["XLMRobertaForMaskedLM",ks]],["mobilebert",["MobileBertForMaskedLM",bt]],["squeezebert",["SqueezeBertForMaskedLM",Lt]]]),Rc=new Map([["bert",["BertForQuestionAnswering",_e]],["neobert",["NeoBertForQuestionAnswering",Me]],["roformer",["RoFormerForQuestionAnswering",Ee]],["electra",["ElectraForQuestionAnswering",qe]],["convbert",["ConvBertForQuestionAnswering",Ve]],["camembert",["CamembertForQuestionAnswering",He]],["deberta",["DebertaForQuestionAnswering",tt]],["deberta-v2",["DebertaV2ForQuestionAnswering",it]],["mpnet",["MPNetForQuestionAnswering",St]],["albert",["AlbertForQuestionAnswering",Nt]],["distilbert",["DistilBertForQuestionAnswering",_t]],["roberta",["RobertaForQuestionAnswering",hs]],["xlm",["XLMForQuestionAnswering",bs]],["xlm-roberta",["XLMRobertaForQuestionAnswering",vs]],["mobilebert",["MobileBertForQuestionAnswering",Pt]],["squeezebert",["SqueezeBertForQuestionAnswering",zt]]]),qc=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Ns]],["idefics3",["Idefics3ForConditionalGeneration",Ys]],["smolvlm",["SmolVLMForConditionalGeneration",Ks]]]),Wc=new Map([["llava",["LlavaForConditionalGeneration",Bs]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",Gs]],["moondream1",["Moondream1ForConditionalGeneration",Rs]],["florence2",["Florence2ForConditionalGeneration",Ws]],["qwen2-vl",["Qwen2VLForConditionalGeneration",zo]],["idefics3",["Idefics3ForConditionalGeneration",Ys]],["smolvlm",["SmolVLMForConditionalGeneration",Ks]],["paligemma",["PaliGemmaForConditionalGeneration",Us]],["llava_qwen2",["LlavaQwen2ForCausalLM",Qs]],["gemma3n",["Gemma3nForConditionalGeneration",Hs]]]),$c=new Map([["ultravox",["UltravoxModel",uc]]]),Uc=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Ns]]]),Qc=new Map([["vit",["ViTForImageClassification",Ko]],["ijepa",["IJepaForImageClassification",tn]],["pvt",["PvtForImageClassification",an]],["vit_msn",["ViTMSNForImageClassification",_n]],["fastvit",["FastViTForImageClassification",fn]],["mobilevit",["MobileViTForImageClassification",xn]],["mobilevitv2",["MobileViTV2ForImageClassification",Fn]],["beit",["BeitForImageClassification",zn]],["deit",["DeiTForImageClassification",la]],["hiera",["HieraForImageClassification",ua]],["convnext",["ConvNextForImageClassification",Qa]],["convnextv2",["ConvNextV2ForImageClassification",Ja]],["dinov2",["Dinov2ForImageClassification",Za]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",si]],["resnet",["ResNetForImageClassification",pa]],["swin",["SwinForImageClassification",fa]],["segformer",["SegformerForImageClassification",Pl]],["efficientnet",["EfficientNetForImageClassification",Al]],["mobilenet_v1",["MobileNetV1ForImageClassification",Vl]],["mobilenet_v2",["MobileNetV2ForImageClassification",Gl]],["mobilenet_v3",["MobileNetV3ForImageClassification",$l]],["mobilenet_v4",["MobileNetV4ForImageClassification",Hl]]]),Xc=new Map([["detr",["DetrForObjectDetection",Vn]],["rt_detr",["RTDetrForObjectDetection",qn]],["rt_detr_v2",["RTDetrV2ForObjectDetection",Qn]],["rf_detr",["RFDetrForObjectDetection",Yn]],["d_fine",["DFineForObjectDetection",ta]],["table-transformer",["TableTransformerForObjectDetection",oa]],["yolos",["YolosForObjectDetection",ii]]]),Hc=new Map([["owlvit",["OwlViTForObjectDetection",Cn]],["owlv2",["Owlv2ForObjectDetection",En]],["grounding-dino",["GroundingDinoForObjectDetection",oi]]]),Jc=new Map([["detr",["DetrForSegmentation",Nn]],["clipseg",["CLIPSegForImageSegmentation",wr]]]),Yc=new Map([["segformer",["SegformerForSemanticSegmentation",kl]],["sapiens",["SapiensForSemanticSegmentation",Ca]],["swin",["SwinForSemanticSegmentation",Ma]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",Nl]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",Rl]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",Ul]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",Jl]]]),Kc=new Map([["detr",["DetrForSegmentation",Nn]],["maskformer",["MaskFormerForInstanceSegmentation",Oa]]]),Zc=new Map([["sam",["SamModel",di]]]),ed=new Map([["wav2vec2",["Wav2Vec2ForCTC",Ti]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Oi]],["unispeech",["UniSpeechForCTC",Ai]],["unispeech-sat",["UniSpeechSatForCTC",zi]],["wavlm",["WavLMForCTC",Qi]],["hubert",["HubertForCTC",qi]]]),td=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",bi]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Bi]],["unispeech",["UniSpeechForSequenceClassification",Ei]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Di]],["wavlm",["WavLMForSequenceClassification",Xi]],["hubert",["HubertForSequenceClassification",Wi]],["audio-spectrogram-transformer",["ASTForAudioClassification",As]]]),sd=new Map([["wavlm",["WavLMForXVector",Hi]]]),rd=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",ji]],["wavlm",["WavLMForAudioFrameClassification",Ji]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",xi]],["pyannote",["PyAnnoteForAudioFrameClassification",Fi]]]),od=new Map([["vitmatte",["VitMatteForImageMatting",wn]]]),nd=new Map([["patchtst",["PatchTSTForPrediction",ac]],["patchtsmixer",["PatchTSMixerForPrediction",cc]]]),ad=new Map([["swin2sr",["Swin2SRForImageSuperResolution",ba]]]),id=new Map([["dpt",["DPTForDepthEstimation",ka]],["depth_anything",["DepthAnythingForDepthEstimation",ya]],["glpn",["GLPNForDepthEstimation",Ra]],["sapiens",["SapiensForDepthEstimation",Sa]],["depth_pro",["DepthProForDepthEstimation",La]],["metric3d",["Metric3DForDepthEstimation",za]],["metric3dv2",["Metric3Dv2ForDepthEstimation",ja]]]),ld=new Map([["sapiens",["SapiensForNormalEstimation",Aa]]]),cd=new Map([["vitpose",["VitPoseForPoseEstimation",rn]]]),dd=new Map([["clip",["CLIPVisionModelWithProjection",ar]],["siglip",["SiglipVisionModel",dr]],["jina_clip",["JinaCLIPVisionModel",gr]]]),ud=[[Sc,T],[Ac,b],[Lc,k],[Ec,E],[jc,T],[Vc,T],[Nc,x],[Ic,x],[Oc,k],[Bc,C],[Gc,T],[Rc,T],[qc,P],[Wc,y],[$c,A],[Qc,T],[Jc,T],[Kc,T],[Yc,T],[od,T],[nd,T],[ad,T],[id,T],[ld,T],[cd,T],[Xc,T],[Hc,T],[Zc,F],[ed,T],[td,T],[zc,x],[Dc,T],[sd,T],[rd,T],[dd,T]];for(const[e,t]of ud)for(const[s,r]of e.values())I.set(s,t),D.set(r,s),z.set(s,r);const _d=[["MusicgenForConditionalGeneration",zl,v],["Phi3VForCausalLM",er,S],["CLIPTextModelWithProjection",or,T],["SiglipTextModel",cr,T],["JinaCLIPTextModel",hr,T],["ClapTextModelWithProjection",fl,T],["ClapAudioModelWithProjection",Ml,T],["DacEncoderModel",xc,T],["DacDecoderModel",Pc,T],["MimiEncoderModel",gc,T],["MimiDecoderModel",fc,T],["SnacEncoderModel",yc,T],["SnacDecoderModel",vc,T],["Gemma3nForConditionalGeneration",Hs,L]];for(const[e,t,s]of _d)I.set(e,s),D.set(t,e),z.set(e,t);const md=new Map([["modnet",Jc],["birefnet",Jc],["isnet",Jc],["ben",Jc]]);for(const[e,t]of md.entries())t.set(e,["PreTrainedModel",oe]),I.set(e,T),D.set(oe,e),z.set(e,oe);class pd extends Cc{static MODEL_CLASS_MAPPINGS=ud.map((e=>e[0]));static BASE_IF_FAIL=!0}class hd extends Cc{static MODEL_CLASS_MAPPINGS=[jc]}class gd extends Cc{static MODEL_CLASS_MAPPINGS=[Vc]}class fd extends Cc{static MODEL_CLASS_MAPPINGS=[Nc]}class Md extends Cc{static MODEL_CLASS_MAPPINGS=[Ic]}class wd extends Cc{static MODEL_CLASS_MAPPINGS=[zc]}class Td extends Cc{static MODEL_CLASS_MAPPINGS=[Dc]}class bd extends Cc{static MODEL_CLASS_MAPPINGS=[Oc]}class xd extends Cc{static MODEL_CLASS_MAPPINGS=[Gc]}class Pd extends Cc{static MODEL_CLASS_MAPPINGS=[Rc]}class kd extends Cc{static MODEL_CLASS_MAPPINGS=[qc]}class Fd extends Cc{static MODEL_CLASS_MAPPINGS=[Qc]}class yd extends Cc{static MODEL_CLASS_MAPPINGS=[Jc]}class vd extends Cc{static MODEL_CLASS_MAPPINGS=[Yc]}class Cd extends Cc{static MODEL_CLASS_MAPPINGS=[Kc]}class Sd extends Cc{static MODEL_CLASS_MAPPINGS=[Xc]}class Ad extends Cc{static MODEL_CLASS_MAPPINGS=[Hc]}class Ed extends Cc{static MODEL_CLASS_MAPPINGS=[Zc]}class Ld extends Cc{static MODEL_CLASS_MAPPINGS=[ed]}class Id extends Cc{static MODEL_CLASS_MAPPINGS=[td]}class zd extends Cc{static MODEL_CLASS_MAPPINGS=[sd]}class Dd extends Cc{static MODEL_CLASS_MAPPINGS=[rd]}class jd extends Cc{static MODEL_CLASS_MAPPINGS=[Uc]}class Vd extends Cc{static MODEL_CLASS_MAPPINGS=[od]}class Nd extends Cc{static MODEL_CLASS_MAPPINGS=[ad]}class Od extends Cc{static MODEL_CLASS_MAPPINGS=[id]}class Bd extends Cc{static MODEL_CLASS_MAPPINGS=[ld]}class Gd extends Cc{static MODEL_CLASS_MAPPINGS=[cd]}class Rd extends Cc{static MODEL_CLASS_MAPPINGS=[dd]}class qd extends Cc{static MODEL_CLASS_MAPPINGS=[Wc]}class Wd extends Cc{static MODEL_CLASS_MAPPINGS=[$c]}class $d extends ne{constructor({logits:e,past_key_values:t,encoder_outputs:s,decoder_attentions:r=null,cross_attentions:o=null}){super(),this.logits=e,this.past_key_values=t,this.encoder_outputs=s,this.decoder_attentions=r,this.cross_attentions=o}}class Ud extends ne{constructor({logits:e,...t}){super(),this.logits=e;const s=Object.values(t);s.length>0&&(this.attentions=s)}}class Qd extends ne{constructor({logits:e,embeddings:t}){super(),this.logits=e,this.embeddings=t}}class Xd extends ne{constructor({logits:e}){super(),this.logits=e}}class Hd extends ne{constructor({logits:e}){super(),this.logits=e}}class Jd extends ne{constructor({start_logits:e,end_logits:t}){super(),this.start_logits=e,this.end_logits=t}}class Yd extends ne{constructor({logits:e}){super(),this.logits=e}}class Kd extends ne{constructor({logits:e,past_key_values:t}){super(),this.logits=e,this.past_key_values=t}}class Zd extends ne{constructor({alphas:e}){super(),this.alphas=e}}class eu extends ne{constructor({waveform:e,spectrogram:t}){super(),this.waveform=e,this.spectrogram=t}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(e,t,s)=>{s.r(t),s.d(t,{ASTFeatureExtractor:()=>n});var r=s("./src/base/feature_extraction_utils.js"),o=(s("./src/utils/tensor.js"),s("./src/utils/audio.js"));class n extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,s=(0,o.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);this.mel_filters=s,this.window=(0,o.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(e,t){return(0,o.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e){(0,r.validate_audio_inputs)(e,"ASTFeatureExtractor");const t=await this._extract_fbank_features(e,this.config.max_length);if(this.config.do_normalize){const e=2*this.std,s=t.data;for(let t=0;t<s.length;++t)s[t]=(s[t]-this.mean)/e}return{input_values:t.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(e,t,s)=>{s.r(t),s.d(t,{AutoFeatureExtractor:()=>a});var r=s("./src/utils/constants.js"),o=s("./src/utils/hub.js"),n=(s("./src/base/feature_extraction_utils.js"),s("./src/models/feature_extractors.js"));class a{static async from_pretrained(e,t={}){const s=await(0,o.getModelJSON)(e,r.FEATURE_EXTRACTOR_NAME,!0,t),a=s.feature_extractor_type,i=n[a];if(!i)throw new Error(`Unknown feature_extractor_type: '${a}'. Please report this at ${r.GITHUB_ISSUE_URL}.`);return new i(s)}}},"./src/models/auto/image_processing_auto.js":(e,t,s)=>{s.r(t),s.d(t,{AutoImageProcessor:()=>i});var r=s("./src/utils/constants.js"),o=s("./src/utils/hub.js"),n=s("./src/base/image_processors_utils.js"),a=s("./src/models/image_processors.js");class i{static async from_pretrained(e,t={}){const s=await(0,o.getModelJSON)(e,r.IMAGE_PROCESSOR_NAME,!0,t),i=s.image_processor_type??s.feature_extractor_type;let l=a[i?.replace(/Fast$/,"")];return l||(void 0!==i&&console.warn(`Image processor type '${i}' not found, assuming base ImageProcessor. Please report this at ${r.GITHUB_ISSUE_URL}.`),l=n.ImageProcessor),new l(s)}}},"./src/models/auto/processing_auto.js":(e,t,s)=>{s.r(t),s.d(t,{AutoProcessor:()=>c});var r=s("./src/utils/constants.js"),o=s("./src/utils/hub.js"),n=s("./src/base/processing_utils.js"),a=s("./src/models/processors.js"),i=s("./src/models/image_processors.js"),l=s("./src/models/feature_extractors.js");class c{static async from_pretrained(e,t={}){const s=await(0,o.getModelJSON)(e,r.IMAGE_PROCESSOR_NAME,!0,t),{image_processor_type:c,feature_extractor_type:d,processor_class:u}=s;if(u&&a[u])return a[u].from_pretrained(e,t);if(!c&&!d)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const _={};if(c){const e=i[c.replace(/Fast$/,"")];if(!e)throw new Error(`Unknown image_processor_type: '${c}'.`);_.image_processor=new e(s)}if(d){const e=i[d];if(e)_.image_processor=new e(s);else{const e=l[d];if(!e)throw new Error(`Unknown feature_extractor_type: '${d}'.`);_.feature_extractor=new e(s)}}return new n.Processor({},_,null)}}},"./src/models/beit/image_processing_beit.js":(e,t,s)=>{s.r(t),s.d(t,{BeitFeatureExtractor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(e,t,s)=>{s.r(t),s.d(t,{BitImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(e,t,s)=>{s.r(t),s.d(t,{ChineseCLIPFeatureExtractor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(e,t,s)=>{s.r(t),s.d(t,{ClapFeatureExtractor:()=>n});var r=s("./src/base/feature_extraction_utils.js"),o=(s("./src/utils/tensor.js"),s("./src/utils/audio.js"));class n extends r.FeatureExtractor{constructor(e){super(e),this.mel_filters=(0,o.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,o.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,o.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(e,t,s,r){let o,n=!1;const a=e.length-t;if(a>0){if("rand_trunc"!==s)throw new Error(`Truncation strategy "${s}" not implemented`);{n=!0;const s=Math.floor(Math.random()*(a+1));e=e.subarray(s,s+t),o=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}}else{if(a<0){let s=new Float64Array(t);if(s.set(e),"repeat"===r)for(let r=e.length;r<t;r+=e.length)s.set(e.subarray(0,Math.min(e.length,t-r)),r);else if("repeatpad"===r)for(let t=e.length;t<-a;t+=e.length)s.set(e,t);e=s}if("fusion"===s)throw new Error(`Truncation strategy "${s}" not implemented`);o=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}return o.unsqueeze_(0)}async _extract_fbank_features(e,t,s=null){return(0,o.spectrogram)(e,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:t,log_mel:"dB",max_num_frames:s,do_pad:!1,transpose:!0})}async _call(e,{max_length:t=null}={}){(0,r.validate_audio_inputs)(e,"ClapFeatureExtractor");return{input_features:(await this._get_input_mel(e,t??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(e,t,s)=>{s.r(t),s.d(t,{CLIPFeatureExtractor:()=>n,CLIPImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/convnext/image_processing_convnext.js":(e,t,s)=>{s.r(t),s.d(t,{ConvNextFeatureExtractor:()=>n,ConvNextImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{constructor(e){super(e),this.crop_pct=this.config.crop_pct??.875}async resize(e){const t=this.size?.shortest_edge;if(void 0===t)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(t<384){const s=Math.floor(t/this.crop_pct),[r,o]=this.get_resize_output_image_size(e,{shortest_edge:s});e=await e.resize(r,o,{resample:this.resample}),e=await e.center_crop(t,t)}else e=await e.resize(t,t,{resample:this.resample});return e}}class n extends o{}},"./src/models/dac/feature_extraction_dac.js":(e,t,s)=>{s.r(t),s.d(t,{DacFeatureExtractor:()=>o});var r=s("./src/models/encodec/feature_extraction_encodec.js");class o extends r.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":(e,t,s)=>{s.r(t),s.d(t,{DeiTFeatureExtractor:()=>n,DeiTImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/detr/image_processing_detr.js":(e,t,s)=>{s.r(t),s.d(t,{DetrFeatureExtractor:()=>a,DetrImageProcessor:()=>n});var r=s("./src/base/image_processors_utils.js"),o=s("./src/utils/tensor.js");class n extends r.ImageProcessor{async _call(e){const t=await super._call(e),s=[t.pixel_values.dims[0],64,64],r=(0,o.full)(s,1n);return{...t,pixel_mask:r}}post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}post_process_panoptic_segmentation(...e){return(0,r.post_process_panoptic_segmentation)(...e)}post_process_instance_segmentation(...e){return(0,r.post_process_instance_segmentation)(...e)}}class a extends n{}},"./src/models/donut/image_processing_donut.js":(e,t,s)=>{s.r(t),s.d(t,{DonutFeatureExtractor:()=>n,DonutImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{pad_image(e,t,s,r={}){const[o,n,a]=t;let i=this.image_mean;Array.isArray(this.image_mean)||(i=new Array(a).fill(i));let l=this.image_std;Array.isArray(l)||(l=new Array(a).fill(i));const c=i.map(((e,t)=>-e/l[t]));return super.pad_image(e,t,s,{center:!0,constant_values:c,...r})}}class n extends o{}},"./src/models/dpt/image_processing_dpt.js":(e,t,s)=>{s.r(t),s.d(t,{DPTFeatureExtractor:()=>n,DPTImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/efficientnet/image_processing_efficientnet.js":(e,t,s)=>{s.r(t),s.d(t,{EfficientNetImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{constructor(e){super(e),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map((e=>e*e)))}}},"./src/models/encodec/feature_extraction_encodec.js":(e,t,s)=>{s.r(t),s.d(t,{EncodecFeatureExtractor:()=>n});var r=s("./src/base/feature_extraction_utils.js"),o=s("./src/utils/tensor.js");class n extends r.FeatureExtractor{async _call(e){(0,r.validate_audio_inputs)(e,"EncodecFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=this.config.feature_size;if(e.length%t!=0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${t}).`);const s=[1,t,e.length/t];return{input_values:new o.Tensor("float32",e,s)}}}},"./src/models/feature_extractors.js":(e,t,s)=>{s.r(t),s.d(t,{ASTFeatureExtractor:()=>r.ASTFeatureExtractor,ClapFeatureExtractor:()=>n.ClapFeatureExtractor,DacFeatureExtractor:()=>a.DacFeatureExtractor,EncodecFeatureExtractor:()=>o.EncodecFeatureExtractor,Gemma3nAudioFeatureExtractor:()=>i.Gemma3nAudioFeatureExtractor,ImageFeatureExtractor:()=>g.ImageProcessor,MoonshineFeatureExtractor:()=>l.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>c.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>d.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>u.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>_.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>m.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>p.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>h.WhisperFeatureExtractor});var r=s("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),o=s("./src/models/encodec/feature_extraction_encodec.js"),n=s("./src/models/clap/feature_extraction_clap.js"),a=s("./src/models/dac/feature_extraction_dac.js"),i=s("./src/models/gemma3n/feature_extraction_gemma3n.js"),l=s("./src/models/moonshine/feature_extraction_moonshine.js"),c=s("./src/models/pyannote/feature_extraction_pyannote.js"),d=s("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),u=s("./src/models/snac/feature_extraction_snac.js"),_=s("./src/models/speecht5/feature_extraction_speecht5.js"),m=s("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),p=s("./src/models/wespeaker/feature_extraction_wespeaker.js"),h=s("./src/models/whisper/feature_extraction_whisper.js"),g=s("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(e,t,s)=>{s.r(t),s.d(t,{Florence2Processor:()=>a});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");class a extends r.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=o.AutoImageProcessor;constructor(e,t,s){super(e,t,s);const{tasks_answer_post_processing_type:r,task_prompts_without_inputs:o,task_prompts_with_input:n}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(r??{})),this.task_prompts_without_inputs=new Map(Object.entries(o??{})),this.task_prompts_with_input=new Map(Object.entries(n??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(e){"string"==typeof e&&(e=[e]);const t=[];for(const s of e)if(this.task_prompts_without_inputs.has(s))t.push(this.task_prompts_without_inputs.get(s));else{for(const[e,r]of this.task_prompts_with_input)if(s.includes(e)){t.push(r.replaceAll("{input}",s).replaceAll(e,""));break}t.length!==e.length&&t.push(s)}return t}post_process_generation(e,t,s){const r=this.tasks_answer_post_processing_type.get(t)??"pure_text";let o;switch(e=e.replaceAll("<s>","").replaceAll("</s>",""),r){case"pure_text":o=e;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const n="ocr"===r?"quad_boxes":"bboxes",a=e.matchAll(this.regexes[n]),i=[],l=[];for(const[e,t,...r]of a)i.push(t?t.trim():i.at(-1)??""),l.push(r.map(((e,t)=>(Number(e)+.5)/this.size_per_bin*s[t%2])));o={labels:i,[n]:l};break;default:throw new Error(`Task "${t}" (of type "${r}") not yet implemented.`)}return{[t]:o}}async _call(e,t=null,s={}){if(!e&&!t)throw new Error("Either text or images must be provided");return{...await this.image_processor(e,s),...t?this.tokenizer(this.construct_prompts(t),s):{}}}}},"./src/models/gemma3n/feature_extraction_gemma3n.js":(e,t,s)=>{s.r(t),s.d(t,{Gemma3nAudioFeatureExtractor:()=>a});var r=s("./src/base/feature_extraction_utils.js"),o=s("./src/utils/tensor.js"),n=s("./src/utils/audio.js");class a extends r.FeatureExtractor{constructor(e){super(e);const{fft_length:t,feature_size:s,min_frequency:r,max_frequency:o,sampling_rate:a,frame_length:i}=this.config,l=(0,n.mel_filter_bank)(Math.floor(1+t/2),s,r,o,a,null,"htk",!1);this.mel_filters=l,this.window=(0,n.window_function)(i,"hann")}async _extract_fbank_features(e,t){return(0,n.spectrogram)(e,this.window,this.config.frame_length,this.config.hop_length,{fft_length:this.config.fft_length,center:!1,onesided:!0,preemphasis:this.config.preemphasis,preemphasis_htk_flavor:this.config.preemphasis_htk_flavor,mel_filters:this.mel_filters,log_mel:"log",mel_floor:this.config.mel_floor,remove_dc_offset:!1,transpose:!0})}async _call(e,{max_length:t=48e4,truncation:s=!0,padding:n=!0,pad_to_multiple_of:a=128}={}){if((0,r.validate_audio_inputs)(e,"Gemma3nAudioFeatureExtractor"),s&&e.length>t&&(e=e.slice(0,t)),n&&e.length%a!=0){const t=a-e.length%a,s=new Float64Array(e.length+t);s.set(e),0!==this.config.padding_value&&s.fill(this.config.padding_value,e.length),e=s}const i=await this._extract_fbank_features(e,this.config.max_length),l=(0,o.full)([1,i.dims[0]],!0);return{input_features:i.unsqueeze_(0),input_features_mask:l}}}},"./src/models/gemma3n/processing_gemma3n.js":(e,t,s)=>{s.r(t),s.d(t,{Gemma3nProcessor:()=>i});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/models/auto/feature_extraction_auto.js"),a=s("./src/tokenizers.js");s("./src/utils/image.js"),s("./src/utils/audio.js");class i extends r.Processor{static image_processor_class=o.AutoImageProcessor;static feature_extractor_class=n.AutoFeatureExtractor;static tokenizer_class=a.AutoTokenizer;static uses_processor_config=!0;static uses_chat_template_file=!0;constructor(e,t,s){super(e,t,s),this.audio_seq_length=this.config.audio_seq_length,this.image_seq_length=this.config.image_seq_length;const{audio_token_id:r,boa_token:o,audio_token:n,eoa_token:a,image_token_id:i,boi_token:l,image_token:c,eoi_token:d}=this.tokenizer.config;this.audio_token_id=r,this.boa_token=o,this.audio_token=n;const u=n.repeat(this.audio_seq_length);this.full_audio_sequence=`\n\n${o}${u}${a}\n\n`,this.image_token_id=i,this.boi_token=l,this.image_token=c;const _=c.repeat(this.image_seq_length);this.full_image_sequence=`\n\n${l}${_}${d}\n\n`}async _call(e,t=null,s=null,r={}){let o,n;return"string"==typeof e&&(e=[e]),s&&(o=await this.feature_extractor(s,r),e=e.map((e=>e.replaceAll(this.audio_token,this.full_audio_sequence)))),t&&(n=await this.image_processor(t,r),e=e.map((e=>e.replaceAll(this.image_token,this.full_image_sequence)))),{...this.tokenizer(e,r),...n,...o}}}},"./src/models/glpn/image_processing_glpn.js":(e,t,s)=>{s.r(t),s.d(t,{GLPNFeatureExtractor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(e,t,s)=>{s.r(t),s.d(t,{GroundingDinoImageProcessor:()=>n});var r=s("./src/base/image_processors_utils.js"),o=s("./src/utils/tensor.js");class n extends r.ImageProcessor{async _call(e){const t=await super._call(e),s=t.pixel_values.dims,r=(0,o.ones)([s[0],s[2],s[3]]);return{...t,pixel_mask:r}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(e,t,s)=>{s.r(t),s.d(t,{GroundingDinoProcessor:()=>l});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js"),a=s("./src/base/image_processors_utils.js");function i(e,t){const s=e.dims.at(-1)-1,r=e.tolist();r.fill(!1,0,1),r.fill(!1,s);const o=t.tolist();return r.map(((e,t)=>e?t:null)).filter((e=>null!==e)).map((e=>o[e]))}class l extends r.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=o.AutoImageProcessor;async _call(e,t,s={}){const r=e?await this.image_processor(e,s):{};return{...t?this.tokenizer(t,s):{},...r}}post_process_grounded_object_detection(e,t,{box_threshold:s=.25,text_threshold:r=.25,target_sizes:o=null}={}){const{logits:n,pred_boxes:l}=e,c=n.dims[0];if(null!==o&&o.length!==c)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const d=n.dims.at(1),u=n.sigmoid(),_=u.max(-1).tolist(),m=l.tolist().map((e=>e.map((e=>(0,a.center_to_corners_format)(e))))),p=[];for(let e=0;e<c;++e){const n=null!==o?o[e]:null;null!==n&&(m[e]=m[e].map((e=>e.map(((e,t)=>e*n[(t+1)%2])))));const a=_[e],l=[],c=[],h=[];for(let o=0;o<d;++o){const n=a[o];if(n<=s)continue;const d=m[e][o],_=u[e][o];l.push(n),h.push(d);const p=i(_.gt(r),t[e]);c.push(p)}p.push({scores:l,boxes:h,labels:this.batch_decode(c)})}return p}}},"./src/models/idefics3/image_processing_idefics3.js":(e,t,s)=>{s.r(t),s.d(t,{Idefics3ImageProcessor:()=>n});var r=s("./src/base/image_processors_utils.js"),o=s("./src/utils/tensor.js");class n extends r.ImageProcessor{constructor(e){super(e),this.do_image_splitting=e.do_image_splitting??!0,this.max_image_size=e.max_image_size}get_resize_for_vision_encoder(e,t){let[s,r]=e.dims.slice(-2);const o=r/s;return r>=s?(r=Math.ceil(r/t)*t,s=Math.floor(r/o),s=Math.ceil(s/t)*t):(s=Math.ceil(s/t)*t,r=Math.floor(s*o),r=Math.ceil(r/t)*t),{height:s,width:r}}async _call(e,{do_image_splitting:t=null,return_row_col_info:s=!1}={}){let r;if(Array.isArray(e)){if(0===e.length||!e[0])throw new Error("No images provided.");r=Array.isArray(e[0])?e:[e]}else r=[[e]];let n=[],a=[],i=[];const l=[],c=[];for(const e of r){let s=await Promise.all(e.map((e=>this.preprocess(e))));l.push(...s.map((e=>e.original_size))),c.push(...s.map((e=>e.reshaped_input_size))),s.forEach((e=>e.pixel_values.unsqueeze_(0)));const{longest_edge:r}=this.max_image_size;let d;if(t??this.do_image_splitting){let e=new Array(s.length),t=new Array(s.length);d=await Promise.all(s.map((async(s,n)=>{const a=this.get_resize_for_vision_encoder(s.pixel_values,r),i=await(0,o.interpolate_4d)(s.pixel_values,{size:[a.height,a.width]}),{frames:l,num_splits_h:c,num_splits_w:d}=await this.split_image(i,this.max_image_size);return e[n]=c,t[n]=d,(0,o.cat)(l,0)}))),a.push(e),i.push(t)}else{const e=[r,r];d=await Promise.all(s.map((t=>(0,o.interpolate_4d)(t.pixel_values,{size:e})))),a.push(new Array(s.length).fill(0)),i.push(new Array(s.length).fill(0))}n.push((0,o.cat)(d,0))}const d=n.length,[u,_,m,p]=n[0].dims;let h,g;if(1===d)h=n[0].unsqueeze_(0),g=(0,o.full)([d,u,m,p],!0);else{const e=Math.max(...n.map((e=>e.dims.at(0))));g=(0,o.full)([d,e,m,p],!0);const t=g.data,s=e*m*p;for(let r=0;r<d;++r){const a=n[r].dims[0];if(a<e){n[r]=(0,o.cat)([n[r],(0,o.full)([e-a,_,m,p],0)],0);const i=r*s+a*m*p,l=(r+1)*s;t.fill(!1,i,l)}}h=(0,o.stack)(n,0)}return{pixel_values:h,pixel_attention_mask:g,original_sizes:l,reshaped_input_sizes:c,...s?{rows:a,cols:i}:{}}}async split_image(e,{longest_edge:t}){const s=t,r=t,n=[],[a,i]=e.dims.slice(-2);let l=0,c=0;if(a>s||i>r){l=Math.ceil(a/s),c=Math.ceil(i/r);const t=Math.ceil(a/l),d=Math.ceil(i/c);for(let s=0;s<l;++s)for(let r=0;r<c;++r){let u,_,m,p;s===l-1?(_=a-t,p=a):(_=s*t,p=(s+1)*t),r===c-1?(u=i-d,m=i):(u=r*d,m=(r+1)*d);const h=[_,u],g=[p,m],f=await(0,o.slice)(e,h,g,[2,3]);n.push(f)}const u=s,_=r;a===u&&i===_||(e=await(0,o.interpolate_4d)(e,{size:[u,_]}))}return n.push(e),{frames:n,num_splits_h:l,num_splits_w:c}}}},"./src/models/idefics3/processing_idefics3.js":(e,t,s)=>{s.r(t),s.d(t,{Idefics3Processor:()=>l});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js"),a=(s("./src/utils/image.js"),s("./src/utils/core.js"));function i(e,t,s,r,o,n){return 0===e&&0===t?function(e,t,s,r){return`${t}${r}`+s.repeat(e)+`${t}`}(s,r,o,n):function(e,t,s,r,o,n){let a="";for(let n=0;n<t;++n){for(let t=0;t<s;++t)a+=r+`<row_${n+1}_col_${t+1}>`+o.repeat(e);a+="\n"}return a+=`\n${r}${n}`+o.repeat(e)+`${r}`,a}(s,e,t,r,o,n)}class l extends r.Processor{static image_processor_class=o.AutoImageProcessor;static tokenizer_class=n.AutoTokenizer;static uses_processor_config=!0;fake_image_token="<fake_token_around_image>";image_token="<image>";global_img_token="<global-img>";async _call(e,t=null,s={}){let r;s.return_row_col_info??=!0,t&&(r=await this.image_processor(t,s)),Array.isArray(e)||(e=[e]);const o=r.rows??[new Array(e.length).fill(0)],n=r.cols??[new Array(e.length).fill(0)],l=this.config.image_seq_len,c=[],d=[];for(let t=0;t<e.length;++t){const s=e[t],r=o[t],u=n[t];c.push((0,a.count)(s,this.image_token));const _=r.map(((e,t)=>i(e,u[t],l,this.fake_image_token,this.image_token,this.global_img_token))),m=s.split(this.image_token);if(0===m.length)throw new Error("The image token should be present in the text.");let p=m[0];for(let e=0;e<_.length;++e)p+=_[e]+m[e+1];d.push(p)}return{...this.tokenizer(d),...r}}}},"./src/models/image_processors.js":(e,t,s)=>{s.r(t),s.d(t,{BeitFeatureExtractor:()=>r.BeitFeatureExtractor,BitImageProcessor:()=>o.BitImageProcessor,CLIPFeatureExtractor:()=>a.CLIPFeatureExtractor,CLIPImageProcessor:()=>a.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>n.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>i.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>i.ConvNextImageProcessor,DPTFeatureExtractor:()=>u.DPTFeatureExtractor,DPTImageProcessor:()=>u.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>c.DetrFeatureExtractor,DetrImageProcessor:()=>c.DetrImageProcessor,DonutFeatureExtractor:()=>d.DonutFeatureExtractor,DonutImageProcessor:()=>d.DonutImageProcessor,EfficientNetImageProcessor:()=>_.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>m.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>p.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>h.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>f.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>M.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>w.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>T.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>T.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>b.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>b.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>x.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>x.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>P.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>P.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>k.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>k.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>F.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>F.MobileViTImageProcessor,NougatImageProcessor:()=>y.NougatImageProcessor,OwlViTFeatureExtractor:()=>C.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>C.OwlViTImageProcessor,Owlv2ImageProcessor:()=>v.Owlv2ImageProcessor,Phi3VImageProcessor:()=>S.Phi3VImageProcessor,PvtImageProcessor:()=>A.PvtImageProcessor,Qwen2VLImageProcessor:()=>E.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>L.RTDetrImageProcessor,SamImageProcessor:()=>I.SamImageProcessor,SegformerFeatureExtractor:()=>z.SegformerFeatureExtractor,SegformerImageProcessor:()=>z.SegformerImageProcessor,SiglipImageProcessor:()=>D.SiglipImageProcessor,SmolVLMImageProcessor:()=>j.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>V.Swin2SRImageProcessor,VLMImageProcessor:()=>g.VLMImageProcessor,ViTFeatureExtractor:()=>N.ViTFeatureExtractor,ViTImageProcessor:()=>N.ViTImageProcessor,VitMatteImageProcessor:()=>O.VitMatteImageProcessor,VitPoseImageProcessor:()=>B.VitPoseImageProcessor,YolosFeatureExtractor:()=>G.YolosFeatureExtractor,YolosImageProcessor:()=>G.YolosImageProcessor});var r=s("./src/models/beit/image_processing_beit.js"),o=s("./src/models/bit/image_processing_bit.js"),n=s("./src/models/chinese_clip/image_processing_chinese_clip.js"),a=s("./src/models/clip/image_processing_clip.js"),i=s("./src/models/convnext/image_processing_convnext.js"),l=s("./src/models/deit/image_processing_deit.js"),c=s("./src/models/detr/image_processing_detr.js"),d=s("./src/models/donut/image_processing_donut.js"),u=s("./src/models/dpt/image_processing_dpt.js"),_=s("./src/models/efficientnet/image_processing_efficientnet.js"),m=s("./src/models/glpn/image_processing_glpn.js"),p=s("./src/models/grounding_dino/image_processing_grounding_dino.js"),h=s("./src/models/idefics3/image_processing_idefics3.js"),g=s("./src/models/janus/image_processing_janus.js"),f=s("./src/models/jina_clip/image_processing_jina_clip.js"),M=s("./src/models/llava_onevision/image_processing_llava_onevision.js"),w=s("./src/models/mask2former/image_processing_mask2former.js"),T=s("./src/models/maskformer/image_processing_maskformer.js"),b=s("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),x=s("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),P=s("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),k=s("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),F=s("./src/models/mobilevit/image_processing_mobilevit.js"),y=s("./src/models/nougat/image_processing_nougat.js"),v=s("./src/models/owlv2/image_processing_owlv2.js"),C=s("./src/models/owlvit/image_processing_owlvit.js"),S=s("./src/models/phi3_v/image_processing_phi3_v.js"),A=s("./src/models/pvt/image_processing_pvt.js"),E=s("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),L=s("./src/models/rt_detr/image_processing_rt_detr.js"),I=s("./src/models/sam/image_processing_sam.js"),z=s("./src/models/segformer/image_processing_segformer.js"),D=s("./src/models/siglip/image_processing_siglip.js"),j=s("./src/models/smolvlm/image_processing_smolvlm.js"),V=s("./src/models/swin2sr/image_processing_swin2sr.js"),N=s("./src/models/vit/image_processing_vit.js"),O=s("./src/models/vitmatte/image_processing_vitmatte.js"),B=s("./src/models/vitpose/image_processing_vitpose.js"),G=s("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(e,t,s)=>{s.r(t),s.d(t,{VLMImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{constructor(e){super({do_pad:!0,pad_size:{width:e.image_size,height:e.image_size},...e}),this.constant_values=this.config.background_color.map((e=>e*this.rescale_factor))}pad_image(e,t,s,r){return super.pad_image(e,t,s,{constant_values:this.constant_values,center:!0,...r})}}},"./src/models/janus/processing_janus.js":(e,t,s)=>{s.r(t),s.d(t,{VLChatProcessor:()=>c});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js"),a=s("./src/utils/core.js"),i=s("./src/utils/tensor.js"),l=s("./src/utils/image.js");class c extends r.Processor{static image_processor_class=o.AutoImageProcessor;static tokenizer_class=n.AutoTokenizer;static uses_processor_config=!0;constructor(e,t,s){super(e,t,s),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(e,{images:t=null,chat_template:s="default"}={}){t?Array.isArray(t)||(t=[t]):t=await Promise.all(e.filter((e=>e.images)).flatMap((e=>e.images)).map((e=>l.RawImage.read(e))));const r=this.tokenizer,o=e=>r.encode(e,{add_special_tokens:!1}),n=r.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0,chat_template:s}).split(this.image_tag),c=n.length-1;if(t.length!==c)throw new Error(`Number of images provided (${t.length}) does not match number of "${this.image_tag}" image tags (${c})`);const[d,u,_]=r.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let m=o(n[0]),p=new Array(m.length).fill(!1);for(let e=1;e<n.length;++e){const t=new Array(this.num_image_tokens).fill(d),s=o(n[e]);m=(0,a.mergeArrays)(m,[u],t,[_],s);const r=new Array(this.num_image_tokens).fill(!0);p=(0,a.mergeArrays)(p,[!1],r,[!1],new Array(s.length).fill(!1))}const h=[1,m.length],g={input_ids:new i.Tensor("int64",m,h),attention_mask:new i.Tensor("int64",new Array(m.length).fill(1),h),images_seq_mask:new i.Tensor("bool",p,h),images_emb_mask:new i.Tensor("bool",new Array(c*this.num_image_tokens).fill(!0),[1,c,this.num_image_tokens])};if(t&&t.length>0){const e=await this.image_processor(t);return e.pixel_values.unsqueeze_(0),{...g,...e}}return g}}},"./src/models/jina_clip/image_processing_jina_clip.js":(e,t,s)=>{s.r(t),s.d(t,{JinaCLIPImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{constructor(e){const{resize_mode:t,fill_color:s,interpolation:r,size:o,...n}=e;super({...n,size:"squash"===t?{width:o,height:o}:"shortest"===t?{shortest_edge:o}:{longest_edge:o},resample:"bicubic"===r?3:2,do_center_crop:!0,crop_size:o,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(e,t,s)=>{s.r(t),s.d(t,{JinaCLIPProcessor:()=>a});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");class a extends r.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=o.AutoImageProcessor;async _call(e=null,t=null,s={}){if(!e&&!t)throw new Error("Either text or images must be provided");return{...e?this.tokenizer(e,s):{},...t?await this.image_processor(t,s):{}}}}},"./src/models/llava/processing_llava.js":(e,t,s)=>{s.r(t),s.d(t,{LlavaProcessor:()=>a});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");class a extends r.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=o.AutoImageProcessor;static uses_processor_config=!0;async _call(e,t=null,s={}){const r=await this.image_processor(e,s);if(t){const[e,s]=r.pixel_values.dims.slice(-2),{image_token:o,patch_size:n,num_additional_image_tokens:a}=this.config,i=Math.floor(e/n)*Math.floor(s/n)+a;t=structuredClone(t),Array.isArray(t)||(t=[t]);for(let e=0;e<t.length;++e)t[e]=t[e].replace(o,o.repeat(i))}const o=t?this.tokenizer(t,s):{};return{...r,...o}}}},"./src/models/llava_onevision/image_processing_llava_onevision.js":(e,t,s)=>{s.r(t),s.d(t,{LlavaOnevisionImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(e,t,s)=>{s.r(t),s.d(t,{Mask2FormerImageProcessor:()=>o});var r=s("./src/models/maskformer/image_processing_maskformer.js");class o extends r.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(e,t,s)=>{s.r(t),s.d(t,{MaskFormerFeatureExtractor:()=>n,MaskFormerImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_panoptic_segmentation(...e){return(0,r.post_process_panoptic_segmentation)(...e)}post_process_instance_segmentation(...e){return(0,r.post_process_instance_segmentation)(...e)}}class n extends o{}},"./src/models/mgp_str/processing_mgp_str.js":(e,t,s)=>{s.r(t),s.d(t,{MgpstrProcessor:()=>l});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js"),a=s("./src/utils/maths.js");const i={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class l extends r.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=o.AutoImageProcessor;get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(e,t){if(!i.hasOwnProperty(t))throw new Error(`Format ${t} is not supported.`);const[s,r]=i[t],o=this[s].bind(this),[n,l]=e.dims,c=[],d=[],u=e.tolist();for(let e=0;e<n;++e){const t=u[e],s=[],o=[];for(let e=1;e<l;++e){const[n,i]=(0,a.max)((0,a.softmax)(t[e]));if(o.push(n),i==r)break;s.push(i)}const n=o.length>0?o.reduce(((e,t)=>e*t),1):0;d.push(s),c.push(n)}return[o(d),c]}char_decode(e){return this.char_tokenizer.batch_decode(e).map((e=>e.replaceAll(" ","")))}bpe_decode(e){return this.bpe_tokenizer.batch_decode(e)}wp_decode(e){return this.wp_tokenizer.batch_decode(e).map((e=>e.replaceAll(" ","")))}batch_decode([e,t,s]){const[r,o]=this._decode_helper(e,"char"),[n,i]=this._decode_helper(t,"bpe"),[l,c]=this._decode_helper(s,"wp"),d=[],u=[];for(let e=0;e<r.length;++e){const[t,s]=(0,a.max)([o[e],i[e],c[e]]);d.push([r[e],n[e],l[e]][s]),u.push(t)}return{generated_text:d,scores:u,char_preds:r,bpe_preds:n,wp_preds:l}}static async from_pretrained(...e){const t=await super.from_pretrained(...e),s=await n.AutoTokenizer.from_pretrained("Xenova/gpt2"),r=await n.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return t.components={image_processor:t.image_processor,char_tokenizer:t.tokenizer,bpe_tokenizer:s,wp_tokenizer:r},t}async _call(e,t=null){const s=await this.image_processor(e);return t&&(s.labels=this.tokenizer(t).input_ids),s}}},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(e,t,s)=>{s.r(t),s.d(t,{MobileNetV1FeatureExtractor:()=>n,MobileNetV1ImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(e,t,s)=>{s.r(t),s.d(t,{MobileNetV2FeatureExtractor:()=>n,MobileNetV2ImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(e,t,s)=>{s.r(t),s.d(t,{MobileNetV3FeatureExtractor:()=>n,MobileNetV3ImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(e,t,s)=>{s.r(t),s.d(t,{MobileNetV4FeatureExtractor:()=>n,MobileNetV4ImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/mobilevit/image_processing_mobilevit.js":(e,t,s)=>{s.r(t),s.d(t,{MobileViTFeatureExtractor:()=>n,MobileViTImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/moonshine/feature_extraction_moonshine.js":(e,t,s)=>{s.r(t),s.d(t,{MoonshineFeatureExtractor:()=>n});var r=s("./src/base/feature_extraction_utils.js"),o=s("./src/utils/tensor.js");class n extends r.FeatureExtractor{async _call(e){(0,r.validate_audio_inputs)(e,"MoonshineFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=[1,e.length];return{input_values:new o.Tensor("float32",e,t)}}}},"./src/models/moonshine/processing_moonshine.js":(e,t,s)=>{s.r(t),s.d(t,{MoonshineProcessor:()=>a});var r=s("./src/models/auto/feature_extraction_auto.js"),o=s("./src/tokenizers.js"),n=s("./src/base/processing_utils.js");class a extends n.Processor{static tokenizer_class=o.AutoTokenizer;static feature_extractor_class=r.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/nougat/image_processing_nougat.js":(e,t,s)=>{s.r(t),s.d(t,{NougatImageProcessor:()=>o});var r=s("./src/models/donut/image_processing_donut.js");class o extends r.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(e,t,s)=>{s.r(t),s.d(t,{Owlv2ImageProcessor:()=>o});var r=s("./src/models/owlvit/image_processing_owlvit.js");class o extends r.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(e,t,s)=>{s.r(t),s.d(t,{OwlViTFeatureExtractor:()=>n,OwlViTImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}class n extends o{}},"./src/models/owlvit/processing_owlvit.js":(e,t,s)=>{s.r(t),s.d(t,{OwlViTProcessor:()=>a});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");class a extends r.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=o.AutoImageProcessor}},"./src/models/paligemma/processing_paligemma.js":(e,t,s)=>{s.r(t),s.d(t,{PaliGemmaProcessor:()=>i});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");const a="<image>";class i extends r.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=o.AutoImageProcessor;static uses_processor_config=!1;async _call(e,t=null,s={}){t||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),t=""),Array.isArray(e)||(e=[e]),Array.isArray(t)||(t=[t]);const r=this.tokenizer.bos_token,o=this.image_processor.config.image_seq_length;let n;t.some((e=>e.includes(a)))?n=t.map((e=>{const t=e.replaceAll(a,a.repeat(o)),s=t.lastIndexOf(a),n=-1===s?0:s+7;return t.slice(0,n)+r+t.slice(n)+"\n"})):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),n=t.map((t=>function(e,t,s,r,o){return`${r.repeat(s*o)}${t}${e}\n`}(t,r,o,a,e.length))));const i=this.tokenizer(n,s);return{...await this.image_processor(e,s),...i}}}},"./src/models/phi3_v/image_processing_phi3_v.js":(e,t,s)=>{s.r(t),s.d(t,{Phi3VImageProcessor:()=>d});var r=s("./src/base/image_processors_utils.js"),o=s("./src/utils/tensor.js");const n=336,a=[2,3],{ceil:i,floor:l,sqrt:c}=Math;class d extends r.ImageProcessor{constructor(e){super({...e,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=e.num_crops}calc_num_image_tokens_from_image_size(e,t){const{num_img_tokens:s}=this.config;return l((l(t/n)*l(e/n)+1)*s+1+(l(t/n)+1)*c(s))}get_resize_output_image_size(e,t){const s=this._num_crops,[r,o]=e.size;let n=r/o,a=1;for(;a*Math.ceil(a/n)<=s;)a+=1;a-=1;const i=Math.floor(336*a);return[i,Math.floor(i/n)]}pad_image(e,t,s,r={}){const[o,a]=t,l=n*i(o/n),c=n*i(a/n),d=[1,1,1].map(((e,t)=>(e-this.image_mean[t])/this.image_std[t]));return super.pad_image(e,t,{width:c,height:l},{center:!0,constant_values:d,...r})}async _call(e,{num_crops:t=null}={}){if(this._num_crops=t??=this.config.num_crops,t<4||c(t)%1!=0)throw new Error("num_crops must be a square number >= 4");Array.isArray(e)||(e=[e]);const s=e.length,r=await Promise.all(e.map((e=>this.preprocess(e)))),d=r.map((e=>e.original_size)),u=r.map((e=>e.reshaped_input_size)),_=[];for(const{pixel_values:e}of r){e.unsqueeze_(0);const[s,r]=e.dims.slice(-2),i=await(0,o.interpolate_4d)(e,{size:[n,n],mode:"bicubic"});if(t>0){const d=[],u=c(t),m=l(r/u),p=l(s/u);for(let t=0;t<u;++t)for(let n=0;n<u;++n){let i,l,c,_;t===u-1?(l=s-p,_=s):(l=t*p,_=(t+1)*p),n===u-1?(i=r-m,c=r):(i=n*m,c=(n+1)*m);const h=[l,i],g=[_,c],f=await(0,o.slice)(e,h,g,a);d.push(f)}const h=await(0,o.interpolate_4d)((0,o.cat)(d,0),{size:[n,n],mode:"bicubic"});_.push((0,o.cat)([i,h],0))}else _.push(i)}const m=(0,o.stack)(_,0),p=u.map((e=>e.map((e=>n*i(e/n)))));return{pixel_values:m,original_sizes:d,reshaped_input_sizes:u,image_sizes:new o.Tensor("int64",p.flat(),[s,2]),num_img_tokens:p.map((([e,t])=>this.calc_num_image_tokens_from_image_size(t,e)))}}}},"./src/models/phi3_v/processing_phi3_v.js":(e,t,s)=>{s.r(t),s.d(t,{Phi3VProcessor:()=>l});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");s("./src/utils/image.js");const a="<|image|>",i=/<\|image_\d+\|>/g;class l extends r.Processor{static image_processor_class=o.AutoImageProcessor;static tokenizer_class=n.AutoTokenizer;async _call(e,t=null,{padding:s=!0,truncation:r=!0,num_crops:o=null}={}){let n,l;if(Array.isArray(e)||(e=[e]),t){l=await this.image_processor(t,{num_crops:o});const{num_img_tokens:c}=l,d=e.map(((e,t)=>e.split(i).join(a.repeat(c[t]))));n=this.tokenizer(d,{padding:s,truncation:r});const u=this.tokenizer.model.convert_tokens_to_ids([a])[0];n.input_ids.map_((e=>e==u?-e:e))}else n=this.tokenizer(e);return{...n,...l}}}},"./src/models/processors.js":(e,t,s)=>{s.r(t),s.d(t,{Florence2Processor:()=>r.Florence2Processor,Gemma3nProcessor:()=>o.Gemma3nProcessor,GroundingDinoProcessor:()=>n.GroundingDinoProcessor,Idefics3Processor:()=>a.Idefics3Processor,JinaCLIPProcessor:()=>l.JinaCLIPProcessor,LlavaProcessor:()=>c.LlavaProcessor,MgpstrProcessor:()=>d.MgpstrProcessor,MoonshineProcessor:()=>u.MoonshineProcessor,OwlViTProcessor:()=>_.OwlViTProcessor,PaliGemmaProcessor:()=>p.PaliGemmaProcessor,Phi3VProcessor:()=>m.Phi3VProcessor,PyAnnoteProcessor:()=>h.PyAnnoteProcessor,Qwen2VLProcessor:()=>g.Qwen2VLProcessor,SamProcessor:()=>f.SamProcessor,SmolVLMProcessor:()=>M.SmolVLMProcessor,SpeechT5Processor:()=>w.SpeechT5Processor,UltravoxProcessor:()=>T.UltravoxProcessor,VLChatProcessor:()=>i.VLChatProcessor,Wav2Vec2Processor:()=>b.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>x.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>P.WhisperProcessor});var r=s("./src/models/florence2/processing_florence2.js"),o=s("./src/models/gemma3n/processing_gemma3n.js"),n=s("./src/models/grounding_dino/processing_grounding_dino.js"),a=s("./src/models/idefics3/processing_idefics3.js"),i=s("./src/models/janus/processing_janus.js"),l=s("./src/models/jina_clip/processing_jina_clip.js"),c=s("./src/models/llava/processing_llava.js"),d=s("./src/models/mgp_str/processing_mgp_str.js"),u=s("./src/models/moonshine/processing_moonshine.js"),_=s("./src/models/owlvit/processing_owlvit.js"),m=s("./src/models/phi3_v/processing_phi3_v.js"),p=s("./src/models/paligemma/processing_paligemma.js"),h=s("./src/models/pyannote/processing_pyannote.js"),g=s("./src/models/qwen2_vl/processing_qwen2_vl.js"),f=s("./src/models/sam/processing_sam.js"),M=s("./src/models/smolvlm/processing_smolvlm.js"),w=s("./src/models/speecht5/processing_speecht5.js"),T=s("./src/models/ultravox/processing_ultravox.js"),b=s("./src/models/wav2vec2/processing_wav2vec2.js"),x=s("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),P=s("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(e,t,s)=>{s.r(t),s.d(t,{PvtImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(e,t,s)=>{s.r(t),s.d(t,{PyAnnoteFeatureExtractor:()=>a});var r=s("./src/base/feature_extraction_utils.js"),o=s("./src/utils/tensor.js"),n=s("./src/utils/maths.js");class a extends r.FeatureExtractor{async _call(e){(0,r.validate_audio_inputs)(e,"PyAnnoteFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=[1,1,e.length];return{input_values:new o.Tensor("float32",e,t)}}samples_to_frames(e){return(e-this.config.offset)/this.config.step}post_process_speaker_diarization(e,t){const s=t/this.samples_to_frames(t)/this.config.sampling_rate,r=[];for(const t of e.tolist()){const e=[];let o=-1;for(let s=0;s<t.length;++s){const r=(0,n.softmax)(t[s]),[a,i]=(0,n.max)(r),[l,c]=[s,s+1];i!==o?(o=i,e.push({id:i,start:l,end:c,score:a})):(e.at(-1).end=c,e.at(-1).score+=a)}r.push(e.map((({id:e,start:t,end:r,score:o})=>({id:e,start:t*s,end:r*s,confidence:o/(r-t)}))))}return r}}},"./src/models/pyannote/processing_pyannote.js":(e,t,s)=>{s.r(t),s.d(t,{PyAnnoteProcessor:()=>n});var r=s("./src/base/processing_utils.js"),o=s("./src/models/pyannote/feature_extraction_pyannote.js");class n extends r.Processor{static feature_extractor_class=o.PyAnnoteFeatureExtractor;async _call(e){return await this.feature_extractor(e)}post_process_speaker_diarization(...e){return this.feature_extractor.post_process_speaker_diarization(...e)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(e,t,s)=>{s.r(t),s.d(t,{Qwen2VLImageProcessor:()=>n});var r=s("./src/base/image_processors_utils.js"),o=s("./src/utils/tensor.js");class n extends r.ImageProcessor{async _call(e,...t){const{pixel_values:s,original_sizes:r,reshaped_input_sizes:n}=await super._call(e,...t);let a=s;const{temporal_patch_size:i,merge_size:l,patch_size:c}=this.config;1===a.dims[0]&&(a=(0,o.cat)(Array.from({length:i},(()=>a)),0));const d=a.dims[0]/i,u=a.dims[1],_=Math.floor(a.dims[2]/c),m=Math.floor(a.dims[3]/c);return{pixel_values:a.view(d,i,u,Math.floor(_/l),l,c,Math.floor(m/l),l,c).permute(0,3,6,4,7,2,1,5,8).view(d*_*m,u*i*c*c),image_grid_thw:new o.Tensor("int64",[d,_,m],[1,3]),original_sizes:r,reshaped_input_sizes:n}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(e,t,s)=>{s.r(t),s.d(t,{Qwen2VLProcessor:()=>a});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");s("./src/utils/image.js");class a extends r.Processor{static image_processor_class=o.AutoImageProcessor;static tokenizer_class=n.AutoTokenizer;async _call(e,t=null,...s){let r,o;if(Array.isArray(e)||(e=[e]),t&&(r=await this.image_processor(t),o=r.image_grid_thw),o){let t=this.image_processor.config.merge_size**2,s=0;const r=o.tolist();e=e.map((e=>{for(;e.includes("<|image_pad|>");){const o=Number(r[s++].reduce(((e,t)=>e*t),1n));e=e.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(o/t)))}return e.replaceAll("<|placeholder|>","<|image_pad|>")}))}return{...this.tokenizer(e),...r}}}},"./src/models/rt_detr/image_processing_rt_detr.js":(e,t,s)=>{s.r(t),s.d(t,{RTDetrImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}},"./src/models/sam/image_processing_sam.js":(e,t,s)=>{s.r(t),s.d(t,{SamImageProcessor:()=>a});var r=s("./src/base/image_processors_utils.js"),o=s("./src/utils/core.js"),n=s("./src/utils/tensor.js");class a extends r.ImageProcessor{reshape_input_points(e,t,s,r=!1){e=structuredClone(e);let a=(0,o.calculateDimensions)(e);if(3===a.length)r||(a=[1,...a]),e=[e];else if(4!==a.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let r=0;r<e.length;++r){let o=t[r],n=s[r],a=[n[0]/o[0],n[1]/o[1]];for(let t=0;t<e[r].length;++t)for(let s=0;s<e[r][t].length;++s)for(let o=0;o<e[r][t][s].length;++o)e[r][t][s][o]*=a[o%2]}return new n.Tensor("float32",Float32Array.from(e.flat(1/0)),a)}add_input_labels(e,t){let s=(0,o.calculateDimensions)(e);if(2===s.length)s=[1,...s],e=[e];else if(3!==s.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(s.some(((e,s)=>e!==t.dims[s])))throw Error(`The first ${s.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new n.Tensor("int64",e.flat(1/0).map(BigInt),s)}async _call(e,{input_points:t=null,input_labels:s=null,input_boxes:r=null}={}){const o=await super._call(e);if(t&&(o.input_points=this.reshape_input_points(t,o.original_sizes,o.reshaped_input_sizes)),s){if(!o.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");o.input_labels=this.add_input_labels(s,o.input_points)}return r&&(o.input_boxes=this.reshape_input_points(r,o.original_sizes,o.reshaped_input_sizes,!0)),o}async post_process_masks(e,t,s,{mask_threshold:r=0,binarize:o=!0,pad_size:a=null}={}){const i=[],l=[(a=a??this.pad_size).height,a.width];for(let a=0;a<t.length;++a){const c=t[a],d=s[a];let u=await(0,n.interpolate_4d)(e[a],{mode:"bilinear",size:l});if(u=u.slice(null,null,[0,d[0]],[0,d[1]]),u=await(0,n.interpolate_4d)(u,{mode:"bilinear",size:c}),o){const e=u.data,t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)e[s]>r&&(t[s]=1);u=new n.Tensor("bool",t,u.dims)}i.push(u)}return i}generate_crop_boxes(e,t,{crop_n_layers:s=0,overlap_ratio:r=512/1500,points_per_crop:o=32,crop_n_points_downscale_factor:n=1}={}){}}},"./src/models/sam/processing_sam.js":(e,t,s)=>{s.r(t),s.d(t,{SamProcessor:()=>n});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js");class n extends r.Processor{static image_processor_class=o.AutoImageProcessor;async _call(...e){return await this.image_processor(...e)}post_process_masks(...e){return this.image_processor.post_process_masks(...e)}reshape_input_points(...e){return this.image_processor.reshape_input_points(...e)}}},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(e,t,s)=>{s.r(t),s.d(t,{SeamlessM4TFeatureExtractor:()=>a});var r=s("./src/base/feature_extraction_utils.js"),o=s("./src/utils/tensor.js"),n=s("./src/utils/audio.js");class a extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,s=(0,n.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);this.mel_filters=s,this.window=(0,n.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(e,t){return e=e.map((e=>32768*e)),(0,n.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e,{padding:t=!0,pad_to_multiple_of:s=2,do_normalize_per_mel_bins:n=!0,return_attention_mask:a=!0}={}){(0,r.validate_audio_inputs)(e,"SeamlessM4TFeatureExtractor");let i,l=await this._extract_fbank_features(e,this.config.max_length);if(n){const[e,t]=l.dims,s=l.data;for(let r=0;r<t;++r){let o=0;for(let n=0;n<e;++n)o+=s[n*t+r];const n=o/e;let a=0;for(let o=0;o<e;++o)a+=(s[o*t+r]-n)**2;a/=e-1;const i=Math.sqrt(a+1e-7);for(let o=0;o<e;++o){const e=o*t+r;s[e]=(s[e]-n)/i}}}if(t){const[e,t]=l.dims,r=l.data,n=e%s;if(n>0){const s=new Float32Array(t*(e+n));s.set(r),s.fill(this.config.padding_value,r.length);const c=e+n;l=new o.Tensor(l.type,s,[c,t]),a&&(i=new o.Tensor("int64",new BigInt64Array(c),[1,c]),i.data.fill(1n,0,e))}}const[c,d]=l.dims,u=this.config.stride;if(0!==c%u)throw new Error(`The number of frames (${c}) must be a multiple of the stride (${u}).`);const _=l.view(1,Math.floor(c/u),d*u),m={input_features:_};if(a){const e=_.dims[1],t=new BigInt64Array(e);if(i){const e=i.data;for(let s=1,r=0;s<c;s+=u,++r)t[r]=e[s]}else t.fill(1n);m.attention_mask=new o.Tensor("int64",t,[1,e])}return m}}},"./src/models/segformer/image_processing_segformer.js":(e,t,s)=>{s.r(t),s.d(t,{SegformerFeatureExtractor:()=>n,SegformerImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_semantic_segmentation(...e){return(0,r.post_process_semantic_segmentation)(...e)}}class n extends o{}},"./src/models/siglip/image_processing_siglip.js":(e,t,s)=>{s.r(t),s.d(t,{SiglipImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":(e,t,s)=>{s.r(t),s.d(t,{SmolVLMImageProcessor:()=>r.Idefics3ImageProcessor});var r=s("./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":(e,t,s)=>{s.r(t),s.d(t,{SmolVLMProcessor:()=>r.Idefics3Processor});var r=s("./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":(e,t,s)=>{s.r(t),s.d(t,{SnacFeatureExtractor:()=>o});var r=s("./src/models/dac/feature_extraction_dac.js");class o extends r.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(e,t,s)=>{s.r(t),s.d(t,{SpeechT5FeatureExtractor:()=>o});var r=s("./src/base/feature_extraction_utils.js");class o extends r.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(e,t,s)=>{s.r(t),s.d(t,{SpeechT5Processor:()=>a});var r=s("./src/base/processing_utils.js"),o=s("./src/tokenizers.js"),n=s("./src/models/auto/feature_extraction_auto.js");class a extends r.Processor{static tokenizer_class=o.AutoTokenizer;static feature_extractor_class=n.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/swin2sr/image_processing_swin2sr.js":(e,t,s)=>{s.r(t),s.d(t,{Swin2SRImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{pad_image(e,t,s,r={}){const[o,n,a]=t;return super.pad_image(e,t,{width:n+(s-n%s)%s,height:o+(s-o%s)%s},{mode:"symmetric",center:!1,constant_values:-1,...r})}}},"./src/models/ultravox/processing_ultravox.js":(e,t,s)=>{s.r(t),s.d(t,{UltravoxProcessor:()=>a});var r=s("./src/models/auto/feature_extraction_auto.js"),o=s("./src/tokenizers.js"),n=s("./src/base/processing_utils.js");class a extends n.Processor{static tokenizer_class=o.AutoTokenizer;static feature_extractor_class=r.AutoFeatureExtractor;static uses_processor_config=!0;async _call(e,t=null,s={}){if(Array.isArray(e))throw new Error("Batched inputs are not supported yet.");let r={};if(t){const o=t.length,{input_features:n}=await this.feature_extractor(t,{...s,max_length:o}),a=Math.round(o/this.config.encoder_ds_factor+1e-4),i=1+Math.ceil(a/this.config.stack_factor);r.audio_token_len=[i],r.audio_values=n;const l=this.config.audio_placeholder;if(!e.includes(l))throw new Error(`The input text does not contain the image token ${l}.`);e=e.replaceAll(l,l.repeat(i))}return{...this.tokenizer(e,{add_special_tokens:!1,...s}),...r}}}},"./src/models/vit/image_processing_vit.js":(e,t,s)=>{s.r(t),s.d(t,{ViTFeatureExtractor:()=>n,ViTImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/vitmatte/image_processing_vitmatte.js":(e,t,s)=>{s.r(t),s.d(t,{VitMatteImageProcessor:()=>n});var r=s("./src/base/image_processors_utils.js"),o=s("./src/utils/tensor.js");class n extends r.ImageProcessor{async _call(e,t){Array.isArray(e)||(e=[e]),Array.isArray(t)||(t=[t]);const s=await Promise.all(e.map((e=>this.preprocess(e)))),r=await Promise.all(t.map((e=>this.preprocess(e,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0}))));return{pixel_values:(0,o.stack)(s.map(((e,t)=>(0,o.cat)([e.pixel_values,r[t].pixel_values],0))),0),original_sizes:s.map((e=>e.original_size)),reshaped_input_sizes:s.map((e=>e.reshaped_input_size))}}}},"./src/models/vitpose/image_processing_vitpose.js":(e,t,s)=>{s.r(t),s.d(t,{VitPoseImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_pose_estimation(e,t,{threshold:s=null}={}){const r=e.tolist(),[o,n,a,i]=e.dims,l=[];for(let e=0;e<o;++e){const o=r[e],n=t[e],c=[];for(let e=0;e<n.length;++e){const t=n[e],r=[],l=[],d=[],u=t.at(-2)/i,_=t.at(-1)/a;for(let e=0;e<o.length;++e){let[t,n]=[0,0],a=0,i=-1/0;const c=o[e];for(let e=0;e<c.length;++e){const s=c[e];for(let r=0;r<s.length;++r){const o=s[r];a+=o,i=Math.max(i,o),t+=(r+.5)*o,n+=e*o}}if(null!=s&&i<s)continue;const m=[u*t/a,_*n/a];r.push(m),d.push(e),l.push(i)}c.push({bbox:t,scores:l,labels:d,keypoints:r})}l.push(c)}return l}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(e,t,s)=>{s.r(t),s.d(t,{Wav2Vec2FeatureExtractor:()=>n});var r=s("./src/base/feature_extraction_utils.js"),o=s("./src/utils/tensor.js");class n extends r.FeatureExtractor{_zero_mean_unit_var_norm(e){const t=e.reduce(((e,t)=>e+t),0)/e.length,s=e.reduce(((e,s)=>e+(s-t)**2),0)/e.length;return e.map((e=>(e-t)/Math.sqrt(s+1e-7)))}async _call(e){(0,r.validate_audio_inputs)(e,"Wav2Vec2FeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));let t=e;this.config.do_normalize&&(t=this._zero_mean_unit_var_norm(t));const s=[1,t.length];return{input_values:new o.Tensor("float32",t,s),attention_mask:new o.Tensor("int64",new BigInt64Array(t.length).fill(1n),s)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(e,t,s)=>{s.r(t),s.d(t,{Wav2Vec2Processor:()=>a});var r=s("./src/tokenizers.js"),o=s("./src/models/auto/feature_extraction_auto.js"),n=s("./src/base/processing_utils.js");class a extends n.Processor{static tokenizer_class=r.AutoTokenizer;static feature_extractor_class=o.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(e,t,s)=>{s.r(t),s.d(t,{Wav2Vec2ProcessorWithLM:()=>a});var r=s("./src/tokenizers.js"),o=s("./src/models/auto/feature_extraction_auto.js"),n=s("./src/base/processing_utils.js");class a extends n.Processor{static tokenizer_class=r.AutoTokenizer;static feature_extractor_class=o.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/wespeaker/feature_extraction_wespeaker.js":(e,t,s)=>{s.r(t),s.d(t,{WeSpeakerFeatureExtractor:()=>n});var r=s("./src/base/feature_extraction_utils.js"),o=(s("./src/utils/tensor.js"),s("./src/utils/audio.js"));class n extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,s=(0,o.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);this.mel_filters=s,this.window=(0,o.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(e){return e=e.map((e=>32768*e)),(0,o.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(e){(0,r.validate_audio_inputs)(e,"WeSpeakerFeatureExtractor");const t=(await this._extract_fbank_features(e)).unsqueeze_(0);if(null===this.config.fbank_centering_span){const e=t.mean(1).data,s=t.data,[r,o,n]=t.dims;for(let t=0;t<r;++t){const r=t*o*n,a=t*n;for(let t=0;t<o;++t){const o=r+t*n;for(let t=0;t<n;++t)s[o+t]-=e[a+t]}}}return{input_features:t}}}},"./src/models/whisper/common_whisper.js":(e,t,s)=>{s.r(t),s.d(t,{WHISPER_LANGUAGE_MAPPING:()=>o,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>n,whisper_language_to_code:()=>a});const r=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],o=new Map(r),n=new Map([...r.map((([e,t])=>[t,e])),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function a(e){e=e.toLowerCase();let t=n.get(e);if(void 0===t){const s=e.match(/^<\|([a-z]{2})\|>$/);if(s&&(e=s[1]),!o.has(e)){const t=2===e.length?o.keys():o.values();throw new Error(`Language "${e}" is not supported. Must be one of: ${JSON.stringify(Array.from(t))}`)}t=e}return t}},"./src/models/whisper/feature_extraction_whisper.js":(e,t,s)=>{s.r(t),s.d(t,{WhisperFeatureExtractor:()=>a});var r=s("./src/base/feature_extraction_utils.js"),o=(s("./src/utils/tensor.js"),s("./src/utils/audio.js")),n=s("./src/utils/maths.js");class a extends r.FeatureExtractor{constructor(e){super(e),this.config.mel_filters??=(0,o.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=(0,o.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(e){const t=await(0,o.spectrogram)(e,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(e.length/this.config.hop_length),this.config.nb_max_frames)}),s=t.data,r=(0,n.max)(s)[0];for(let e=0;e<s.length;++e)s[e]=(Math.max(s[e],r-8)+4)/4;return t}async _call(e,{max_length:t=null}={}){let s;(0,r.validate_audio_inputs)(e,"WhisperFeatureExtractor");const o=t??this.config.n_samples;e.length>o?(e.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),s=e.slice(0,o)):(s=new Float32Array(o),s.set(e));return{input_features:(await this._extract_fbank_features(s)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(e,t,s)=>{s.r(t),s.d(t,{WhisperGenerationConfig:()=>o});var r=s("./src/generation/configuration_utils.js");class o extends r.GenerationConfig{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}},"./src/models/whisper/processing_whisper.js":(e,t,s)=>{s.r(t),s.d(t,{WhisperProcessor:()=>a});var r=s("./src/models/auto/feature_extraction_auto.js"),o=s("./src/tokenizers.js"),n=s("./src/base/processing_utils.js");class a extends n.Processor{static tokenizer_class=o.AutoTokenizer;static feature_extractor_class=r.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/yolos/image_processing_yolos.js":(e,t,s)=>{s.r(t),s.d(t,{YolosFeatureExtractor:()=>n,YolosImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}class n extends o{}},"./src/ops/registry.js":(e,t,s)=>{s.r(t),s.d(t,{TensorOpRegistry:()=>l});var r=s("./src/backends/onnx.js"),o=s("./src/utils/tensor.js"),n=s("./src/env.js");const a=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV,i=async(e,t,s)=>{const n=await(0,r.createInferenceSession)(new Uint8Array(e),t);let i=Promise.resolve();return async e=>{const t=(0,r.isONNXProxy)(),l=Object.fromEntries(Object.entries(e).map((([e,s])=>[e,(t?s.clone():s).ort_tensor]))),c=await(i=a?i.then((()=>n.run(l))):n.run(l));return Array.isArray(s)?s.map((e=>new o.Tensor(c[e]))):new o.Tensor(c[s])}};class l{static session_options={};static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=i([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=i([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=i([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=i([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=i([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=i([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=i([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=i([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}},"./src/pipelines.js":(e,t,s)=>{s.r(t),s.d(t,{AudioClassificationPipeline:()=>C,AutomaticSpeechRecognitionPipeline:()=>A,BackgroundRemovalPipeline:()=>z,DepthEstimationPipeline:()=>G,DocumentQuestionAnsweringPipeline:()=>N,FeatureExtractionPipeline:()=>y,FillMaskPipeline:()=>w,ImageClassificationPipeline:()=>L,ImageFeatureExtractionPipeline:()=>v,ImageSegmentationPipeline:()=>I,ImageToImagePipeline:()=>B,ImageToTextPipeline:()=>E,ObjectDetectionPipeline:()=>j,Pipeline:()=>h,QuestionAnsweringPipeline:()=>M,SummarizationPipeline:()=>b,Text2TextGenerationPipeline:()=>T,TextClassificationPipeline:()=>g,TextGenerationPipeline:()=>k,TextToAudioPipeline:()=>O,TokenClassificationPipeline:()=>f,TranslationPipeline:()=>x,ZeroShotAudioClassificationPipeline:()=>S,ZeroShotClassificationPipeline:()=>F,ZeroShotImageClassificationPipeline:()=>D,ZeroShotObjectDetectionPipeline:()=>V,pipeline:()=>W});var r=s("./src/tokenizers.js"),o=s("./src/models.js"),n=s("./src/models/auto/processing_auto.js"),a=(s("./src/base/processing_utils.js"),s("./src/utils/generic.js")),i=s("./src/utils/core.js"),l=s("./src/utils/maths.js"),c=s("./src/utils/audio.js"),d=s("./src/utils/tensor.js"),u=s("./src/utils/image.js");async function _(e){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>u.RawImage.read(e))))}async function m(e,t){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>"string"==typeof e||e instanceof URL?(0,c.read_audio)(e,t):e instanceof Float64Array?new Float32Array(e):e)))}function p(e,t){t&&(e=e.map((e=>0|e)));const[s,r,o,n]=e;return{xmin:s,ymin:r,xmax:o,ymax:n}}class h extends a.Callable{constructor({task:e,model:t,tokenizer:s=null,processor:r=null}){super(),this.task=e,this.model=t,this.tokenizer=s,this.processor=r}async dispose(){await this.model.dispose()}}class g extends h{constructor(e){super(e)}async _call(e,{top_k:t=1}={}){const s=this.tokenizer(e,{padding:!0,truncation:!0}),r=await this.model(s),o="multi_label_classification"===this.model.config.problem_type?e=>e.sigmoid():e=>new d.Tensor("float32",(0,l.softmax)(e.data),e.dims),n=this.model.config.id2label,a=[];for(const e of r.logits){const s=o(e),r=await(0,d.topk)(s,t),i=r[0].tolist(),l=r[1].tolist().map(((e,t)=>({label:n?n[e]:`LABEL_${e}`,score:i[t]})));1===t?a.push(...l):a.push(l)}return Array.isArray(e)||1===t?a:a[0]}}class f extends h{constructor(e){super(e)}async _call(e,{ignore_labels:t=["O"]}={}){const s=Array.isArray(e),r=this.tokenizer(s?e:[e],{padding:!0,truncation:!0}),o=(await this.model(r)).logits,n=this.model.config.id2label,a=[];for(let e=0;e<o.dims[0];++e){const s=r.input_ids[e],i=o[e],c=[];for(let e=0;e<i.dims[0];++e){const r=i[e],o=(0,l.max)(r.data)[1],a=n?n[o]:`LABEL_${o}`;if(t.includes(a))continue;const d=this.tokenizer.decode([s[e].item()],{skip_special_tokens:!0});if(""===d)continue;const u=(0,l.softmax)(r.data);c.push({entity:a,score:u[o],index:e,word:d})}a.push(c)}return s?a:a[0]}}class M extends h{constructor(e){super(e)}async _call(e,t,{top_k:s=1}={}){const r=this.tokenizer(e,{text_pair:t,padding:!0,truncation:!0}),{start_logits:o,end_logits:n}=await this.model(r),a=r.input_ids.tolist(),c=r.attention_mask.tolist(),d=this.tokenizer.all_special_ids,u=[];for(let e=0;e<o.dims[0];++e){const t=a[e],r=t.findIndex((e=>e==this.tokenizer.sep_token_id)),_=(c[e].map(((e,s)=>1==e&&(0===s||s>r&&-1===d.findIndex((e=>e==t[s]))))),o[e].tolist()),m=n[e].tolist();for(let s=1;s<_.length;++s)(0==c[e]||s<=r||-1!==d.findIndex((e=>e==t[s])))&&(_[s]=-1/0,m[s]=-1/0);const p=(0,l.softmax)(_).map(((e,t)=>[e,t])),h=(0,l.softmax)(m).map(((e,t)=>[e,t]));p[0][0]=0,h[0][0]=0;const g=(0,i.product)(p,h).filter((e=>e[0][1]<=e[1][1])).map((e=>[e[0][1],e[1][1],e[0][0]*e[1][0]])).sort(((e,t)=>t[2]-e[2]));for(let e=0;e<Math.min(g.length,s);++e){const[s,r,o]=g[e],n=t.slice(s,r+1),a=this.tokenizer.decode(n,{skip_special_tokens:!0});u.push({answer:a,score:o})}}return 1===s?u[0]:u}}class w extends h{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const s=this.tokenizer(e,{padding:!0,truncation:!0}),{logits:r}=await this.model(s),o=[],n=s.input_ids.tolist();for(let e=0;e<n.length;++e){const s=n[e],a=s.findIndex((e=>e==this.tokenizer.mask_token_id));if(-1===a)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const i=r[e][a],c=await(0,d.topk)(new d.Tensor("float32",(0,l.softmax)(i.data),i.dims),t),u=c[0].tolist(),_=c[1].tolist();o.push(_.map(((e,t)=>{const r=s.slice();return r[a]=e,{score:u[t],token:Number(e),token_str:this.tokenizer.decode([e]),sequence:this.tokenizer.decode(r,{skip_special_tokens:!0})}})))}return Array.isArray(e)?o:o[0]}}class T extends h{_key="generated_text";constructor(e){super(e)}async _call(e,t={}){Array.isArray(e)||(e=[e]),this.model.config.prefix&&(e=e.map((e=>this.model.config.prefix+e)));const s=this.model.config.task_specific_params;s&&s[this.task]&&s[this.task].prefix&&(e=e.map((e=>s[this.task].prefix+e)));const r=this.tokenizer,o={padding:!0,truncation:!0};let n;n=this instanceof x&&"_build_translation_inputs"in r?r._build_translation_inputs(e,o,t):r(e,o);const a=await this.model.generate({...n,...t});return r.batch_decode(a,{skip_special_tokens:!0}).map((e=>({[this._key]:e})))}}class b extends T{_key="summary_text";constructor(e){super(e)}}class x extends T{_key="translation_text";constructor(e){super(e)}}function P(e){return Array.isArray(e)&&e.every((e=>"role"in e&&"content"in e))}class k extends h{constructor(e){super(e)}async _call(e,t={}){let s,r=!1,o=!1;if("string"==typeof e)s=e=[e];else if(Array.isArray(e)&&e.every((e=>"string"==typeof e)))r=!0,s=e;else{if(P(e))e=[e];else{if(!Array.isArray(e)||!e.every(P))throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");r=!0}o=!0,s=e.map((e=>this.tokenizer.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0})))}const n=t.add_special_tokens??!1,a=!o&&(t.return_full_text??!0);this.tokenizer.padding_side="left";const i=this.tokenizer(s,{add_special_tokens:n,padding:!0,truncation:!0}),l=await this.model.generate({...i,...t}),c=this.tokenizer.batch_decode(l,{skip_special_tokens:!0});let d;!a&&i.input_ids.dims.at(-1)>0&&(d=this.tokenizer.batch_decode(i.input_ids,{skip_special_tokens:!0}).map((e=>e.length)));const u=Array.from({length:e.length},(e=>[]));for(let t=0;t<c.length;++t){const s=Math.floor(t/l.dims[0]*e.length);d&&(c[t]=c[t].slice(d[s])),u[s].push({generated_text:o?[...e[s],{role:"assistant",content:c[t]}]:c[t]})}return r||1!==u.length?u:u[0]}}class F extends h{constructor(e){super(e),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map((([e,t])=>[e.toLowerCase(),t]))),this.entailment_id=this.label2id.entailment,void 0===this.entailment_id&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,void 0===this.contradiction_id&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(e,t,{hypothesis_template:s="This example is {}.",multi_label:r=!1}={}){const o=Array.isArray(e);o||(e=[e]),Array.isArray(t)||(t=[t]);const n=t.map((e=>s.replace("{}",e))),a=r||1===t.length,i=[];for(const s of e){const e=[];for(const t of n){const r=this.tokenizer(s,{text_pair:t,padding:!0,truncation:!0}),o=await this.model(r);a?e.push([o.logits.data[this.contradiction_id],o.logits.data[this.entailment_id]]):e.push(o.logits.data[this.entailment_id])}const r=(a?e.map((e=>(0,l.softmax)(e)[1])):(0,l.softmax)(e)).map(((e,t)=>[e,t])).sort(((e,t)=>t[0]-e[0]));i.push({sequence:s,labels:r.map((e=>t[e[1]])),scores:r.map((e=>e[0]))})}return o?i:i[0]}}class y extends h{constructor(e){super(e)}async _call(e,{pooling:t="none",normalize:s=!1,quantize:r=!1,precision:o="binary"}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),a=await this.model(n);let i=a.last_hidden_state??a.logits??a.token_embeddings;switch(t){case"none":break;case"mean":i=(0,d.mean_pooling)(i,n.attention_mask);break;case"first_token":case"cls":i=i.slice(null,0);break;case"last_token":case"eos":i=i.slice(null,-1);break;default:throw Error(`Pooling method '${t}' not supported.`)}return s&&(i=i.normalize(2,-1)),r&&(i=(0,d.quantize_embeddings)(i,o)),i}}class v extends h{constructor(e){super(e)}async _call(e,{pool:t=null}={}){const s=await _(e),{pixel_values:r}=await this.processor(s),o=await this.model({pixel_values:r});let n;if(t){if(!("pooler_output"in o))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");n=o.pooler_output}else n=o.last_hidden_state??o.logits??o.image_embeds;return n}}class C extends h{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const s=this.processor.feature_extractor.config.sampling_rate,r=await m(e,s),o=this.model.config.id2label,n=[];for(const e of r){const s=await this.processor(e),r=(await this.model(s)).logits[0],a=await(0,d.topk)(new d.Tensor("float32",(0,l.softmax)(r.data),r.dims),t),i=a[0].tolist(),c=a[1].tolist().map(((e,t)=>({label:o?o[e]:`LABEL_${e}`,score:i[t]})));n.push(c)}return Array.isArray(e)?n:n[0]}}class S extends h{constructor(e){super(e)}async _call(e,t,{hypothesis_template:s="This is a sound of {}."}={}){const r=!Array.isArray(e);r&&(e=[e]);const o=t.map((e=>s.replace("{}",e))),n=this.tokenizer(o,{padding:!0,truncation:!0}),a=this.processor.feature_extractor.config.sampling_rate,i=await m(e,a),c=[];for(const e of i){const s=await this.processor(e),r=await this.model({...n,...s}),o=(0,l.softmax)(r.logits_per_audio.data);c.push([...o].map(((e,s)=>({score:e,label:t[s]}))))}return r?c[0]:c}}class A extends h{constructor(e){super(e)}async _call(e,t={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(e,t);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(e,t);case"moonshine":return this._call_moonshine(e,t);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(e,t){t.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),t.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const s=!Array.isArray(e);s&&(e=[e]);const r=this.processor.feature_extractor.config.sampling_rate,o=await m(e,r),n=[];for(const e of o){const t=await this.processor(e),s=(await this.model(t)).logits[0],r=[];for(const e of s)r.push((0,l.max)(e.data)[1]);const o=this.tokenizer.decode(r);n.push({text:o})}return s?n[0]:n}async _call_whisper(e,t){const s=t.return_timestamps??!1,r=t.chunk_length_s??0,o=t.force_full_sequences??!1;let n=t.stride_length_s??null;const a={...t};"word"===s&&(a.return_token_timestamps=!0,a.return_timestamps=!1);const i=!Array.isArray(e);i&&(e=[e]);const c=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,d=this.processor.feature_extractor.config.hop_length,u=this.processor.feature_extractor.config.sampling_rate,_=await m(e,u),p=[];for(const e of _){let t=[];if(r>0){if(null===n)n=r/6;else if(r<=n)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const s=u*r,o=u*n,a=s-2*o;let i=0;for(;;){const r=i+s,n=e.subarray(i,r),l=await this.processor(n),c=0===i,d=r>=e.length;if(t.push({stride:[n.length,c?0:o,d?0:o],input_features:l.input_features,is_last:d}),d)break;i+=a}}else t=[{stride:[e.length,0,0],input_features:(await this.processor(e)).input_features,is_last:!0}];for(const e of t){a.num_frames=Math.floor(e.stride[0]/d);const t=await this.model.generate({inputs:e.input_features,...a});"word"===s?(e.tokens=t.sequences.tolist()[0],e.token_timestamps=t.token_timestamps.tolist()[0].map((e=>(0,l.round)(e,2)))):e.tokens=t[0].tolist(),e.stride=e.stride.map((e=>e/u))}const[i,_]=this.tokenizer._decode_asr(t,{time_precision:c,return_timestamps:s,force_full_sequences:o});p.push({text:i,..._})}return i?p[0]:p}async _call_moonshine(e,t){const s=!Array.isArray(e);s&&(e=[e]);const r=this.processor.feature_extractor.config.sampling_rate,o=await m(e,r),n=[];for(const e of o){const s=await this.processor(e),o=6*Math.floor(e.length/r),a=await this.model.generate({max_new_tokens:o,...t,...s}),i=this.processor.batch_decode(a,{skip_special_tokens:!0})[0];n.push({text:i})}return s?n[0]:n}}class E extends h{constructor(e){super(e)}async _call(e,t={}){const s=Array.isArray(e),r=await _(e),{pixel_values:o}=await this.processor(r),n=[];for(const e of o){e.dims=[1,...e.dims];const s=await this.model.generate({inputs:e,...t}),r=this.tokenizer.batch_decode(s,{skip_special_tokens:!0}).map((e=>({generated_text:e.trim()})));n.push(r)}return s?n:n[0]}}class L extends h{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const s=await _(e),{pixel_values:r}=await this.processor(s),o=await this.model({pixel_values:r}),n=this.model.config.id2label,a=[];for(const e of o.logits){const s=await(0,d.topk)(new d.Tensor("float32",(0,l.softmax)(e.data),e.dims),t),r=s[0].tolist(),o=s[1].tolist().map(((e,t)=>({label:n?n[e]:`LABEL_${e}`,score:r[t]})));a.push(o)}return Array.isArray(e)?a:a[0]}}class I extends h{constructor(e){super(e),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(e,{threshold:t=.5,mask_threshold:s=.5,overlap_mask_area_threshold:r=.8,label_ids_to_fuse:o=null,target_sizes:n=null,subtask:a=null}={}){if(Array.isArray(e)&&1!==e.length)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const i=await _(e),l=i.map((e=>[e.height,e.width])),c=await this.processor(i),{inputNames:d,outputNames:m}=this.model.sessions.model;if(!d.includes("pixel_values")){if(1!==d.length)throw Error(`Expected a single input name, but got ${d.length} inputs: ${d}.`);const e=d[0];if(e in c)throw Error(`Input name ${e} already exists in the inputs.`);c[e]=c.pixel_values}const p=await this.model(c);let h=null;if(null!==a)h=this.subtasks_mapping[a];else if(this.processor.image_processor)for(const[e,t]of Object.entries(this.subtasks_mapping))if(t in this.processor.image_processor){h=this.processor.image_processor[t].bind(this.processor.image_processor),a=e;break}const g=this.model.config.id2label,f=[];if(a)if("panoptic"===a||"instance"===a){const e=h(p,t,s,r,o,n??l)[0],a=e.segmentation;for(const t of e.segments_info){const e=new Uint8ClampedArray(a.data.length);for(let s=0;s<a.data.length;++s)a.data[s]===t.id&&(e[s]=255);const s=new u.RawImage(e,a.dims[1],a.dims[0],1);f.push({score:t.score,label:g[t.label_id],mask:s})}}else{if("semantic"!==a)throw Error(`Subtask ${a} not supported.`);{const{segmentation:e,labels:t}=h(p,n??l)[0];for(const s of t){const t=new Uint8ClampedArray(e.data.length);for(let r=0;r<e.data.length;++r)e.data[r]===s&&(t[r]=255);const r=new u.RawImage(t,e.dims[1],e.dims[0],1);f.push({score:null,label:g[s],mask:r})}}}else{const e=1e-5,t=p[m[0]];for(let s=0;s<l.length;++s){const r=l[s],o=t[s];o.data.some((t=>t<-e||t>1+e))&&o.sigmoid_();const n=await u.RawImage.fromTensor(o.mul_(255).to("uint8")).resize(r[1],r[0]);f.push({label:null,score:null,mask:n})}}return f}}class z extends I{constructor(e){super(e)}async _call(e,t={}){if(Array.isArray(e)&&1!==e.length)throw Error("Background removal pipeline currently only supports a batch size of 1.");const s=await _(e),r=await super._call(e,t);return s.map(((e,t)=>{const s=e.clone();return s.putAlpha(r[t].mask),s}))}}class D extends h{constructor(e){super(e)}async _call(e,t,{hypothesis_template:s="This is a photo of {}"}={}){const r=Array.isArray(e),o=await _(e),n=t.map((e=>s.replace("{}",e))),a=this.tokenizer(n,{padding:"siglip"!==this.model.config.model_type||"max_length",truncation:!0}),{pixel_values:i}=await this.processor(o),c=await this.model({...a,pixel_values:i}),d="siglip"===this.model.config.model_type?e=>e.sigmoid().data:e=>(0,l.softmax)(e.data),u=[];for(const e of c.logits_per_image){const s=[...d(e)].map(((e,s)=>({score:e,label:t[s]})));s.sort(((e,t)=>t.score-e.score)),u.push(s)}return r?u:u[0]}}class j extends h{constructor(e){super(e)}async _call(e,{threshold:t=.9,percentage:s=!1}={}){const r=Array.isArray(e);if(r&&1!==e.length)throw Error("Object detection pipeline currently only supports a batch size of 1.");const o=await _(e),n=s?null:o.map((e=>[e.height,e.width])),{pixel_values:a,pixel_mask:i}=await this.processor(o),l=await this.model({pixel_values:a,pixel_mask:i}),c=this.processor.image_processor.post_process_object_detection(l,t,n),d=this.model.config.id2label,u=c.map((e=>e.boxes.map(((t,r)=>({score:e.scores[r],label:d[e.classes[r]],box:p(t,!s)})))));return r?u:u[0]}}class V extends h{constructor(e){super(e)}async _call(e,t,{threshold:s=.1,top_k:r=null,percentage:o=!1}={}){const n=Array.isArray(e),a=await _(e),i=this.tokenizer(t,{padding:!0,truncation:!0}),l=await this.processor(a),c=[];for(let e=0;e<a.length;++e){const n=a[e],d=o?null:[[n.height,n.width]],u=l.pixel_values[e].unsqueeze_(0),_=await this.model({...i,pixel_values:u});let m;if("post_process_grounded_object_detection"in this.processor){const e=this.processor.post_process_grounded_object_detection(_,i.input_ids,{box_threshold:s,text_threshold:s,target_sizes:d})[0];m=e.boxes.map(((t,s)=>({score:e.scores[s],label:e.labels[s],box:p(t,!o)})))}else{const e=this.processor.image_processor.post_process_object_detection(_,s,d,!0)[0];m=e.boxes.map(((s,r)=>({score:e.scores[r],label:t[e.classes[r]],box:p(s,!o)})))}m.sort(((e,t)=>t.score-e.score)),null!==r&&(m=m.slice(0,r)),c.push(m)}return n?c:c[0]}}class N extends h{constructor(e){super(e)}async _call(e,t,s={}){const r=(await _(e))[0],{pixel_values:o}=await this.processor(r),n=`<s_docvqa><s_question>${t}</s_question><s_answer>`,a=this.tokenizer(n,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,i=await this.model.generate({inputs:o,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:a,...s}),l=this.tokenizer.batch_decode(i)[0].match(/<s_answer>(.*?)<\/s_answer>/);let c=null;return l&&l.length>=2&&(c=l[1].trim()),[{answer:c}]}}class O extends h{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(e){super(e),this.vocoder=e.vocoder??null}async _call(e,{speaker_embeddings:t=null}={}){return this.processor?this._call_text_to_spectrogram(e,{speaker_embeddings:t}):this._call_text_to_waveform(e)}async _call_text_to_waveform(e){const t=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:s}=await this.model(t),r=this.model.config.sampling_rate;return new c.RawAudio(s.data,r)}async _call_text_to_spectrogram(e,{speaker_embeddings:t}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await o.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),("string"==typeof t||t instanceof URL)&&(t=new Float32Array(await(await fetch(t)).arrayBuffer())),t instanceof Float32Array)t=new d.Tensor("float32",t,[1,t.length]);else if(!(t instanceof d.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:s}=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:r}=await this.model.generate_speech(s,t,{vocoder:this.vocoder}),n=this.processor.feature_extractor.config.sampling_rate;return new c.RawAudio(r.data,n)}}class B extends h{constructor(e){super(e)}async _call(e){const t=await _(e),s=await this.processor(t),r=await this.model(s),o=[];for(const e of r.reconstruction){const t=e.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");o.push(u.RawImage.fromTensor(t))}return o.length>1?o:o[0]}}class G extends h{constructor(e){super(e)}async _call(e){const t=await _(e),s=await this.processor(t),{predicted_depth:r}=await this.model(s),o=[];for(let e=0;e<t.length;++e){const s=r[e],[n,a]=s.dims.slice(-2),[i,l]=t[e].size,c=(await(0,d.interpolate_4d)(s.view(1,1,n,a),{size:[l,i],mode:"bilinear"})).view(l,i),_=c.min().item(),m=c.max().item(),p=c.sub(_).div_(m-_).mul_(255).to("uint8").unsqueeze(0),h=u.RawImage.fromTensor(p);o.push({predicted_depth:c,depth:h})}return o.length>1?o:o[0]}}const R=Object.freeze({"text-classification":{tokenizer:r.AutoTokenizer,pipeline:g,model:o.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:r.AutoTokenizer,pipeline:f,model:o.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:r.AutoTokenizer,pipeline:M,model:o.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:r.AutoTokenizer,pipeline:w,model:o.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:r.AutoTokenizer,pipeline:b,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:r.AutoTokenizer,pipeline:x,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:r.AutoTokenizer,pipeline:T,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:r.AutoTokenizer,pipeline:k,model:o.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:r.AutoTokenizer,pipeline:F,model:o.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:C,model:o.AutoModelForAudioClassification,processor:n.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:r.AutoTokenizer,pipeline:S,model:o.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:r.AutoTokenizer,pipeline:A,model:[o.AutoModelForSpeechSeq2Seq,o.AutoModelForCTC],processor:n.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:r.AutoTokenizer,pipeline:O,model:[o.AutoModelForTextToWaveform,o.AutoModelForTextToSpectrogram],processor:[n.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:r.AutoTokenizer,pipeline:E,model:o.AutoModelForVision2Seq,processor:n.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:L,model:o.AutoModelForImageClassification,processor:n.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:I,model:[o.AutoModelForImageSegmentation,o.AutoModelForSemanticSegmentation,o.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:z,model:[o.AutoModelForImageSegmentation,o.AutoModelForSemanticSegmentation,o.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:r.AutoTokenizer,pipeline:D,model:o.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:j,model:o.AutoModelForObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:r.AutoTokenizer,pipeline:V,model:o.AutoModelForZeroShotObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:r.AutoTokenizer,pipeline:N,model:o.AutoModelForDocumentQuestionAnswering,processor:n.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:B,model:o.AutoModelForImageToImage,processor:n.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:G,model:o.AutoModelForDepthEstimation,processor:n.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:r.AutoTokenizer,pipeline:y,model:o.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:n.AutoProcessor,pipeline:v,model:[o.AutoModelForImageFeatureExtraction,o.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),q=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function W(e,t=null,{progress_callback:s=null,config:r=null,cache_dir:o=null,local_files_only:n=!1,revision:a="main",device:l=null,dtype:c=null,subfolder:d="onnx",use_external_data_format:u=null,model_file_name:_=null,session_options:m={}}={}){e=q[e]??e;const p=R[e.split("_",1)[0]];if(!p)throw Error(`Unsupported pipeline: ${e}. Must be one of [${Object.keys(R)}]`);t||(t=p.default.model,console.log(`No model specified. Using default model: "${t}".`));const h={progress_callback:s,config:r,cache_dir:o,local_files_only:n,revision:a,device:l,dtype:c,subfolder:d,use_external_data_format:u,model_file_name:_,session_options:m},g=new Map([["tokenizer",p.tokenizer],["model",p.model],["processor",p.processor]]),f=await async function(e,t,s){const r=Object.create(null),o=[];for(const[n,a]of e.entries()){if(!a)continue;let e;e=Array.isArray(a)?new Promise((async(e,r)=>{let o;for(const n of a){if(null===n)return void e(null);try{return void e(await n.from_pretrained(t,s))}catch(e){if(e.message?.includes("Unsupported model type"))o=e;else{if(!e.message?.includes("Could not locate file"))return void r(e);o=e}}}r(o)})):a.from_pretrained(t,s),r[n]=e,o.push(e)}await Promise.all(o);for(const[e,t]of Object.entries(r))r[e]=await t;return r}(g,t,h);f.task=e,(0,i.dispatchCallback)(s,{status:"ready",task:e,model:t});return new(0,p.pipeline)(f)}},"./src/tokenizers.js":(e,t,s)=>{s.r(t),s.d(t,{AlbertTokenizer:()=>ke,AutoTokenizer:()=>gt,BartTokenizer:()=>Ne,BertTokenizer:()=>Pe,BlenderbotSmallTokenizer:()=>dt,BlenderbotTokenizer:()=>ct,BloomTokenizer:()=>Re,CLIPTokenizer:()=>nt,CamembertTokenizer:()=>Ie,CodeGenTokenizer:()=>ot,CodeLlamaTokenizer:()=>$e,CohereTokenizer:()=>pt,ConvBertTokenizer:()=>Ae,DebertaTokenizer:()=>ve,DebertaV2Tokenizer:()=>Ce,DistilBertTokenizer:()=>Le,ElectraTokenizer:()=>De,EsmTokenizer:()=>Je,FalconTokenizer:()=>Xe,GPT2Tokenizer:()=>Ve,GPTNeoXTokenizer:()=>He,GemmaTokenizer:()=>Ke,Grok1Tokenizer:()=>Ze,HerbertTokenizer:()=>Se,LlamaTokenizer:()=>We,M2M100Tokenizer:()=>st,MBart50Tokenizer:()=>Be,MBartTokenizer:()=>Oe,MPNetTokenizer:()=>Qe,MarianTokenizer:()=>it,MgpstrTokenizer:()=>ht,MobileBertTokenizer:()=>Fe,NllbTokenizer:()=>tt,NougatTokenizer:()=>_t,PreTrainedTokenizer:()=>xe,Qwen2Tokenizer:()=>Ye,RoFormerTokenizer:()=>Ee,RobertaTokenizer:()=>Ge,SiglipTokenizer:()=>at,SpeechT5Tokenizer:()=>ut,SqueezeBertTokenizer:()=>ye,T5Tokenizer:()=>je,TokenizerModel:()=>P,VitsTokenizer:()=>mt,Wav2Vec2CTCTokenizer:()=>lt,WhisperTokenizer:()=>rt,XLMRobertaTokenizer:()=>Ue,XLMTokenizer:()=>ze,is_chinese_char:()=>f});var r=s("./src/utils/generic.js"),o=s("./src/utils/core.js"),n=s("./src/utils/hub.js"),a=s("./src/utils/maths.js"),i=s("./src/utils/tensor.js"),l=s("./src/utils/data-structures.js"),c=s("./node_modules/@huggingface/jinja/dist/index.js"),d=s("./src/models/whisper/common_whisper.js");async function u(e,t){const s=await Promise.all([(0,n.getModelJSON)(e,"tokenizer.json",!0,t),(0,n.getModelJSON)(e,"tokenizer_config.json",!0,t)]);return null!==t.legacy&&(s[1].legacy=t.legacy),s}function _(e,t=!0){if(void 0!==e.Regex){let t=e.Regex.replace(/\\([#&~])/g,"$1");for(const[e,s]of b)t=t.replaceAll(e,s);return new RegExp(t,"gu")}if(void 0!==e.String){const s=(0,o.escapeRegExp)(e.String);return new RegExp(t?s:`(${s})`,"gu")}return console.warn("Unknown pattern type:",e),null}function m(e){return new Map(Object.entries(e))}function p(e){const t=e.dims;switch(t.length){case 1:return e.tolist();case 2:if(1!==t[0])throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return e.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${t.length}.`)}}function h(e){return e.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function g(e){return e.replace(/\p{M}/gu,"")}function f(e){return e>=19968&&e<=40959||e>=13312&&e<=19903||e>=131072&&e<=173791||e>=173824&&e<=177983||e>=177984&&e<=178207||e>=178208&&e<=183983||e>=63744&&e<=64255||e>=194560&&e<=195103}const M="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",w=new RegExp(`^[${M}]+$`,"gu"),T=".,!?…。，、।۔،",b=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${T}])]+`,` ?[^\\s${T}]+`]]);class x{constructor(e){this.content=e.content,this.id=e.id,this.single_word=e.single_word??!1,this.lstrip=e.lstrip??!1,this.rstrip=e.rstrip??!1,this.special=e.special??!1,this.normalized=e.normalized??null}}class P extends r.Callable{constructor(e){super(),this.config=e,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(e,...t){switch(e.type){case"WordPiece":return new k(e);case"Unigram":return new F(e,...t);case"BPE":return new C(e);default:if(e.vocab)return Array.isArray(e.vocab)?new F(e,...t):Object.hasOwn(e,"continuing_subword_prefix")&&Object.hasOwn(e,"unk_token")?Object.hasOwn(e,"merges")?new C(e):new k(e):new S(e,...t);throw new Error(`Unknown TokenizerModel type: ${e.type}`)}}_call(e){return e=this.encode(e),this.fuse_unk&&(e=function(e,t,s){const r=[];let o=0;for(;o<e.length;)if(r.push(e[o]),(t.get(e[o])??s)===s)for(;++o<e.length&&(t.get(e[o])??s)===s;)t.get(r.at(-1))!==s&&(r[r.length-1]+=e[o]);else++o;return r}(e,this.tokens_to_ids,this.unk_token_id)),e}encode(e){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(e){return e.map((e=>this.tokens_to_ids.get(e)??this.unk_token_id))}convert_ids_to_tokens(e){return e.map((e=>this.vocab[e]??this.unk_token))}}class k extends P{constructor(e){super(e),this.tokens_to_ids=m(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.max_input_chars_per_word=e.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){const t=[];for(const s of e){const e=[...s];if(e.length>this.max_input_chars_per_word){t.push(this.unk_token);continue}let r=!1,o=0;const n=[];for(;o<e.length;){let t=e.length,s=null;for(;o<t;){let r=e.slice(o,t).join("");if(o>0&&(r=this.config.continuing_subword_prefix+r),this.tokens_to_ids.has(r)){s=r;break}--t}if(null===s){r=!0;break}n.push(s),o=t}r?t.push(this.unk_token):t.push(...n)}return t}}class F extends P{constructor(e,t){super(e);const s=e.vocab.length;this.vocab=new Array(s),this.scores=new Array(s);for(let t=0;t<s;++t)[this.vocab[t],this.scores[t]]=e.vocab[t];this.unk_token_id=e.unk_id,this.unk_token=this.vocab[e.unk_id],this.tokens_to_ids=new Map(this.vocab.map(((e,t)=>[e,t]))),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,a.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(e){const t=e.chars;let s=0;for(;s<t.length;){let r=!1;const n=[],a=t.slice(s).join(""),i=this.trie.commonPrefixSearch(a);for(const t of i){n.push(t);const a=this.tokens_to_ids.get(t),i=this.scores[a],l=(0,o.len)(t);e.insert(s,l,i,a),r||1!==l||(r=!0)}r||e.insert(s,1,this.unk_score,this.unk_token_id),s+=1}}tokenize(e){const t=new l.TokenLattice(e,this.bos_token_id,this.eos_token_id);return this.populateNodes(t),t.tokens()}encode(e){const t=[];for(const s of e){const e=this.tokenize(s);t.push(...e)}return t}}const y=(()=>{const e=[...Array.from({length:"~".charCodeAt(0)-"!".charCodeAt(0)+1},((e,t)=>t+"!".charCodeAt(0))),...Array.from({length:"¬".charCodeAt(0)-"¡".charCodeAt(0)+1},((e,t)=>t+"¡".charCodeAt(0))),...Array.from({length:"ÿ".charCodeAt(0)-"®".charCodeAt(0)+1},((e,t)=>t+"®".charCodeAt(0)))],t=e.slice();let s=0;for(let r=0;r<256;++r)e.includes(r)||(e.push(r),t.push(256+s),s+=1);const r=t.map((e=>String.fromCharCode(e)));return Object.fromEntries(e.map(((e,t)=>[e,r[t]])))})(),v=(0,o.reverseDictionary)(y);class C extends P{constructor(e){super(e),this.tokens_to_ids=m(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e;const t=Array.isArray(e.merges[0]);this.merges=t?e.merges:e.merges.map((e=>e.split(" ",2))),this.bpe_ranks=new Map(this.merges.map(((e,t)=>[JSON.stringify(e),t]))),this.end_of_word_suffix=e.end_of_word_suffix,this.continuing_subword_suffix=e.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.max_length_to_cache=256,this.cache_capacity=1e4,this.cache=new l.LRUCache(this.cache_capacity)}clear_cache(){this.cache.clear()}bpe(e){if(0===e.length)return[];const t=this.cache.get(e);if(void 0!==t)return t;const s=Array.from(e);this.end_of_word_suffix&&(s[s.length-1]+=this.end_of_word_suffix);let r=[];if(s.length>1){const e=new l.PriorityQueue(((e,t)=>e.score<t.score));let t={token:s[0],bias:0,prev:null,next:null},o=t;for(let t=1;t<s.length;++t){const r={bias:t/s.length,token:s[t],prev:o,next:null};o.next=r,this._add_node(e,o),o=r}for(;!e.isEmpty();){const s=e.pop();if(s.deleted||!s.next||s.next.deleted)continue;if(s.deleted=!0,s.next.deleted=!0,s.prev){const e={...s.prev};s.prev.deleted=!0,s.prev=e,e.prev?e.prev.next=e:t=e}const r={token:s.token+s.next.token,bias:s.bias,prev:s.prev,next:s.next.next};r.prev?(r.prev.next=r,this._add_node(e,r.prev)):t=r,r.next&&(r.next.prev=r,this._add_node(e,r))}for(let e=t;null!==e;e=e.next)r.push(e.token)}else r=s;if(this.continuing_subword_suffix)for(let e=0;e<r.length-1;++e)r[e]+=this.continuing_subword_suffix;return e.length<this.max_length_to_cache&&this.cache.put(e,r),r}_add_node(e,t){const s=this.bpe_ranks.get(JSON.stringify([t.token,t.next.token]));void 0!==s&&(t.score=s+t.bias,e.push(t))}encode(e){const t=[];for(const s of e){if(this.ignore_merges&&this.tokens_to_ids.has(s)){t.push(s);continue}const e=this.bpe(s);for(const s of e)if(this.tokens_to_ids.has(s))t.push(s);else if(this.byte_fallback){const e=Array.from(this.text_encoder.encode(s)).map((e=>`<0x${e.toString(16).toUpperCase().padStart(2,"0")}>`));e.every((e=>this.tokens_to_ids.has(e)))?t.push(...e):t.push(this.unk_token)}else t.push(this.unk_token)}return t}}class S extends P{constructor(e,t){super(e),this.tokens_to_ids=m(t.target_lang?e.vocab[t.target_lang]:e.vocab),this.bos_token=t.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=t.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=t.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){return e}}class A extends r.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"BertNormalizer":return new R(e);case"Precompiled":return new pe(e);case"Sequence":return new G(e);case"Replace":return new E(e);case"NFC":return new I(e);case"NFD":return new z(e);case"NFKC":return new D(e);case"NFKD":return new j(e);case"Strip":return new V(e);case"StripAccents":return new N(e);case"Lowercase":return new O(e);case"Prepend":return new B(e);default:throw new Error(`Unknown Normalizer type: ${e.type}`)}}normalize(e){throw Error("normalize should be implemented in subclass.")}_call(e){return this.normalize(e)}}class E extends A{normalize(e){const t=_(this.config.pattern);return null===t?e:e.replaceAll(t,this.config.content)}}class L extends A{form=void 0;normalize(e){return e=e.normalize(this.form)}}class I extends L{form="NFC"}class z extends L{form="NFD"}class D extends L{form="NFKC"}class j extends L{form="NFKD"}class V extends A{normalize(e){return this.config.strip_left&&this.config.strip_right?e=e.trim():(this.config.strip_left&&(e=e.trimStart()),this.config.strip_right&&(e=e.trimEnd())),e}}class N extends A{normalize(e){return e=g(e)}}class O extends A{normalize(e){return e=e.toLowerCase()}}class B extends A{normalize(e){return e=this.config.prepend+e}}class G extends A{constructor(e){super(e),this.normalizers=e.normalizers.map((e=>A.fromConfig(e)))}normalize(e){return this.normalizers.reduce(((e,t)=>t.normalize(e)),e)}}class R extends A{_tokenize_chinese_chars(e){const t=[];for(let s=0;s<e.length;++s){const r=e[s];f(r.charCodeAt(0))?(t.push(" "),t.push(r),t.push(" ")):t.push(r)}return t.join("")}stripAccents(e){return e.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(e){switch(e){case"\t":case"\n":case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(e)}}_clean_text(e){const t=[];for(const s of e){const e=s.charCodeAt(0);0===e||65533===e||this._is_control(s)||(/^\s$/.test(s)?t.push(" "):t.push(s))}return t.join("")}normalize(e){return this.config.clean_text&&(e=this._clean_text(e)),this.config.handle_chinese_chars&&(e=this._tokenize_chinese_chars(e)),this.config.lowercase?(e=e.toLowerCase(),!1!==this.config.strip_accents&&(e=this.stripAccents(e))):this.config.strip_accents&&(e=this.stripAccents(e)),e}}class q extends r.Callable{static fromConfig(e){if(null===e)return null;switch(e.type){case"BertPreTokenizer":return new W(e);case"Sequence":return new he(e);case"Whitespace":return new ge(e);case"WhitespaceSplit":return new fe(e);case"Metaspace":return new _e(e);case"ByteLevel":return new $(e);case"Split":return new U(e);case"Punctuation":return new Q(e);case"Digits":return new X(e);case"Replace":return new Me(e);default:throw new Error(`Unknown PreTokenizer type: ${e.type}`)}}pre_tokenize_text(e,t){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(e,t){return(Array.isArray(e)?e.map((e=>this.pre_tokenize_text(e,t))):this.pre_tokenize_text(e,t)).flat()}_call(e,t){return this.pre_tokenize(e,t)}}class W extends q{constructor(e){super(),this.pattern=new RegExp(`[^\\s${M}]+|[${M}]`,"gu")}pre_tokenize_text(e,t){return e.trim().match(this.pattern)||[]}}class $ extends q{constructor(e){super(),this.config=e,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=y,this.text_encoder=new TextEncoder}pre_tokenize_text(e,t){this.add_prefix_space&&!e.startsWith(" ")&&(e=" "+e);return(this.use_regex?e.match(this.pattern)||[]:[e]).map((e=>Array.from(this.text_encoder.encode(e),(e=>this.byte_encoder[e])).join("")))}}class U extends q{constructor(e){super(),this.config=e,this.pattern=_(this.config.pattern,this.config.invert)}pre_tokenize_text(e,t){return null===this.pattern?[]:this.config.invert?e.match(this.pattern)||[]:"removed"===this.config.behavior?.toLowerCase()?e.split(this.pattern).filter((e=>e)):function(e,t){const s=[];let r=0;for(const o of e.matchAll(t)){const t=o[0];r<o.index&&s.push(e.slice(r,o.index)),t.length>0&&s.push(t),r=o.index+t.length}return r<e.length&&s.push(e.slice(r)),s}(e,this.pattern)}}class Q extends q{constructor(e){super(),this.config=e,this.pattern=new RegExp(`[^${M}]+|[${M}]+`,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class X extends q{constructor(e){super(),this.config=e;const t="[^\\d]+|\\d"+(this.config.individual_digits?"":"+");this.pattern=new RegExp(t,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class H extends r.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"TemplateProcessing":return new K(e);case"ByteLevel":return new Z(e);case"RobertaProcessing":return new Y(e);case"BertProcessing":return new J(e);case"Sequence":return new ee(e);default:throw new Error(`Unknown PostProcessor type: ${e.type}`)}}post_process(e,...t){throw Error("post_process should be implemented in subclass.")}_call(e,...t){return this.post_process(e,...t)}}class J extends H{constructor(e){super(e),this.cls=e.cls[0],this.sep=e.sep[0]}post_process(e,t=null,{add_special_tokens:s=!0}={}){s&&(e=(0,o.mergeArrays)([this.cls],e,[this.sep]));let r=new Array(e.length).fill(0);if(null!==t){const n=s&&this instanceof Y?[this.sep]:[],a=s?[this.sep]:[];e=(0,o.mergeArrays)(e,n,t,a),r=(0,o.mergeArrays)(r,new Array(t.length+n.length+a.length).fill(1))}return{tokens:e,token_type_ids:r}}}class Y extends J{}class K extends H{constructor(e){super(e),this.single=e.single,this.pair=e.pair}post_process(e,t=null,{add_special_tokens:s=!0}={}){const r=null===t?this.single:this.pair;let n=[],a=[];for(const i of r)"SpecialToken"in i?s&&(n.push(i.SpecialToken.id),a.push(i.SpecialToken.type_id)):"Sequence"in i&&("A"===i.Sequence.id?(n=(0,o.mergeArrays)(n,e),a=(0,o.mergeArrays)(a,new Array(e.length).fill(i.Sequence.type_id))):"B"===i.Sequence.id&&(n=(0,o.mergeArrays)(n,t),a=(0,o.mergeArrays)(a,new Array(t.length).fill(i.Sequence.type_id))));return{tokens:n,token_type_ids:a}}}class Z extends H{post_process(e,t=null){return t&&(e=(0,o.mergeArrays)(e,t)),{tokens:e}}}class ee extends H{constructor(e){super(e),this.processors=e.processors.map((e=>H.fromConfig(e)))}post_process(e,t=null,s={}){let r;for(const o of this.processors)if(o instanceof Z){if(e=o.post_process(e).tokens,t){t=o.post_process(t).tokens}}else{const n=o.post_process(e,t,s);e=n.tokens,r=n.token_type_ids}return{tokens:e,token_type_ids:r}}}class te extends r.Callable{constructor(e){super(),this.config=e,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=e.trim_offsets}static fromConfig(e){if(null===e)return null;switch(e.type){case"WordPiece":return new ae(e);case"Metaspace":return new me(e);case"ByteLevel":return new ie(e);case"Replace":return new se(e);case"ByteFallback":return new re(e);case"Fuse":return new oe(e);case"Strip":return new ne(e);case"Sequence":return new ce(e);case"CTC":return new le(e);case"BPEDecoder":return new de(e);default:throw new Error(`Unknown Decoder type: ${e.type}`)}}_call(e){return this.decode(e)}decode(e){return this.decode_chain(e).join("")}decode_chain(e){throw Error("`decode_chain` should be implemented in subclass.")}}class se extends te{decode_chain(e){const t=_(this.config.pattern);return null===t?e:e.map((e=>e.replaceAll(t,this.config.content)))}}class re extends te{constructor(e){super(e),this.text_decoder=new TextDecoder}decode_chain(e){const t=[];let s=[];for(const r of e){let e=null;if(6===r.length&&r.startsWith("<0x")&&r.endsWith(">")){const t=parseInt(r.slice(3,5),16);isNaN(t)||(e=t)}if(null!==e)s.push(e);else{if(s.length>0){const e=this.text_decoder.decode(Uint8Array.from(s));t.push(e),s=[]}t.push(r)}}if(s.length>0){const e=this.text_decoder.decode(Uint8Array.from(s));t.push(e),s=[]}return t}}class oe extends te{decode_chain(e){return[e.join("")]}}class ne extends te{constructor(e){super(e),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(e){return e.map((e=>{let t=0;for(let s=0;s<this.start&&e[s]===this.content;++s)t=s+1;let s=e.length;for(let t=0;t<this.stop;++t){const r=e.length-t-1;if(e[r]!==this.content)break;s=r}return e.slice(t,s)}))}}class ae extends te{constructor(e){super(e),this.cleanup=e.cleanup}decode_chain(e){return e.map(((e,t)=>(0!==t&&(e=e.startsWith(this.config.prefix)?e.replace(this.config.prefix,""):" "+e),this.cleanup&&(e=h(e)),e)))}}class ie extends te{constructor(e){super(e),this.byte_decoder=v,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(e){const t=e.join(""),s=new Uint8Array([...t].map((e=>this.byte_decoder[e])));return this.text_decoder.decode(s)}decode_chain(e){const t=[];let s=[];for(const r of e)void 0!==this.added_tokens.find((e=>e.content===r))?(s.length>0&&(t.push(this.convert_tokens_to_string(s)),s=[]),t.push(r)):s.push(r);return s.length>0&&t.push(this.convert_tokens_to_string(s)),t}}class le extends te{constructor(e){super(e),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(e){if(0===e.length)return"";const t=[e[0]];for(let s=1;s<e.length;++s)e[s]!==t.at(-1)&&t.push(e[s]);let s=t.filter((e=>e!==this.pad_token)).join("");return this.cleanup&&(s=h(s).replaceAll(this.word_delimiter_token," ").trim()),s}decode_chain(e){return[this.convert_tokens_to_string(e)]}}class ce extends te{constructor(e){super(e),this.decoders=e.decoders.map((e=>te.fromConfig(e)))}decode_chain(e){return this.decoders.reduce(((e,t)=>t.decode_chain(e)),e)}}class de extends te{constructor(e){super(e),this.suffix=this.config.suffix}decode_chain(e){return e.map(((t,s)=>t.replaceAll(this.suffix,s===e.length-1?"":" ")))}}class ue extends te{decode_chain(e){let t="";for(let s=1;s<e.length;s+=2)t+=e[s];return[t]}}class _e extends q{constructor(e){super(),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement,this.strRep=e.str_rep||this.replacement,this.prepend_scheme=e.prepend_scheme??"always"}pre_tokenize_text(e,{section_index:t}={}){let s=e.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!s.startsWith(this.replacement)&&("always"===this.prepend_scheme||"first"===this.prepend_scheme&&0===t)&&(s=this.strRep+s),[s]}}class me extends te{constructor(e){super(e),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement}decode_chain(e){const t=[];for(let s=0;s<e.length;++s){let r=e[s].replaceAll(this.replacement," ");this.addPrefixSpace&&0==s&&r.startsWith(" ")&&(r=r.substring(1)),t.push(r)}return t}}class pe extends A{constructor(e){super(e),this.charsmap=e.precompiled_charsmap}normalize(e){if((e=(e=e.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," ")).includes("～")){const t=e.split("～");e=t.map((e=>e.normalize("NFKC"))).join("～")}else e=e.normalize("NFKC");return e}}class he extends q{constructor(e){super(),this.tokenizers=e.pretokenizers.map((e=>q.fromConfig(e)))}pre_tokenize_text(e,t){return this.tokenizers.reduce(((e,s)=>s.pre_tokenize(e,t)),[e])}}class ge extends q{constructor(e){super()}pre_tokenize_text(e,t){return e.match(/\w+|[^\w\s]+/g)||[]}}class fe extends q{constructor(e){super()}pre_tokenize_text(e,t){return function(e){return e.match(/\S+/g)||[]}(e)}}class Me extends q{constructor(e){super(),this.config=e,this.pattern=_(this.config.pattern),this.content=this.config.content}pre_tokenize_text(e,t){return null===this.pattern?[e]:[e.replaceAll(this.pattern,this.config.content)]}}const we=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Te(e,t,s,r){for(const n of Object.keys(e)){const a=t-e[n].length,i=s(n),l=new Array(a).fill(i);e[n]="right"===r?(0,o.mergeArrays)(e[n],l):(0,o.mergeArrays)(l,e[n])}}function be(e,t){for(const s of Object.keys(e))e[s].length=t}class xe extends r.Callable{return_token_type_ids=!1;padding_side="right";constructor(e,t){super(),this.config=t,this.normalizer=A.fromConfig(e.normalizer),this.pre_tokenizer=q.fromConfig(e.pre_tokenizer),this.model=P.fromConfig(e.model,t),this.post_processor=H.fromConfig(e.post_processor),this.decoder=te.fromConfig(e.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const t of e.added_tokens){const e=new x(t);this.added_tokens.push(e),this.model.tokens_to_ids.set(e.content,e.id),this.model.vocab[e.id]=e.content,e.special&&(this.special_tokens.push(e.content),this.all_special_ids.push(e.id))}if(this.additional_special_tokens=t.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new l.DictionarySplitter(this.added_tokens.map((e=>e.content))),this.added_tokens_map=new Map(this.added_tokens.map((e=>[e.content,e]))),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=t.model_max_length,this.remove_space=t.remove_space,this.clean_up_tokenization_spaces=t.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=t.do_lowercase_and_remove_accent??!1,t.padding_side&&(this.padding_side=t.padding_side),this.legacy=!1,this.chat_template=t.chat_template??null,Array.isArray(this.chat_template)){const e=Object.create(null);for(const{name:t,template:s}of this.chat_template){if("string"!=typeof t||"string"!=typeof s)throw new Error('Chat template must be a list of objects with "name" and "template" properties');e[t]=s}this.chat_template=e}this._compiled_template_cache=new Map}getToken(...e){for(const t of e){const e=this.config[t];if(e){if("object"==typeof e){if("AddedToken"===e.__type)return e.content;throw Error(`Unknown token: ${e}`)}return e}}return null}static async from_pretrained(e,{progress_callback:t=null,config:s=null,cache_dir:r=null,local_files_only:o=!1,revision:n="main",legacy:a=null}={}){return new this(...await u(e,{progress_callback:t,config:s,cache_dir:r,local_files_only:o,revision:n,legacy:a}))}_call(e,{text_pair:t=null,add_special_tokens:s=!0,padding:r=!1,truncation:o=null,max_length:n=null,return_tensor:l=!0,return_token_type_ids:c=null}={}){const d=Array.isArray(e);let u;if(d){if(0===e.length)throw Error("text array must be non-empty");if(null!==t){if(!Array.isArray(t))throw Error("text_pair must also be an array");if(e.length!==t.length)throw Error("text and text_pair must have the same length");u=e.map(((e,r)=>this._encode_plus(e,{text_pair:t[r],add_special_tokens:s,return_token_type_ids:c})))}else u=e.map((e=>this._encode_plus(e,{add_special_tokens:s,return_token_type_ids:c})))}else{if(null==e)throw Error("text may not be null or undefined");if(Array.isArray(t))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");u=[this._encode_plus(e,{text_pair:t,add_special_tokens:s,return_token_type_ids:c})]}if(null===n?n=this.model_max_length:null===o&&(!0===r?(console.warn("`max_length` is ignored when `padding: true` and there is no truncation strategy. To pad to max length, use `padding: 'max_length'`."),n=this.model_max_length):!1===r&&(console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation: true` to explicitly truncate examples to max length."),o=!0)),!0===r&&(n=Math.min((0,a.max)(u.map((e=>e.input_ids.length)))[0],n??1/0)),n=Math.min(n,this.model_max_length??1/0),r||o)for(let e=0;e<u.length;++e)u[e].input_ids.length!==n&&(u[e].input_ids.length>n?o&&be(u[e],n):r&&Te(u[e],n,(e=>"input_ids"===e?this.pad_token_id:0),this.padding_side));const _={};if(l){if((!r||!o)&&u.some((e=>{for(const t of Object.keys(e))if(e[t].length!==u[0][t]?.length)return!0;return!1})))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const e=[u.length,u[0].input_ids.length];for(const t of Object.keys(u[0]))_[t]=new i.Tensor("int64",BigInt64Array.from(u.flatMap((e=>e[t])).map(BigInt)),e)}else{for(const e of Object.keys(u[0]))_[e]=u.map((t=>t[e]));if(!d)for(const e of Object.keys(_))_[e]=_[e][0]}return _}_encode_text(e){if(null===e)return null;const t=this.added_tokens_splitter.split(e);for(let e=0;e<t.length;++e){const s=this.added_tokens_map.get(t[e]);s&&(s.lstrip&&e>0&&(t[e-1]=t[e-1].trimEnd()),s.rstrip&&e<t.length-1&&(t[e+1]=t[e+1].trimStart()))}const s=t.flatMap(((e,t)=>{if(0===e.length)return[];if(this.added_tokens_map.has(e))return[e];if(!0===this.remove_space&&(e=e.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(e=function(e){return g(e.toLowerCase())}(e)),null!==this.normalizer&&(e=this.normalizer(e)),0===e.length)return[];const s=null!==this.pre_tokenizer?this.pre_tokenizer(e,{section_index:t}):[e];return this.model(s)}));return s}_encode_plus(e,{text_pair:t=null,add_special_tokens:s=!0,return_token_type_ids:r=null}={}){const{tokens:o,token_type_ids:n}=this._tokenize_helper(e,{pair:t,add_special_tokens:s}),a=this.model.convert_tokens_to_ids(o),i={input_ids:a,attention_mask:new Array(a.length).fill(1)};return(r??this.return_token_type_ids)&&n&&(i.token_type_ids=n),i}_tokenize_helper(e,{pair:t=null,add_special_tokens:s=!1}={}){const r=this._encode_text(e),n=this._encode_text(t);return this.post_processor?this.post_processor(r,n,{add_special_tokens:s}):{tokens:(0,o.mergeArrays)(r??[],n??[])}}tokenize(e,{pair:t=null,add_special_tokens:s=!1}={}){return this._tokenize_helper(e,{pair:t,add_special_tokens:s}).tokens}encode(e,{text_pair:t=null,add_special_tokens:s=!0,return_token_type_ids:r=null}={}){return this._encode_plus(e,{text_pair:t,add_special_tokens:s,return_token_type_ids:r}).input_ids}batch_decode(e,t={}){return e instanceof i.Tensor&&(e=e.tolist()),e.map((e=>this.decode(e,t)))}decode(e,t={}){if(e instanceof i.Tensor&&(e=p(e)),!Array.isArray(e)||0===e.length||!(0,o.isIntegralNumber)(e[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(e,t)}decode_single(e,{skip_special_tokens:t=!1,clean_up_tokenization_spaces:s=null}){let r=this.model.convert_ids_to_tokens(e);t&&(r=r.filter((e=>!this.special_tokens.includes(e))));let o=this.decoder?this.decoder(r):r.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(o=o.replaceAll(this.decoder.end_of_word_suffix," "),t&&(o=o.trim())),(s??this.clean_up_tokenization_spaces)&&(o=h(o)),o}get_chat_template({chat_template:e=null,tools:t=null}={}){if(this.chat_template&&"object"==typeof this.chat_template){const s=this.chat_template;if(null!==e&&Object.hasOwn(s,e))e=s[e];else if(null===e)if(null!==t&&"tool_use"in s)e=s.tool_use;else{if(!("default"in s))throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(s).sort()}.`);e=s.default}}else if(null===e){if(!this.chat_template)throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");e=this.chat_template}return e}apply_chat_template(e,{tools:t=null,documents:s=null,chat_template:r=null,add_generation_prompt:o=!1,tokenize:n=!0,padding:a=!1,truncation:i=!1,max_length:l=null,return_tensor:d=!0,return_dict:u=!1,tokenizer_kwargs:_={},...m}={}){if("string"!=typeof(r=this.get_chat_template({chat_template:r,tools:t})))throw Error("chat_template must be a string, but got "+typeof r);let p=this._compiled_template_cache.get(r);void 0===p&&(p=new c.Template(r),this._compiled_template_cache.set(r,p));const h=Object.create(null);for(const e of we){const t=this.getToken(e);t&&(h[e]=t)}const g=p.render({messages:e,add_generation_prompt:o,tools:t,documents:s,...h,...m});if(n){const e=this._call(g,{add_special_tokens:!1,padding:a,truncation:i,max_length:l,return_tensor:d,..._});return u?e:e.input_ids}return g}}class Pe extends xe{return_token_type_ids=!0}class ke extends xe{return_token_type_ids=!0}class Fe extends xe{return_token_type_ids=!0}class ye extends xe{return_token_type_ids=!0}class ve extends xe{return_token_type_ids=!0}class Ce extends xe{return_token_type_ids=!0}class Se extends xe{return_token_type_ids=!0}class Ae extends xe{return_token_type_ids=!0}class Ee extends xe{return_token_type_ids=!0}class Le extends xe{}class Ie extends xe{}class ze extends xe{return_token_type_ids=!0;constructor(e,t){super(e,t),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class De extends xe{return_token_type_ids=!0}class je extends xe{}class Ve extends xe{}class Ne extends xe{}class Oe extends xe{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,s){return et(this,e,t,s)}}class Be extends Oe{}class Ge extends xe{}class Re extends xe{}const qe="▁";class We extends xe{padding_side="left";constructor(e,t){super(e,t),this.legacy=t.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new _e({replacement:qe,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(e){if(null===e)return null;if(this.legacy||0===e.length)return super._encode_text(e);let t=super._encode_text(qe+e.replaceAll(qe," "));return t.length>1&&t[0]===qe&&this.special_tokens.includes(t[1])&&(t=t.slice(1)),t}}class $e extends xe{}class Ue extends xe{}class Qe extends xe{}class Xe extends xe{}class He extends xe{}class Je extends xe{}class Ye extends xe{}class Ke extends xe{}class Ze extends xe{}function et(e,t,s,r){if(!("language_codes"in e)||!Array.isArray(e.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in e&&e.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in e)||"function"!=typeof e.lang_to_token)throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const o=r.src_lang,n=r.tgt_lang;if(!e.language_codes.includes(n))throw new Error(`Target language code "${n}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);if(void 0!==o){if(!e.language_codes.includes(o))throw new Error(`Source language code "${o}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);for(const t of e.post_processor.config.single)if("SpecialToken"in t&&e.languageRegex.test(t.SpecialToken.id)){t.SpecialToken.id=e.lang_to_token(o);break}}return r.forced_bos_token_id=e.model.convert_tokens_to_ids([e.lang_to_token(n)])[0],e._call(t,s)}class tt extends xe{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,s){return et(this,e,t,s)}}class st extends xe{constructor(e,t){super(e,t),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))).map((e=>e.slice(2,-2))),this.lang_to_token=e=>`__${e}__`}_build_translation_inputs(e,t,s){return et(this,e,t,s)}}class rt extends xe{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(e,{return_timestamps:t=!1,return_language:s=!1,time_precision:r=null,force_full_sequences:o=!0}={}){if(null===r)throw Error("Must specify time_precision");let n=null;const i="word"===t;function l(){return{language:n,timestamp:[null,null],text:""}}const c=[];let u=l(),_=0;const m=this.timestamp_begin,p=m+1500;let h=[],g=[],f=!1,M=null;const T=new Set(this.all_special_ids);for(const s of e){const e=s.tokens,o=i?s.token_timestamps:null;let b=null,x=m;if("stride"in s){const[t,o,n]=s.stride;if(_-=o,M=t-n,o&&(x=o/r+m),n)for(let t=e.length-1;t>=0;--t){const s=Number(e[t]);if(s>=m){if(null!==b&&(s-m)*r<M)break;b=s}}}let P=[],k=[];for(let s=0;s<e.length;++s){const M=Number(e[s]);if(T.has(M)){const e=this.decode([M]),s=d.WHISPER_LANGUAGE_MAPPING.get(e.slice(2,-2));if(void 0!==s){if(null!==n&&s!==n&&!t){h.push(P);const e=this.findLongestCommonSequence(h)[0],t=this.decode(e);u.text=t,c.push(u),h=[],P=[],u=l()}n=u.language=s}}else if(M>=m&&M<=p){const e=(M-m)*r+_,t=(0,a.round)(e,2);if(null!==b&&M>=b)f=!0;else if(f||h.length>0&&M<x)f=!1;else if(null===u.timestamp[0])u.timestamp[0]=t;else if(t===u.timestamp[0]);else{u.timestamp[1]=t,h.push(P),i&&g.push(k);const[e,s]=this.findLongestCommonSequence(h,g),r=this.decode(e);u.text=r,i&&(u.words=this.collateWordTimestamps(e,s,n)),c.push(u),h=[],P=[],g=[],k=[],u=l()}}else if(P.push(M),i){let e,t=(0,a.round)(o[s]+_,2);if(s+1<o.length){e=(0,a.round)(o[s+1]+_,2);const n=this.decode([M]);w.test(n)&&(e=(0,a.round)(Math.min(t+r,e),2))}else e=null;k.push([t,e])}}if("stride"in s){const[e,t,r]=s.stride;_+=e-r}P.length>0?(h.push(P),i&&g.push(k)):h.every((e=>0===e.length))&&(u=l(),h=[],P=[],g=[],k=[])}if(h.length>0){if(o&&t)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[e,s]=this.findLongestCommonSequence(h,g),r=this.decode(e);u.text=r,i&&(u.words=this.collateWordTimestamps(e,s,n)),c.push(u)}let b=Object.create(null);const x=c.map((e=>e.text)).join("");if(t||s){for(let e=0;e<c.length;++e){const r=c[e];t||delete r.timestamp,s||delete r.language}if(i){const e=[];for(const t of c)for(const s of t.words)e.push(s);b={chunks:e}}else b={chunks:c}}return[x,b]}findLongestCommonSequence(e,t=null){let s=e[0],r=s.length,o=[];const n=Array.isArray(t)&&t.length>0;let a=n?[]:null,i=n?t[0]:null;for(let l=1;l<e.length;++l){const c=e[l];let d=0,u=[r,r,0,0];const _=c.length;for(let e=1;e<r+_;++e){const o=Math.max(0,r-e),a=Math.min(r,r+_-e),m=s.slice(o,a),p=Math.max(0,e-r),h=Math.min(_,e),g=c.slice(p,h);if(m.length!==g.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let f;f=n?m.filter(((e,s)=>e===g[s]&&i[o+s]<=t[l][p+s])).length:m.filter(((e,t)=>e===g[t])).length;const M=f/e+e/1e4;f>1&&M>d&&(d=M,u=[o,a,p,h])}const[m,p,h,g]=u,f=Math.floor((p+m)/2),M=Math.floor((g+h)/2);o.push(...s.slice(0,f)),s=c.slice(M),r=s.length,n&&(a.push(...i.slice(0,f)),i=t[l].slice(M))}return o.push(...s),n?(a.push(...i),[o,a]):[o,[]]}collateWordTimestamps(e,t,s){const[r,o,n]=this.combineTokensIntoWords(e,s),a=[];for(let e=0;e<r.length;++e){const s=n[e];a.push({text:r[e],timestamp:[t[s.at(0)][0],t[s.at(-1)][1]]})}return a}combineTokensIntoWords(e,t,s="\"'“¡¿([{-",r="\"'.。,，!！?？:：”)]}、"){let o,n,a;return["chinese","japanese","thai","lao","myanmar"].includes(t=t??"english")?[o,n,a]=this.splitTokensOnUnicode(e):[o,n,a]=this.splitTokensOnSpaces(e),this.mergePunctuations(o,n,a,s,r)}decode(e,t){let s;return t?.decode_with_timestamps?(e instanceof i.Tensor&&(e=p(e)),s=this.decodeWithTimestamps(e,t)):s=super.decode(e,t),s}decodeWithTimestamps(e,t){const s=t?.time_precision??.02,r=Array.from(this.all_special_ids).at(-1)+1;let o=[[]];for(let t of e)if(t=Number(t),t>=r){const e=((t-r)*s).toFixed(2);o.push(`<|${e}|>`),o.push([])}else o[o.length-1].push(t);return o=o.map((e=>"string"==typeof e?e:super.decode(e,t))),o.join("")}splitTokensOnUnicode(e){const t=this.decode(e,{decode_with_timestamps:!0}),s=[],r=[],o=[];let n=[],a=[],i=0;for(let l=0;l<e.length;++l){const c=e[l];n.push(c),a.push(l);const d=this.decode(n,{decode_with_timestamps:!0});d.includes("�")&&"�"!==t[i+d.indexOf("�")]||(s.push(d),r.push(n),o.push(a),n=[],a=[],i+=d.length)}return[s,r,o]}splitTokensOnSpaces(e){const[t,s,r]=this.splitTokensOnUnicode(e),o=[],n=[],a=[],i=new RegExp(`^[${M}]$`,"gu");for(let e=0;e<t.length;++e){const l=t[e],c=s[e],d=r[e],u=c[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),_=l.startsWith(" "),m=l.trim(),p=i.test(m);if(u||_||p||0===o.length)o.push(l),n.push(c),a.push(d);else{const e=o.length-1;o[e]+=l,n[e].push(...c),a[e].push(...d)}}return[o,n,a]}mergePunctuations(e,t,s,r,n){const a=structuredClone(e),i=structuredClone(t),l=structuredClone(s);let c=a.length-2,d=a.length-1;for(;c>=0;)a[c].startsWith(" ")&&r.includes(a[c].trim())?(a[d]=a[c]+a[d],i[d]=(0,o.mergeArrays)(i[c],i[d]),l[d]=(0,o.mergeArrays)(l[c],l[d]),a[c]="",i[c]=[],l[c]=[]):d=c,--c;for(c=0,d=1;d<a.length;)!a[c].endsWith(" ")&&n.includes(a[d])?(a[c]+=a[d],i[c]=(0,o.mergeArrays)(i[c],i[d]),l[c]=(0,o.mergeArrays)(l[c],l[d]),a[d]="",i[d]=[],l[d]=[]):c=d,++d;return[a.filter((e=>e)),i.filter((e=>e.length>0)),l.filter((e=>e.length>0))]}}class ot extends xe{}class nt extends xe{}class at extends xe{}class it extends xe{constructor(e,t){super(e,t),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter((e=>this.languageRegex.test(e))),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(e){if(null===e)return null;const[t,...s]=e.trim().split(this.languageRegex);if(0===s.length)return super._encode_text(t);if(2===s.length){const[e,t]=s;return this.supported_language_codes.includes(e)||console.warn(`Unsupported language code "${e}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,o.mergeArrays)([e],super._encode_text(t))}}}class lt extends xe{}class ct extends xe{}class dt extends xe{}class ut extends xe{}class _t extends xe{}class mt extends xe{constructor(e,t){super(e,t),this.decoder=new ue({})}}class pt extends xe{}class ht extends xe{}class gt{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:je,DistilBertTokenizer:Le,CamembertTokenizer:Ie,DebertaTokenizer:ve,DebertaV2Tokenizer:Ce,BertTokenizer:Pe,HerbertTokenizer:Se,ConvBertTokenizer:Ae,RoFormerTokenizer:Ee,XLMTokenizer:ze,ElectraTokenizer:De,MobileBertTokenizer:Fe,SqueezeBertTokenizer:ye,AlbertTokenizer:ke,GPT2Tokenizer:Ve,BartTokenizer:Ne,MBartTokenizer:Oe,MBart50Tokenizer:Be,RobertaTokenizer:Ge,WhisperTokenizer:rt,CodeGenTokenizer:ot,CLIPTokenizer:nt,SiglipTokenizer:at,MarianTokenizer:it,BloomTokenizer:Re,NllbTokenizer:tt,M2M100Tokenizer:st,LlamaTokenizer:We,CodeLlamaTokenizer:$e,XLMRobertaTokenizer:Ue,MPNetTokenizer:Qe,FalconTokenizer:Xe,GPTNeoXTokenizer:He,EsmTokenizer:Je,Wav2Vec2CTCTokenizer:lt,BlenderbotTokenizer:ct,BlenderbotSmallTokenizer:dt,SpeechT5Tokenizer:ut,NougatTokenizer:_t,VitsTokenizer:mt,Qwen2Tokenizer:Ye,GemmaTokenizer:Ke,Grok1Tokenizer:Ze,CohereTokenizer:pt,MgpstrTokenizer:ht,PreTrainedTokenizer:xe};static async from_pretrained(e,{progress_callback:t=null,config:s=null,cache_dir:r=null,local_files_only:o=!1,revision:n="main",legacy:a=null}={}){const[i,l]=await u(e,{progress_callback:t,config:s,cache_dir:r,local_files_only:o,revision:n,legacy:a}),c=l.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let d=this.TOKENIZER_CLASS_MAPPING[c];return d||(console.warn(`Unknown tokenizer class "${c}", attempting to construct from base class.`),d=xe),new d(i,l)}}},"./src/utils/audio.js":(e,t,s)=>{s.r(t),s.d(t,{RawAudio:()=>x,hamming:()=>_,hanning:()=>u,mel_filter_bank:()=>f,read_audio:()=>c,spectrogram:()=>w,window_function:()=>T});var r=s("./src/utils/hub.js"),o=s("./src/utils/maths.js"),n=s("./src/utils/core.js"),a=s("./src/env.js"),i=s("./src/utils/tensor.js"),l=s("node:fs");async function c(e,t){if("undefined"==typeof AudioContext)throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const s=await(await(0,r.getFile)(e)).arrayBuffer(),o=new AudioContext({sampleRate:t});void 0===t&&console.warn(`No sampling rate provided, using default of ${o.sampleRate}Hz.`);const n=await o.decodeAudioData(s);let a;if(2===n.numberOfChannels){const e=Math.sqrt(2),t=n.getChannelData(0),s=n.getChannelData(1);a=new Float32Array(t.length);for(let r=0;r<n.length;++r)a[r]=e*(t[r]+s[r])/2}else a=n.getChannelData(0);return a}function d(e,t){if(e<1)return new Float64Array;if(1===e)return new Float64Array([1]);const s=1-t,r=2*Math.PI/(e-1),o=new Float64Array(e);for(let n=0;n<e;++n)o[n]=t-s*Math.cos(n*r);return o}function u(e){return d(e,.5)}function _(e){return d(e,.54)}const m={htk:e=>2595*Math.log10(1+e/700),kaldi:e=>1127*Math.log(1+e/700),slaney:(e,t=1e3,s=15,r=27/Math.log(6.4))=>e>=t?s+Math.log(e/t)*r:3*e/200};function p(e,t="htk"){const s=m[t];if(!s)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?s(e):e.map((e=>s(e)))}const h={htk:e=>700*(10**(e/2595)-1),kaldi:e=>700*(Math.exp(e/1127)-1),slaney:(e,t=1e3,s=15,r=Math.log(6.4)/27)=>e>=s?t*Math.exp(r*(e-s)):200*e/3};function g(e,t,s){const r=(t-e)/(s-1);return Float64Array.from({length:s},((t,s)=>e+r*s))}function f(e,t,s,r,o,n=null,a="htk",i=!1){if(null!==n&&"slaney"!==n)throw new Error('norm must be one of null or "slaney"');if(e<2)throw new Error(`Require num_frequency_bins: ${e} >= 2`);if(s>r)throw new Error(`Require min_frequency: ${s} <= max_frequency: ${r}`);const l=g(p(s,a),p(r,a),t+2);let c,d=function(e,t="htk"){const s=h[t];if(!s)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?s(e):e.map((e=>s(e)))}(l,a);if(i){const t=o/(2*(e-1));c=p(Float64Array.from({length:e},((e,s)=>s*t)),a),d=l}else c=g(0,Math.floor(o/2),e);const u=function(e,t){const s=Float64Array.from({length:t.length-1},((e,s)=>t[s+1]-t[s])),r=Array.from({length:e.length},(()=>new Array(t.length)));for(let s=0;s<e.length;++s){const o=r[s];for(let r=0;r<t.length;++r)o[r]=t[r]-e[s]}const o=t.length-2,n=Array.from({length:o},(()=>new Array(e.length)));for(let t=0;t<e.length;++t){const e=r[t];for(let r=0;r<o;++r){const o=-e[r]/s[r],a=e[r+2]/s[r+1];n[r][t]=Math.max(0,Math.min(o,a))}}return n}(c,d);if(null!==n&&"slaney"===n)for(let s=0;s<t;++s){const t=u[s],r=2/(d[s+2]-d[s]);for(let s=0;s<e;++s)t[s]*=r}return u}function M(e,t,s,r,n){if(s<=0)throw new Error("reference must be greater than zero");if(r<=0)throw new Error("min_value must be greater than zero");s=Math.max(r,s);const a=Math.log10(s);for(let s=0;s<e.length;++s)e[s]=t*Math.log10(Math.max(r,e[s])-a);if(null!==n){if(n<=0)throw new Error("db_range must be greater than zero");const t=(0,o.max)(e)[0]-n;for(let s=0;s<e.length;++s)e[s]=Math.max(e[s],t)}return e}async function w(e,t,s,r,{fft_length:a=null,power:l=1,center:c=!0,pad_mode:d="reflect",onesided:u=!0,preemphasis:_=null,preemphasis_htk_flavor:m=!0,mel_filters:p=null,mel_floor:h=1e-10,log_mel:g=null,reference:f=1,min_value:w=1e-10,db_range:T=null,remove_dc_offset:b=null,min_num_frames:x=null,max_num_frames:P=null,do_pad:k=!0,transpose:F=!1}={}){const y=t.length;if(null===a&&(a=s),s>a)throw Error(`frame_length (${s}) may not be larger than fft_length (${a})`);if(y!==s)throw new Error(`Length of the window (${y}) must equal frame_length (${s})`);if(r<=0)throw new Error("hop_length must be greater than zero");if(null===l&&null!==p)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(!m)throw new Error("`preemphasis_htk_flavor=false` is not currently supported.");if(c){if("reflect"!==d)throw new Error(`pad_mode="${d}" not implemented yet.`);const t=Math.floor((a-1)/2)+1;e=function(e,t,s){const r=new e.constructor(e.length+t+s),o=e.length-1;for(let s=0;s<e.length;++s)r[t+s]=e[s];for(let s=1;s<=t;++s)r[t-s]=e[(0,n.calculateReflectOffset)(s,o)];for(let a=1;a<=s;++a)r[o+t+a]=e[(0,n.calculateReflectOffset)(o-a,o)];return r}(e,t,t)}let v=Math.floor(1+Math.floor((e.length-s)/r));null!==x&&v<x&&(v=x);const C=u?Math.floor(a/2)+1:a;let S=v,A=v;null!==P&&(P>v?k&&(A=P):A=S=P);const E=new o.FFT(a),L=new Float64Array(a),I=new Float64Array(E.outputBufferSize),z=new Float32Array(C*A);for(let o=0;o<S;++o){const n=o*r,a=Math.min(e.length-n,s);a!==s&&L.fill(0,0,s);for(let t=0;t<a;++t)L[t]=e[n+t];if(b){let e=0;for(let t=0;t<a;++t)e+=L[t];const t=e/a;for(let e=0;e<a;++e)L[e]-=t}if(null!==_){for(let e=a-1;e>=1;--e)L[e]-=_*L[e-1];L[0]*=1-_}for(let e=0;e<t.length;++e)L[e]*=t[e];E.realTransform(I,L);for(let e=0;e<C;++e){const t=e<<1;z[e*A+o]=I[t]**2+I[t+1]**2}}if(null!==l&&2!==l){const e=l/2;for(let t=0;t<z.length;++t)z[t]**=e}const D=p.length;let j=await(0,i.matmul)(new i.Tensor("float32",p.flat(),[D,C]),new i.Tensor("float32",z,[C,A]));F&&(j=j.transpose(1,0));const V=j.data;for(let e=0;e<V.length;++e)V[e]=Math.max(h,V[e]);if(null!==l&&null!==g){const e=Math.min(V.length,S*D);switch(g){case"log":for(let t=0;t<e;++t)V[t]=Math.log(V[t]);break;case"log10":for(let t=0;t<e;++t)V[t]=Math.log10(V[t]);break;case"dB":if(1===l)!function(e,t=1,s=1e-5,r=null){M(e,20,t,s,r)}(V,f,w,T);else{if(2!==l)throw new Error(`Cannot use log_mel option '${g}' with power ${l}`);!function(e,t=1,s=1e-10,r=null){M(e,10,t,s,r)}(V,f,w,T)}break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${g}'`)}}return j}function T(e,t,{periodic:s=!0,frame_length:r=null,center:o=!0}={}){const n=s?e+1:e;let a;switch(t){case"boxcar":a=new Float64Array(n).fill(1);break;case"hann":case"hann_window":a=u(n);break;case"hamming":a=_(n);break;case"povey":a=u(n).map((e=>Math.pow(e,.85)));break;default:throw new Error(`Unknown window type ${t}.`)}if(s&&(a=a.subarray(0,e)),null===r)return a;if(e>r)throw new Error(`Length of the window (${e}) may not be larger than frame_length (${r})`);return a}function b(e,t,s){for(let r=0;r<s.length;++r)e.setUint8(t+r,s.charCodeAt(r))}class x{constructor(e,t){this.audio=e,this.sampling_rate=t}toWav(){return function(e,t){let s=44;const r=new ArrayBuffer(s+4*e.length),o=new DataView(r);b(o,0,"RIFF"),o.setUint32(4,36+4*e.length,!0),b(o,8,"WAVE"),b(o,12,"fmt "),o.setUint32(16,16,!0),o.setUint16(20,3,!0),o.setUint16(22,1,!0),o.setUint32(24,t,!0),o.setUint32(28,4*t,!0),o.setUint16(32,4,!0),o.setUint16(34,32,!0),b(o,36,"data"),o.setUint32(40,4*e.length,!0);for(let t=0;t<e.length;++t,s+=4)o.setFloat32(s,e[t],!0);return r}(this.audio,this.sampling_rate)}toBlob(){const e=this.toWav();return new Blob([e],{type:"audio/wav"})}async save(e){let t;if(a.apis.IS_BROWSER_ENV){if(a.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");t=n.saveBlob}else{if(!a.apis.IS_FS_AVAILABLE)throw new Error("Unable to save because filesystem is disabled in this environment.");t=async(e,t)=>{let s=await t.arrayBuffer();l.default.writeFileSync(e,Buffer.from(s))}}await t(e,this.toBlob())}}},"./src/utils/constants.js":(e,t,s)=>{s.r(t),s.d(t,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>o,FEATURE_EXTRACTOR_NAME:()=>n,GENERATION_CONFIG_NAME:()=>c,GITHUB_ISSUE_URL:()=>r,IMAGE_PROCESSOR_NAME:()=>a,PROCESSOR_NAME:()=>i});const r="https://github.com/huggingface/transformers.js/issues/new/choose",o="config.json",n="preprocessor_config.json",a=n,i="processor_config.json",l="chat_template.jinja",c="generation_config.json"},"./src/utils/core.js":(e,t,s)=>{function r(e,t){e&&e(t)}function o(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[t,e])))}function n(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function a(e){return"TypedArray"===e?.prototype?.__proto__?.constructor?.name}function i(e){return Number.isInteger(e)||"bigint"==typeof e}function l(e){return null==e||-1===e}function c(e){const t=[];let s=e;for(;Array.isArray(s);)t.push(s.length),s=s[0];return t}function d(e,t,s=void 0){const r=e[t];if(void 0!==r)return delete e[t],r;if(void 0===s)throw Error(`Key ${t} does not exist in object.`);return s}function u(...e){return Array.prototype.concat.apply([],e)}function _(...e){return e.reduce(((e,t)=>e.flatMap((e=>t.map((t=>[e,t]))))))}function m(e,t){return Math.abs((e+t)%(2*t)-t)}function p(e,t){const s=URL.createObjectURL(t),r=document.createElement("a");r.href=s,r.download=e,r.click(),r.remove(),URL.revokeObjectURL(s)}function h(e,t){return Object.assign({},...t.map((t=>{if(void 0!==e[t])return{[t]:e[t]}})))}function g(e){let t=0;for(const s of e)++t;return t}function f(e,t){let s=0;for(const r of e)r===t&&++s;return s}s.r(t),s.d(t,{calculateDimensions:()=>c,calculateReflectOffset:()=>m,count:()=>f,dispatchCallback:()=>r,escapeRegExp:()=>n,isIntegralNumber:()=>i,isNullishDimension:()=>l,isTypedArray:()=>a,len:()=>g,mergeArrays:()=>u,pick:()=>h,pop:()=>d,product:()=>_,reverseDictionary:()=>o,saveBlob:()=>p})},"./src/utils/data-structures.js":(e,t,s)=>{s.r(t),s.d(t,{CharTrie:()=>o,DictionarySplitter:()=>l,LRUCache:()=>c,PriorityQueue:()=>r,TokenLattice:()=>a});class r{constructor(e=(e,t)=>e>t,t=1/0){this._heap=[],this._comparator=e,this._maxSize=t}get size(){return this._heap.length}isEmpty(){return 0===this.size}peek(){return this._heap[0]}push(...e){return this.extend(e)}extend(e){for(const t of e)if(this.size<this._maxSize)this._heap.push(t),this._siftUp();else{const e=this._smallest();this._comparator(t,this._heap[e])&&(this._heap[e]=t,this._siftUpFrom(e))}return this.size}pop(){const e=this.peek(),t=this.size-1;return t>0&&this._swap(0,t),this._heap.pop(),this._siftDown(),e}replace(e){const t=this.peek();return this._heap[0]=e,this._siftDown(),t}_parent(e){return(e+1>>>1)-1}_left(e){return 1+(e<<1)}_right(e){return e+1<<1}_greater(e,t){return this._comparator(this._heap[e],this._heap[t])}_swap(e,t){const s=this._heap[e];this._heap[e]=this._heap[t],this._heap[t]=s}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(e){for(;e>0&&this._greater(e,this._parent(e));)this._swap(e,this._parent(e)),e=this._parent(e)}_siftDown(){let e=0;for(;this._left(e)<this.size&&this._greater(this._left(e),e)||this._right(e)<this.size&&this._greater(this._right(e),e);){const t=this._right(e)<this.size&&this._greater(this._right(e),this._left(e))?this._right(e):this._left(e);this._swap(e,t),e=t}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class o{constructor(){this.root=n.default()}extend(e){for(const t of e)this.push(t)}push(e){let t=this.root;for(const s of e){let e=t.children.get(s);void 0===e&&(e=n.default(),t.children.set(s,e)),t=e}t.isLeaf=!0}*commonPrefixSearch(e){let t=this.root;if(void 0===t)return;let s="";for(const r of e){if(s+=r,t=t.children.get(r),void 0===t)return;t.isLeaf&&(yield s)}}}class n{constructor(e,t){this.isLeaf=e,this.children=t}static default(){return new n(!1,new Map)}}class a{constructor(e,t,s){this.chars=Array.from(e),this.len=this.chars.length,this.bosTokenId=t,this.eosTokenId=s,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},(()=>[])),this.endNodes=Array.from({length:this.len+1},(()=>[]));const r=new i(this.bosTokenId,0,0,0,0),o=new i(this.eosTokenId,1,this.len,0,0);this.nodes.push(r.clone()),this.nodes.push(o.clone()),this.beginNodes[this.len].push(o),this.endNodes[0].push(r)}insert(e,t,s,r){const o=this.nodes.length,n=new i(r,o,e,t,s);this.beginNodes[e].push(n),this.endNodes[e+t].push(n),this.nodes.push(n)}viterbi(){const e=this.len;let t=0;for(;t<=e;){if(0==this.beginNodes[t].length)return[];for(let e of this.beginNodes[t]){e.prev=null;let s=0,r=null;for(let o of this.endNodes[t]){const t=o.backtraceScore+e.score;(null===r||t>s)&&(r=o.clone(),s=t)}if(null===r)return[];e.prev=r,e.backtraceScore=s}++t}const s=[],r=this.beginNodes[e][0].prev;if(null===r)return[];let o=r.clone();for(;null!==o.prev;){s.push(o.clone());const e=o.clone();o=e.prev.clone()}return s.reverse(),s}piece(e){return this.chars.slice(e.pos,e.pos+e.length).join("")}tokens(){return this.viterbi().map((e=>this.piece(e)))}tokenIds(){return this.viterbi().map((e=>e.tokenId))}}class i{constructor(e,t,s,r,o){this.tokenId=e,this.nodeId=t,this.pos=s,this.length=r,this.score=o,this.prev=null,this.backtraceScore=0}clone(){const e=new i(this.tokenId,this.nodeId,this.pos,this.length,this.score);return e.prev=this.prev,e.backtraceScore=this.backtraceScore,e}}class l{constructor(e){this.trie=this._buildTrie(e)}_buildTrie(e){const t=Object.create(null);for(const s of e){let e=t;for(let t=0;t<s.length;++t)e=e[s[t]]??=Object.create(null);e.end=s}return t}split(e){const t=[],s=e.length;let r=0,o=0;for(;o<s;){let n=this.trie,a=null,i=o;for(;i<s&&(n=n[e[i]]);)n.end&&(a=n.end),++i;a?(o>r&&t.push(e.slice(r,o)),t.push(a),o+=a.length,r=o):++o}return r<s&&t.push(e.slice(r)),t}}class c{constructor(e){this.capacity=e,this.cache=new Map}get(e){if(!this.cache.has(e))return;const t=this.cache.get(e);return this.cache.delete(e),this.cache.set(e,t),t}put(e,t){this.cache.has(e)&&this.cache.delete(e),this.cache.set(e,t),this.cache.size>this.capacity&&this.cache.delete(this.cache.keys().next().value)}clear(){this.cache.clear()}}},"./src/utils/devices.js":(e,t,s)=>{s.r(t),s.d(t,{DEVICE_TYPES:()=>r});const r=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(e,t,s)=>{s.r(t),s.d(t,{DATA_TYPES:()=>a,DEFAULT_DEVICE_DTYPE_MAPPING:()=>i,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>n});var r=s("./src/env.js"),o=s("./src/utils/devices.js");const n=function(){let e;return async function(){if(void 0===e)if(r.apis.IS_WEBGPU_AVAILABLE)try{const t=await navigator.gpu.requestAdapter();e=t.features.has("shader-f16")}catch(t){e=!1}else e=!1;return e}}(),a=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),i=Object.freeze({[o.DEVICE_TYPES.wasm]:a.q8}),l=Object.freeze({[a.fp32]:"",[a.fp16]:"_fp16",[a.int8]:"_int8",[a.uint8]:"_uint8",[a.q8]:"_quantized",[a.q4]:"_q4",[a.q4f16]:"_q4f16",[a.bnb4]:"_bnb4"})},"./src/utils/generic.js":(e,t,s)=>{s.r(t),s.d(t,{Callable:()=>r});const r=class{constructor(){let e=function(...t){return e._call(...t)};return Object.setPrototypeOf(e,new.target.prototype)}_call(...e){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(e,t,s)=>{s.r(t),s.d(t,{MAX_EXTERNAL_DATA_CHUNKS:()=>i,getFile:()=>_,getModelFile:()=>h,getModelJSON:()=>f,getModelText:()=>g});var r=s("node:fs"),o=s("node:path"),n=s("./src/env.js"),a=s("./src/utils/core.js");const i=100,l={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class c{constructor(e){if(this.filePath=e,this.headers=new Headers,this.exists=r.default.existsSync(e),this.exists){this.status=200,this.statusText="OK";let t=r.default.statSync(e);this.headers.set("content-length",t.size.toString()),this.updateContentType();const s=r.default.createReadStream(e);this.body=new ReadableStream({start(e){s.on("data",(t=>e.enqueue(t))),s.on("end",(()=>e.close())),s.on("error",(t=>e.error(t)))},cancel(){s.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const e=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",l[e]??"application/octet-stream")}clone(){let e=new c(this.filePath);return e.exists=this.exists,e.status=this.status,e.statusText=this.statusText,e.headers=new Headers(this.headers),e}async arrayBuffer(){return(await r.default.promises.readFile(this.filePath)).buffer}async blob(){const e=await r.default.promises.readFile(this.filePath);return new Blob([e],{type:this.headers.get("content-type")})}async text(){return await r.default.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function d(e,t=null,s=null){let r;try{r=new URL(e)}catch(e){return!1}return!(t&&!t.includes(r.protocol))&&!(s&&!s.includes(r.hostname))}const u=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;async function _(e){if(n.env.useFS&&!d(e,["http:","https:","blob:"]))return new c(e instanceof URL?"file:"===e.protocol?e.pathname:e.toString():e);if("undefined"!=typeof process&&"node"===process?.release?.name){const t=!!process.env?.TESTING_REMOTELY,s=n.env.version,r=new Headers;r.set("User-Agent",`transformers.js/${s}; is_ci/${t};`);if(d(e,["http:","https:"],["huggingface.co","hf.co"])){const e=process.env?.HF_TOKEN??process.env?.HF_ACCESS_TOKEN;e&&r.set("Authorization",`Bearer ${e}`)}return fetch(e,{headers:r})}return fetch(e)}const m={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class p{constructor(e){this.path=e}async match(e){let t=o.default.join(this.path,e),s=new c(t);return s.exists?s:void 0}async put(e,t,s=void 0){let n=o.default.join(this.path,e);try{const e=t.headers.get("Content-Length"),a=parseInt(e??"0");let i=0;await r.default.promises.mkdir(o.default.dirname(n),{recursive:!0});const l=r.default.createWriteStream(n),c=t.body.getReader();for(;;){const{done:e,value:t}=await c.read();if(e)break;await new Promise(((e,s)=>{l.write(t,(t=>{t?s(t):e()}))})),i+=t.length;const r=a?i/a*100:0;s?.({progress:r,loaded:i,total:a})}l.close()}catch(e){try{await r.default.promises.unlink(n)}catch{}throw e}}}async function h(e,t,s=!0,r={},o=!1){if(!n.env.allowLocalModels){if(r.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!n.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}let i;if((0,a.dispatchCallback)(r.progress_callback,{status:"initiate",name:e,file:t}),!i&&n.env.useCustomCache){if(!n.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!n.env.customCache.match||!n.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");i=n.env.customCache}if(!i&&n.env.useBrowserCache){if("undefined"==typeof caches)throw Error("Browser cache is not available in this environment.");try{i=await caches.open("transformers-cache")}catch(e){console.warn("An error occurred while opening the browser cache:",e)}}if(!i&&n.env.useFSCache){if(!n.apis.IS_FS_AVAILABLE)throw Error("File System Cache is not available in this environment.");i=new p(r.cache_dir??n.env.cacheDir)}const l=r.revision??"main",h=M(e,t),g=(f=e,!(!u.test(f)||f.includes("..")||f.includes("--")||f.endsWith(".git")||f.endsWith(".ipynb")));var f;const w=g?M(n.env.localModelPath,h):h,T=M(n.env.remoteHost,n.env.remotePathTemplate.replaceAll("{model}",e).replaceAll("{revision}",encodeURIComponent(l)),t);let b;const x=i instanceof p?"main"===l?h:M(e,l,t):T;let P,k=!1;i&&(P=await async function(e,...t){for(let s of t)try{let t=await e.match(s);if(t)return t}catch(e){continue}}(i,w,x));const F=void 0!==P;if(void 0===P){if(n.env.allowLocalModels){if(d(h,["http:","https:"])){if(r.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${h}.`);if(!n.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${h}.`)}else try{P=await _(w),b=w}catch(e){console.warn(`Unable to load from local path "${w}": "${e}"`)}}if(void 0===P||404===P.status){if(r.local_files_only||!n.env.allowRemoteModels){if(s)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${w}".`);return null}if(!g)throw Error(`Local file missing at "${w}" and download aborted due to invalid model ID "${e}".`);if(P=await _(T),200!==P.status)return function(e,t,s){if(!s)return null;const r=m[e]??`Error (${e}) occurred while trying to load file`;throw Error(`${r}: "${t}".`)}(P.status,T,s);b=x}k=i&&"undefined"!=typeof Response&&P instanceof Response&&200===P.status}let y;if((0,a.dispatchCallback)(r.progress_callback,{status:"download",name:e,file:t}),!n.apis.IS_NODE_ENV||!o){let s;r.progress_callback?F&&"undefined"!=typeof navigator&&/firefox/i.test(navigator.userAgent)?(s=new Uint8Array(await P.arrayBuffer()),(0,a.dispatchCallback)(r.progress_callback,{status:"progress",name:e,file:t,progress:100,loaded:s.length,total:s.length})):s=await async function(e,t){const s=e.headers.get("Content-Length");null===s&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let r=parseInt(s??"0"),o=new Uint8Array(r),n=0;const a=e.body.getReader();async function i(){const{done:e,value:s}=await a.read();if(e)return;const l=n+s.length;if(l>r){r=l;const e=new Uint8Array(r);e.set(o),o=e}o.set(s,n),n=l;return t({progress:n/r*100,loaded:n,total:r}),i()}return await i(),o}(P,(s=>{(0,a.dispatchCallback)(r.progress_callback,{status:"progress",name:e,file:t,...s})})):s=new Uint8Array(await P.arrayBuffer()),y=s}if(k&&b&&void 0===await i.match(b)&&(y?await i.put(b,new Response(y,{headers:P.headers})).catch((e=>{console.warn(`Unable to add response to browser cache: ${e}.`)})):await i.put(b,P,r.progress_callback)),(0,a.dispatchCallback)(r.progress_callback,{status:"done",name:e,file:t}),y){if(!n.apis.IS_NODE_ENV&&o)throw new Error("Cannot return path in a browser environment.");return y}if(P instanceof c)return P.filePath;const v=await(i?.match(b));if(v instanceof c)return v.filePath;if(v instanceof Response)return new Uint8Array(await v.arrayBuffer());if("string"==typeof v)return v;throw new Error("Unable to get model file path or buffer.")}async function g(e,t,s=!0,r={}){const o=await h(e,t,s,r,!1);if(null===o)return null;return new TextDecoder("utf-8").decode(o)}async function f(e,t,s=!0,r={}){const o=await g(e,t,s,r);return null===o?{}:JSON.parse(o)}function M(...e){return(e=e.map(((t,s)=>(s&&(t=t.replace(new RegExp("^/"),"")),s!==e.length-1&&(t=t.replace(new RegExp("/$"),"")),t)))).join("/")}},"./src/utils/image.js":(e,t,s)=>{s.r(t),s.d(t,{RawImage:()=>p,load_image:()=>h});var r=s("./src/utils/core.js"),o=s("./src/utils/hub.js"),n=s("./src/env.js"),a=s("./src/utils/tensor.js"),i=s("sharp");let l,c,d;const u=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV;if(u)l=(e,t)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(e,t)},d=self.createImageBitmap,c=self.ImageData;else{if(!i.default)throw new Error("Unable to load image processing library.");d=async e=>{const t=(await e.metadata()).channels,{data:s,info:r}=await e.rotate().raw().toBuffer({resolveWithObject:!0}),o=new p(new Uint8ClampedArray(s),r.width,r.height,r.channels);return void 0!==t&&t!==r.channels&&o.convert(t),o}}const _={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},m=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class p{constructor(e,t,s,r){this.data=e,this.width=t,this.height=s,this.channels=r}get size(){return[this.width,this.height]}static async read(e){if(e instanceof p)return e;if("string"==typeof e||e instanceof URL)return await this.fromURL(e);if(e instanceof Blob)return await this.fromBlob(e);if("undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas)return this.fromCanvas(e);throw new Error("Unsupported input type: "+typeof e)}static fromCanvas(e){if(!u)throw new Error("fromCanvas() is only supported in browser environments.");const t=e.getContext("2d").getImageData(0,0,e.width,e.height).data;return new p(t,e.width,e.height,4)}static async fromURL(e){const t=await(0,o.getFile)(e);if(200!==t.status)throw new Error(`Unable to read image from "${e}" (${t.status} ${t.statusText})`);const s=await t.blob();return this.fromBlob(s)}static async fromBlob(e){if(u){const t=await d(e),s=l(t.width,t.height).getContext("2d");return s.drawImage(t,0,0),new this(s.getImageData(0,0,t.width,t.height).data,t.width,t.height,4)}{const t=(0,i.default)(await e.arrayBuffer());return await d(t)}}static fromTensor(e,t="CHW"){if(3!==e.dims.length)throw new Error(`Tensor should have 3 dimensions, but has ${e.dims.length} dimensions.`);if("CHW"===t)e=e.transpose(1,2,0);else if("HWC"!==t)throw new Error(`Unsupported channel format: ${t}`);if(!(e.data instanceof Uint8ClampedArray||e.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${e.type}`);switch(e.dims[2]){case 1:case 2:case 3:case 4:return new p(e.data,e.dims[1],e.dims[0],e.dims[2]);default:throw new Error(`Unsupported number of channels: ${e.dims[2]}`)}}grayscale(){if(1===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let t=0,s=0;t<this.data.length;t+=this.channels){const r=this.data[t],o=this.data[t+1],n=this.data[t+2];e[s++]=Math.round(.2989*r+.587*o+.114*n)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,1)}rgb(){if(3===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let t=0,s=0;t<this.data.length;++t)e[s++]=this.data[t],e[s++]=this.data[t],e[s++]=this.data[t];break;case 4:for(let t=0,s=0;t<this.data.length;t+=4)e[s++]=this.data[t],e[s++]=this.data[t+1],e[s++]=this.data[t+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,3)}rgba(){if(4===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let t=0,s=0;t<this.data.length;++t)e[s++]=this.data[t],e[s++]=this.data[t],e[s++]=this.data[t],e[s++]=255;break;case 3:for(let t=0,s=0;t<this.data.length;t+=3)e[s++]=this.data[t],e[s++]=this.data[t+1],e[s++]=this.data[t+2],e[s++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,4)}putAlpha(e){if(e.width!==this.width||e.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${e.width}x${e.height}`);if(1!==e.channels)throw new Error(`Expected mask to have 1 channel, but got ${e.channels}`);const t=this.data,s=e.data,r=this.width*this.height;if(3===this.channels){const e=new Uint8ClampedArray(4*r);for(let o=0,n=0,a=0;o<r;++o)e[a++]=t[n++],e[a++]=t[n++],e[a++]=t[n++],e[a++]=s[o];return this._update(e,this.width,this.height,4)}if(4===this.channels){for(let e=0;e<r;++e)t[4*e+3]=s[e];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(e,t,{resample:s=2}={}){if(this.width===e&&this.height===t)return this;let o=_[s]??s;const n=(0,r.isNullishDimension)(e),a=(0,r.isNullishDimension)(t);if(n&&a)return this;if(n?e=t/this.height*this.width:a&&(t=e/this.width*this.height),u){const s=this.channels,r=this.toCanvas(),o=l(e,t).getContext("2d");o.drawImage(r,0,0,e,t);return new p(o.getImageData(0,0,e,t).data,e,t,4).convert(s)}{let s=this.toSharp();switch(o){case"box":case"hamming":"box"!==o&&"hamming"!==o||(console.warn(`Resampling method ${o} is not yet supported. Using bilinear instead.`),o="bilinear");case"nearest":case"bilinear":case"bicubic":s=s.affine([e/this.width,0,0,t/this.height],{interpolator:o});break;case"lanczos":s=s.resize({width:e,height:t,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${o} is not supported.`)}return await d(s)}}async pad([e,t,s,r]){if(e=Math.max(e,0),t=Math.max(t,0),s=Math.max(s,0),r=Math.max(r,0),0===e&&0===t&&0===s&&0===r)return this;if(u){const o=this.channels,n=this.toCanvas(),a=this.width+e+t,i=this.height+s+r,c=l(a,i).getContext("2d");c.drawImage(n,0,0,this.width,this.height,e,s,this.width,this.height);return new p(c.getImageData(0,0,a,i).data,a,i,4).convert(o)}{const o=this.toSharp().extend({left:e,right:t,top:s,bottom:r});return await d(o)}}async crop([e,t,s,r]){if(e=Math.max(e,0),t=Math.max(t,0),s=Math.min(s,this.width-1),r=Math.min(r,this.height-1),0===e&&0===t&&s===this.width-1&&r===this.height-1)return this;const o=s-e+1,n=r-t+1;if(u){const s=this.channels,r=this.toCanvas(),a=l(o,n).getContext("2d");a.drawImage(r,e,t,o,n,0,0,o,n);return new p(a.getImageData(0,0,o,n).data,o,n,4).convert(s)}{const s=this.toSharp().extract({left:e,top:t,width:o,height:n});return await d(s)}}async center_crop(e,t){if(this.width===e&&this.height===t)return this;const s=(this.width-e)/2,r=(this.height-t)/2;if(u){const o=this.channels,n=this.toCanvas(),a=l(e,t).getContext("2d");let i=0,c=0,d=0,u=0;s>=0?i=s:d=-s,r>=0?c=r:u=-r,a.drawImage(n,i,c,e,t,d,u,e,t);return new p(a.getImageData(0,0,e,t).data,e,t,4).convert(o)}{let o=this.toSharp();if(s>=0&&r>=0)o=o.extract({left:Math.floor(s),top:Math.floor(r),width:e,height:t});else if(s<=0&&r<=0){const n=Math.floor(-r),a=Math.floor(-s);o=o.extend({top:n,left:a,right:e-this.width-a,bottom:t-this.height-n})}else{let n=[0,0],a=0;r<0?(n[0]=Math.floor(-r),n[1]=t-this.height-n[0]):a=Math.floor(r);let i=[0,0],l=0;s<0?(i[0]=Math.floor(-s),i[1]=e-this.width-i[0]):l=Math.floor(s),o=o.extend({top:n[0],bottom:n[1],left:i[0],right:i[1]}).extract({left:l,top:a,width:e,height:t})}return await d(o)}}async toBlob(e="image/png",t=1){if(!u)throw new Error("toBlob() is only supported in browser environments.");const s=this.toCanvas();return await s.convertToBlob({type:e,quality:t})}toTensor(e="CHW"){let t=new a.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if("HWC"===e);else{if("CHW"!==e)throw new Error(`Unsupported channel format: ${e}`);t=t.permute(2,0,1)}return t}toCanvas(){if(!u)throw new Error("toCanvas() is only supported in browser environments.");const e=this.clone().rgba(),t=l(e.width,e.height),s=new c(e.data,e.width,e.height);return t.getContext("2d").putImageData(s,0,0),t}split(){const{data:e,width:t,height:s,channels:r}=this,o=e.constructor,n=e.length/r,a=Array.from({length:r},(()=>new o(n)));for(let t=0;t<n;++t){const s=r*t;for(let o=0;o<r;++o)a[o][t]=e[s+o]}return a.map((e=>new p(e,t,s,1)))}_update(e,t,s,r=null){return this.data=e,this.width=t,this.height=s,null!==r&&(this.channels=r),this}clone(){return new p(this.data.slice(),this.width,this.height,this.channels)}convert(e){if(this.channels===e)return this;switch(e){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(e){if(!u){if(n.apis.IS_FS_AVAILABLE){const t=this.toSharp();return await t.toFile(e)}throw new Error("Unable to save the image because filesystem is disabled in this environment.")}{if(n.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const t=e.split(".").pop().toLowerCase(),s=m.get(t)??"image/png",o=await this.toBlob(s);(0,r.saveBlob)(e,o)}}toSharp(){if(u)throw new Error("toSharp() is only supported in server-side environments.");return(0,i.default)(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const h=p.read.bind(p)},"./src/utils/maths.js":(e,t,s)=>{function r(e,[t,s,r],[o,n],a="bilinear",i=!1){const l=n/r,c=o/s,d=new e.constructor(o*n*t),u=s*r,_=o*n;for(let a=0;a<o;++a)for(let o=0;o<n;++o){const i=a*n+o,m=(o+.5)/l-.5,p=(a+.5)/c-.5;let h=Math.floor(m),g=Math.floor(p);const f=Math.min(h+1,r-1),M=Math.min(g+1,s-1);h=Math.max(h,0),g=Math.max(g,0);const w=m-h,T=p-g,b=(1-w)*(1-T),x=w*(1-T),P=(1-w)*T,k=w*T,F=g*r,y=M*r,v=F+h,C=F+f,S=y+h,A=y+f;for(let s=0;s<t;++s){const t=s*u;d[s*_+i]=b*e[t+v]+x*e[t+C]+P*e[t+S]+k*e[t+A]}}return d}function o(e,t,s){const r=new Array(s.length),o=new Array(s.length);for(let e=s.length-1,n=1;e>=0;--e)o[e]=n,r[e]=t[s[e]],n*=r[e];const n=s.map(((e,t)=>o[s.indexOf(t)])),a=new e.constructor(e.length);for(let s=0;s<e.length;++s){let r=0;for(let e=t.length-1,o=s;e>=0;--e)r+=o%t[e]*n[e],o=Math.floor(o/t[e]);a[r]=e[s]}return[a,r]}function n(e){const t=u(e)[0],s=e.map((e=>Math.exp(e-t))),r=s.reduce(((e,t)=>e+t),0);return s.map((e=>e/r))}function a(e){const t=u(e)[0];let s=0;for(let r=0;r<e.length;++r)s+=Math.exp(e[r]-t);const r=Math.log(s);return e.map((e=>e-t-r))}function i(e,t){let s=0;for(let r=0;r<e.length;++r)s+=e[r]*t[r];return s}function l(e,t){return i(e,t)/(c(e)*c(t))}function c(e){return Math.sqrt(e.reduce(((e,t)=>e+t*t),0))}function d(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],s=0;for(let r=1;r<e.length;++r)e[r]<t&&(t=e[r],s=r);return[t,s]}function u(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],s=0;for(let r=1;r<e.length;++r)e[r]>t&&(t=e[r],s=r);return[t,s]}function _(e){return e>0&&!(e&e-1)}s.r(t),s.d(t,{FFT:()=>h,bankers_round:()=>M,cos_sim:()=>l,dot:()=>i,dynamic_time_warping:()=>w,interpolate_data:()=>r,log_softmax:()=>a,magnitude:()=>c,max:()=>u,medianFilter:()=>g,min:()=>d,permute_data:()=>o,round:()=>f,softmax:()=>n});class m{constructor(e){if(this.size=0|e,this.size<=1||!_(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=e<<1,this.table=new Float64Array(2*this.size);for(let e=0;e<this.table.length;e+=2){const t=Math.PI*e/this.size;this.table[e]=Math.cos(t),this.table[e+1]=-Math.sin(t)}let t=0;for(let e=1;this.size>e;e<<=1)++t;this._width=t%2==0?t-1:t,this._bitrev=new Int32Array(1<<this._width);for(let e=0;e<this._bitrev.length;++e){this._bitrev[e]=0;for(let t=0;t<this._width;t+=2){const s=this._width-t-2;this._bitrev[e]|=(e>>>t&3)<<s}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(e,t){const s=t||new Array(e.length>>>1);for(let t=0;t<e.length;t+=2)s[t>>>1]=e[t];return s}toComplexArray(e,t){const s=t||this.createComplexArray();for(let t=0;t<s.length;t+=2)s[t]=e[t>>>1],s[t+1]=0;return s}transform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,1)}realTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._realTransform4(e,t,1)}inverseTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,-1);for(let t=0;t<e.length;++t)e[t]/=this.size}_transform4(e,t,s){const r=this._csize;let o,n,a=1<<this._width,i=r/a<<1;const l=this._bitrev;if(4===i)for(o=0,n=0;o<r;o+=i,++n){const s=l[n];this._singleTransform2(t,e,o,s,a)}else for(o=0,n=0;o<r;o+=i,++n){const r=l[n];this._singleTransform4(t,e,o,r,a,s)}const c=this.table;for(a>>=2;a>=2;a>>=2){i=r/a<<1;const t=i>>>2;for(o=0;o<r;o+=i){const r=o+t-1;for(let n=o,i=0;n<r;n+=2,i+=a){const r=n,o=r+t,a=o+t,l=a+t,d=e[r],u=e[r+1],_=e[o],m=e[o+1],p=e[a],h=e[a+1],g=e[l],f=e[l+1],M=c[i],w=s*c[i+1],T=_*M-m*w,b=_*w+m*M,x=c[2*i],P=s*c[2*i+1],k=p*x-h*P,F=p*P+h*x,y=c[3*i],v=s*c[3*i+1],C=g*y-f*v,S=g*v+f*y,A=d+k,E=u+F,L=d-k,I=u-F,z=T+C,D=b+S,j=s*(T-C),V=s*(b-S);e[r]=A+z,e[r+1]=E+D,e[o]=L+V,e[o+1]=I-j,e[a]=A-z,e[a+1]=E-D,e[l]=L-V,e[l+1]=I+j}}}}_singleTransform2(e,t,s,r,o){const n=e[r],a=e[r+1],i=e[r+o],l=e[r+o+1];t[s]=n+i,t[s+1]=a+l,t[s+2]=n-i,t[s+3]=a-l}_singleTransform4(e,t,s,r,o,n){const a=2*o,i=3*o,l=e[r],c=e[r+1],d=e[r+o],u=e[r+o+1],_=e[r+a],m=e[r+a+1],p=e[r+i],h=e[r+i+1],g=l+_,f=c+m,M=l-_,w=c-m,T=d+p,b=u+h,x=n*(d-p),P=n*(u-h);t[s]=g+T,t[s+1]=f+b,t[s+2]=M+P,t[s+3]=w-x,t[s+4]=g-T,t[s+5]=f-b,t[s+6]=M-P,t[s+7]=w+x}_realTransform4(e,t,s){const r=this._csize;let o,n,a=1<<this._width,i=r/a<<1;const l=this._bitrev;if(4===i)for(o=0,n=0;o<r;o+=i,++n){const s=l[n];this._singleRealTransform2(t,e,o,s>>>1,a>>>1)}else for(o=0,n=0;o<r;o+=i,++n){const r=l[n];this._singleRealTransform4(t,e,o,r>>>1,a>>>1,s)}const c=this.table;for(a>>=2;a>=2;a>>=2){i=r/a<<1;const t=i>>>1,n=t>>>1,l=n>>>1;for(o=0;o<r;o+=i)for(let r=0,i=0;r<=l;r+=2,i+=a){const a=o+r,d=a+n,u=d+n,_=u+n,m=e[a],p=e[a+1],h=e[d],g=e[d+1],f=e[u],M=e[u+1],w=e[_],T=e[_+1],b=m,x=p,P=c[i],k=s*c[i+1],F=h*P-g*k,y=h*k+g*P,v=c[2*i],C=s*c[2*i+1],S=f*v-M*C,A=f*C+M*v,E=c[3*i],L=s*c[3*i+1],I=w*E-T*L,z=w*L+T*E,D=b+S,j=x+A,V=b-S,N=x-A,O=F+I,B=y+z,G=s*(F-I),R=s*(y-z);if(e[a]=D+O,e[a+1]=j+B,e[d]=V+R,e[d+1]=N-G,0===r){e[u]=D-O,e[u+1]=j-B;continue}if(r===l)continue;const q=o+n-r,W=o+t-r;e[q]=V-s*R,e[q+1]=-N-s*G,e[W]=D-s*O,e[W+1]=s*B-j}}const d=r>>>1;for(let t=2;t<d;t+=2)e[r-t]=e[t],e[r-t+1]=-e[t+1]}_singleRealTransform2(e,t,s,r,o){const n=e[r],a=e[r+o];t[s]=n+a,t[s+1]=0,t[s+2]=n-a,t[s+3]=0}_singleRealTransform4(e,t,s,r,o,n){const a=2*o,i=3*o,l=e[r],c=e[r+o],d=e[r+a],u=e[r+i],_=l+d,m=l-d,p=c+u,h=n*(c-u);t[s]=_+p,t[s+1]=0,t[s+2]=m,t[s+3]=-h,t[s+4]=_-p,t[s+5]=0,t[s+6]=m,t[s+7]=h}}class p{constructor(e){const t=2*(e-1),s=2*(2*e-1),r=2**Math.ceil(Math.log2(s));this.bufferSize=r,this._a=t;const o=new Float64Array(s),n=new Float64Array(r);this._chirpBuffer=new Float64Array(r),this._buffer1=new Float64Array(r),this._buffer2=new Float64Array(r),this._outBuffer1=new Float64Array(r),this._outBuffer2=new Float64Array(r);const a=-2*Math.PI/e,i=Math.cos(a),l=Math.sin(a);for(let t=0;t<s>>1;++t){const s=(t+1-e)**2/2,r=Math.sqrt(i**2+l**2)**s,a=s*Math.atan2(l,i),c=2*t;o[c]=r*Math.cos(a),o[c+1]=r*Math.sin(a),n[c]=o[c],n[c+1]=-o[c+1]}this._slicedChirpBuffer=o.subarray(t,s),this._f=new m(r>>1),this._f.transform(this._chirpBuffer,n)}_transform(e,t,s){const r=this._buffer1,o=this._buffer2,n=this._outBuffer1,a=this._outBuffer2,i=this._chirpBuffer,l=this._slicedChirpBuffer,c=this._a;if(s)for(let e=0;e<l.length;e+=2){const s=e+1,o=t[e>>1];r[e]=o*l[e],r[s]=o*l[s]}else for(let e=0;e<l.length;e+=2){const s=e+1;r[e]=t[e]*l[e]-t[s]*l[s],r[s]=t[e]*l[s]+t[s]*l[e]}this._f.transform(n,r);for(let e=0;e<i.length;e+=2){const t=e+1;o[e]=n[e]*i[e]-n[t]*i[t],o[t]=n[e]*i[t]+n[t]*i[e]}this._f.inverseTransform(a,o);for(let t=0;t<a.length;t+=2){const s=a[t+c],r=a[t+c+1],o=l[t],n=l[t+1];e[t]=s*o-r*n,e[t+1]=s*n+r*o}}transform(e,t){this._transform(e,t,!1)}realTransform(e,t){this._transform(e,t,!0)}}class h{constructor(e){this.fft_length=e,this.isPowerOfTwo=_(e),this.isPowerOfTwo?(this.fft=new m(e),this.outputBufferSize=2*e):(this.fft=new p(e),this.outputBufferSize=this.fft.bufferSize)}realTransform(e,t){this.fft.realTransform(e,t)}transform(e,t){this.fft.transform(e,t)}}function g(e,t){if(t%2==0||t<=0)throw new Error("Window size must be a positive odd number");const s=new e.constructor(e.length),r=new e.constructor(t),o=Math.floor(t/2);for(let t=0;t<e.length;++t){let n=0;for(let s=-o;s<=o;++s){let o=t+s;o<0?o=Math.abs(o):o>=e.length&&(o=2*(e.length-1)-o),r[n++]=e[o]}r.sort(),s[t]=r[o]}return s}function f(e,t){const s=Math.pow(10,t);return Math.round(e*s)/s}function M(e){const t=Math.round(e);return Math.abs(e)%1==.5?t%2==0?t:t-1:t}function w(e){const t=e.length,s=e[0].length,r=[t+1,s+1],o=Array.from({length:r[0]},(()=>Array(r[1]).fill(1/0)));o[0][0]=0;const n=Array.from({length:r[0]},(()=>Array(r[1]).fill(-1)));for(let t=1;t<r[1];++t)for(let s=1;s<r[0];++s){const r=o[s-1][t-1],a=o[s-1][t],i=o[s][t-1];let l,c;r<a&&r<i?(l=r,c=0):a<r&&a<i?(l=a,c=1):(l=i,c=2),o[s][t]=e[s-1][t-1]+l,n[s][t]=c}for(let e=0;e<r[1];++e)n[0][e]=2;for(let e=0;e<r[0];++e)n[e][0]=1;let a=t,i=s,l=[],c=[];for(;a>0||i>0;)switch(l.push(a-1),c.push(i-1),n[a][i]){case 0:--a,--i;break;case 1:--a;break;case 2:--i;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${a}, ${i}]. Please file a bug report.`)}return l.reverse(),c.reverse(),[l,c]}},"./src/utils/tensor.js":(e,t,s)=>{s.r(t),s.d(t,{DataTypeMap:()=>a,Tensor:()=>i,cat:()=>b,full:()=>v,full_like:()=>C,interpolate:()=>c,interpolate_4d:()=>d,layer_norm:()=>f,matmul:()=>u,mean:()=>F,mean_pooling:()=>g,ones:()=>S,ones_like:()=>A,permute:()=>l,quantize_embeddings:()=>z,rand:()=>I,rfft:()=>_,slice:()=>h,stack:()=>x,std_mean:()=>k,topk:()=>m,zeros:()=>E,zeros_like:()=>L});var r=s("./src/utils/maths.js"),o=s("./src/backends/onnx.js"),n=s("./src/ops/registry.js");const a=Object.freeze({float32:Float32Array,float16:"undefined"!=typeof Float16Array?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class i{get dims(){return this.ort_tensor.dims}set dims(e){this.ort_tensor.dims=e}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...e){return(0,o.isONNXTensor)(e[0])?this.ort_tensor=e[0]:this.ort_tensor=new o.Tensor(e[0],e[1],e[2]),new Proxy(this,{get:(e,t)=>{if("string"==typeof t){let s=Number(t);if(Number.isInteger(s))return e._getitem(s)}return e[t]},set:(e,t,s)=>e[t]=s})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[e,...t]=this.dims;if(t.length>0){const s=t.reduce(((e,t)=>e*t));for(let r=0;r<e;++r)yield this._subarray(r,s,t)}else yield*this.data}_getitem(e){const[t,...s]=this.dims;if(e=T(e,t),s.length>0){const t=s.reduce(((e,t)=>e*t));return this._subarray(e,t,s)}return new i(this.type,[this.data[e]],s)}indexOf(e){const t=this.data;for(let s=0;s<t.length;++s)if(t[s]==e)return s;return-1}_subarray(e,t,s){const r=e*t,o=(e+1)*t,n="subarray"in this.data?this.data.subarray(r,o):this.data.slice(r,o);return new i(this.type,n,s)}item(){const e=this.data;if(1!==e.length)throw new Error(`a Tensor with ${e.length} elements cannot be converted to Scalar`);return e[0]}tolist(){return function(e,t){const s=e.length,r=t.reduce(((e,t)=>e*t));if(s!==r)throw Error(`cannot reshape array of size ${s} into shape (${t})`);let o=e;for(let e=t.length-1;e>=0;e--)o=o.reduce(((s,r)=>{let o=s[s.length-1];return o.length<t[e]?o.push(r):s.push([r]),s}),[[]]);return o[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=1/(1+Math.exp(-e[t]));return this}map(e){return this.clone().map_(e)}map_(e){const t=this.data;for(let s=0;s<t.length;++s)t[s]=e(t[s],s,t);return this}mul(e){return this.clone().mul_(e)}mul_(e){const t=this.data;for(let s=0;s<t.length;++s)t[s]*=e;return this}div(e){return this.clone().div_(e)}div_(e){const t=this.data;for(let s=0;s<t.length;++s)t[s]/=e;return this}add(e){return this.clone().add_(e)}add_(e){const t=this.data;for(let s=0;s<t.length;++s)t[s]+=e;return this}sub(e){return this.clone().sub_(e)}sub_(e){const t=this.data;for(let s=0;s<t.length;++s)t[s]-=e;return this}clone(){return new i(this.type,this.data.slice(),this.dims.slice())}slice(...e){const t=[],s=[];for(let r=0;r<this.dims.length;++r){let o=e[r];if(null==o)s.push([0,this.dims[r]]),t.push(this.dims[r]);else if("number"==typeof o)o=T(o,this.dims[r],r),s.push([o,o+1]);else{if(!Array.isArray(o)||2!==o.length)throw new Error(`Invalid slice: ${o}`);{let[e,n]=o;if(e=null===e?0:T(e,this.dims[r],r,!1),n=null===n?this.dims[r]:T(n,this.dims[r],r,!1),e>n)throw new Error(`Invalid slice: ${o}`);const a=[Math.max(e,0),Math.min(n,this.dims[r])];s.push(a),t.push(a[1]-a[0])}}}const r=s.map((([e,t])=>t-e)),o=r.reduce(((e,t)=>e*t)),n=this.data,a=new n.constructor(o),l=this.stride();for(let e=0;e<o;++e){let t=0;for(let o=r.length-1,n=e;o>=0;--o){const e=r[o];t+=(n%e+s[o][0])*l[o],n=Math.floor(n/e)}a[e]=n[t]}return new i(this.type,a,t)}permute(...e){return l(this,e)}transpose(...e){return this.permute(...e)}sum(e=null,t=!1){return this.norm(1,e,t)}norm(e="fro",t=null,s=!1){if("fro"===e)e=2;else if("string"==typeof e)throw Error(`Unsupported norm: ${e}`);const r=this.data,o=(t,s)=>t+s**e;if(null===t){const t=r.reduce(o,0)**(1/e);return new i(this.type,[t],[])}const[n,a,l]=P(o,this,t,s);if(1!==e)for(let t=0;t<a.length;++t)a[t]=a[t]**(1/e);return new i(n,a,l)}normalize_(e=2,t=1){t=T(t,this.dims.length);const s=this.norm(e,t,!0),r=this.data,o=s.data;for(let e=0;e<r.length;++e){let s=0;for(let r=this.dims.length-1,o=e,n=1;r>=0;--r){const e=this.dims[r];if(r!==t){s+=o%e*n,n*=this.dims[r]}o=Math.floor(o/e)}r[e]/=o[s]}return this}normalize(e=2,t=1){return this.clone().normalize_(e,t)}stride(){return function(e){const t=new Array(e.length);for(let s=e.length-1,r=1;s>=0;--s)t[s]=r,r*=e[s];return t}(this.dims)}squeeze(e=null){return new i(this.type,this.data,M(this.dims,e))}squeeze_(e=null){return this.dims=M(this.dims,e),this}unsqueeze(e=null){return new i(this.type,this.data,w(this.dims,e))}unsqueeze_(e=null){return this.dims=w(this.dims,e),this}flatten_(e=0,t=-1){t=(t+this.dims.length)%this.dims.length;let s=this.dims.slice(0,e),r=this.dims.slice(e,t+1),o=this.dims.slice(t+1);return this.dims=[...s,r.reduce(((e,t)=>e*t),1),...o],this}flatten(e=0,t=-1){return this.clone().flatten_(e,t)}view(...e){let t=-1;for(let s=0;s<e.length;++s)if(-1===e[s]){if(-1!==t)throw new Error("Only one dimension can be inferred");t=s}const s=this.data;if(-1!==t){const r=e.reduce(((e,s,r)=>r!==t?e*s:e),1);e[t]=s.length/r}return new i(this.type,s,e)}neg_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=-e[t];return this}neg(){return this.clone().neg_()}gt(e){const t=new Uint8Array(this.data.length),s=this.data;for(let r=0;r<s.length;++r)t[r]=s[r]>e?1:0;return new i("bool",t,this.dims)}lt(e){const t=new Uint8Array(this.data.length),s=this.data;for(let r=0;r<s.length;++r)t[r]=s[r]<e?1:0;return new i("bool",t,this.dims)}clamp_(e,t){const s=this.data;for(let r=0;r<s.length;++r)s[r]=Math.min(Math.max(s[r],e),t);return this}clamp(e,t){return this.clone().clamp_(e,t)}round_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=Math.round(e[t]);return this}round(){return this.clone().round_()}mean(e=null,t=!1){return F(this,e,t)}min(e=null,t=!1){if(null===e){const e=(0,r.min)(this.data)[0];return new i(this.type,[e],[])}const[s,o,n]=P(((e,t)=>Math.min(e,t)),this,e,t,1/0);return new i(s,o,n)}max(e=null,t=!1){if(null===e){const e=(0,r.max)(this.data)[0];return new i(this.type,[e],[])}const[s,o,n]=P(((e,t)=>Math.max(e,t)),this,e,t,-1/0);return new i(s,o,n)}argmin(e=null,t=!1){if(null!==e)throw new Error("`dim !== null` not yet implemented.");const s=(0,r.min)(this.data)[1];return new i("int64",[BigInt(s)],[])}argmax(e=null,t=!1){if(null!==e)throw new Error("`dim !== null` not yet implemented.");const s=(0,r.max)(this.data)[1];return new i("int64",[BigInt(s)],[])}to(e){if(this.type===e)return this;if(!a.hasOwnProperty(e))throw new Error(`Unsupported type: ${e}`);let t;const s=["int64","uint64"].includes(this.type),r=["int64","uint64"].includes(e);return s&&!r?t=Number:!s&&r&&(t=BigInt),new i(e,a[e].from(this.data,t),this.dims)}}function l(e,t){const[s,o]=(0,r.permute_data)(e.data,e.dims,t);return new i(e.type,s,o)}function c(e,[t,s],o="bilinear",n=!1){const a=e.dims.at(-3)??1,l=e.dims.at(-2),c=e.dims.at(-1);let d=(0,r.interpolate_data)(e.data,[a,l,c],[t,s],o,n);return new i(e.type,d,[a,t,s])}async function d(e,{size:t=null,mode:s="bilinear"}={}){if(4!==e.dims.length)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!t)throw new Error("`interpolate_4d` requires a `size` argument.");let r,o;if(2===t.length)r=[...e.dims.slice(0,2),...t];else if(3===t.length)r=[e.dims[0],...t];else{if(4!==t.length)throw new Error("`size` must be of length 2, 3, or 4.");r=t}if("nearest"===s)o=await n.TensorOpRegistry.nearest_interpolate_4d;else if("bilinear"===s)o=await n.TensorOpRegistry.bilinear_interpolate_4d;else{if("bicubic"!==s)throw new Error(`Unsupported mode: ${s}`);o=await n.TensorOpRegistry.bicubic_interpolate_4d}const a=new i("int64",new BigInt64Array(r.map(BigInt)),[r.length]);return await o({x:e,s:a})}async function u(e,t){const s=await n.TensorOpRegistry.matmul;return await s({a:e,b:t})}async function _(e,t){const s=await n.TensorOpRegistry.rfft;return await s({x:e,a:t})}async function m(e,t){const s=await n.TensorOpRegistry.top_k;return t=null==t?e.dims.at(-1):Math.min(t,e.dims.at(-1)),await s({x:e,k:new i("int64",[BigInt(t)],[1])})}const p=e=>new i("int64",e,[e.length]);async function h(e,t,s,r,o){const a=await n.TensorOpRegistry.slice;return await a({x:e,s:p(t),e:p(s),a:p(r),t:p(o??new Array(r.length).fill(1))})}function g(e,t){const s=e.data,r=t.data,o=[e.dims[0],e.dims[2]],n=new s.constructor(o[0]*o[1]),[a,l,c]=e.dims;let d=0;for(let e=0;e<a;++e){const t=e*c*l;for(let o=0;o<c;++o){let a=0,i=0;const u=e*l,_=t+o;for(let e=0;e<l;++e){const t=Number(r[u+e]);i+=t,a+=s[_+e*c]*t}const m=a/i;n[d++]=m}}return new i(e.type,n,o)}function f(e,t,{eps:s=1e-5}={}){if(2!==e.dims.length)throw new Error("`layer_norm` currently only supports 2D input.");const[r,o]=e.dims;if(1!==t.length&&t[0]!==o)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[n,a]=k(e,1,0,!0),l=n.data,c=a.data,d=e.data,u=new d.constructor(d.length);for(let e=0;e<r;++e){const t=e*o;for(let r=0;r<o;++r){const o=t+r;u[o]=(d[o]-c[e])/(l[e]+s)}}return new i(e.type,u,e.dims)}function M(e,t){return e=e.slice(),null===t?e=e.filter((e=>1!==e)):"number"==typeof t?1===e[t]&&e.splice(t,1):Array.isArray(t)&&(e=e.filter(((e,s)=>1!==e||!t.includes(s)))),e}function w(e,t){return t=T(t,e.length+1),(e=e.slice()).splice(t,0,1),e}function T(e,t,s=null,r=!0){if(e<-t||e>=t){if(r)throw new Error(`IndexError: index ${e} is out of bounds for dimension${null===s?"":" "+s} with size ${t}`);return e<-t?0:t}return e<0&&(e=(e%t+t)%t),e}function b(e,t=0){t=T(t,e[0].dims.length);const s=e[0].dims.slice();s[t]=e.reduce(((e,s)=>e+s.dims[t]),0);const r=s.reduce(((e,t)=>e*t),1),o=new e[0].data.constructor(r),n=e[0].type;if(0===t){let t=0;for(const s of e){const e=s.data;o.set(e,t),t+=e.length}}else{let r=0;for(let n=0;n<e.length;++n){const{data:a,dims:i}=e[n];for(let e=0;e<a.length;++e){let n=0;for(let o=i.length-1,a=e,l=1;o>=0;--o){const e=i[o];let c=a%e;o===t&&(c+=r),n+=c*l,l*=s[o],a=Math.floor(a/e)}o[n]=a[e]}r+=i[t]}}return new i(n,o,s)}function x(e,t=0){return b(e.map((e=>e.unsqueeze(t))),t)}function P(e,t,s=null,r=!1,o=null){const n=t.data,a=t.dims;s=T(s,a.length);const i=a.slice();i[s]=1;const l=new n.constructor(n.length/a[s]);null!==o&&l.fill(o);for(let t=0;t<n.length;++t){let r=0;for(let e=a.length-1,o=t,n=1;e>=0;--e){const t=a[e];if(e!==s){r+=o%t*n,n*=i[e]}o=Math.floor(o/t)}l[r]=e(l[r],n[t],t,r)}return r||i.splice(s,1),[t.type,l,i]}function k(e,t=null,s=1,r=!1){const o=e.data,n=e.dims;if(null===t){const t=o.reduce(((e,t)=>e+t),0)/o.length,r=Math.sqrt(o.reduce(((e,s)=>e+(s-t)**2),0)/(o.length-s)),n=new i(e.type,[t],[]);return[new i(e.type,[r],[]),n]}const a=F(e,t=T(t,n.length),r),l=a.data,[c,d,u]=P(((e,t,s,r)=>e+(t-l[r])**2),e,t,r);for(let e=0;e<d.length;++e)d[e]=Math.sqrt(d[e]/(n[t]-s));return[new i(c,d,u),a]}function F(e,t=null,s=!1){const r=e.dims,o=e.data;if(null===t){const t=o.reduce(((e,t)=>e+t),0);return new i(e.type,[t/o.length],[])}t=T(t,r.length);const[n,a,l]=P(((e,t)=>e+t),e,t,s);if(1!==r[t])for(let e=0;e<a.length;++e)a[e]/=r[t];return new i(n,a,l)}function y(e,t,s,r){const o=e.reduce(((e,t)=>e*t),1);return new i(s,new r(o).fill(t),e)}function v(e,t){let s,r;if("number"==typeof t)s="float32",r=Float32Array;else if("bigint"==typeof t)s="int64",r=BigInt64Array;else{if("boolean"!=typeof t)throw new Error("Unsupported data type: "+typeof t);s="bool",r=Uint8Array}return y(e,t,s,r)}function C(e,t){return v(e.dims,t)}function S(e){return y(e,1n,"int64",BigInt64Array)}function A(e){return S(e.dims)}function E(e){return y(e,0n,"int64",BigInt64Array)}function L(e){return E(e.dims)}function I(e){const t=e.reduce(((e,t)=>e*t),1);return new i("float32",Float32Array.from({length:t},(()=>Math.random())),e)}function z(e,t){if(2!==e.dims.length)throw new Error("The tensor must have 2 dimensions");if(e.dims.at(-1)%8!=0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(t))throw new Error("The precision must be either 'binary' or 'ubinary'");const s="binary"===t,r=s?"int8":"uint8",o=s?Int8Array:Uint8Array,n=e.data,a=new o(n.length/8);for(let e=0;e<n.length;++e){const t=n[e]>0?1:0,r=Math.floor(e/8),o=e%8;a[r]|=t<<7-o,s&&0===o&&(a[r]-=128)}return new i(r,a,[e.dims[0],e.dims[1]/8])}},"./src/utils/video.js":(e,t,s)=>{s.r(t),s.d(t,{RawVideo:()=>a,RawVideoFrame:()=>n,load_video:()=>i});var r=s("./src/utils/image.js"),o=s("./src/env.js");class n{constructor(e,t){this.image=e,this.timestamp=t}}class a{constructor(e,t){e.length>0&&e[0]instanceof r.RawImage&&(e=e.map(((s,r)=>new n(s,(r+1)/(e.length+1)*t)))),this.frames=e,this.duration=t}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function i(e,{num_frames:t=null,fps:s=null}={}){if(!o.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(null==t&&null==s)throw new Error("Either num_frames or fps must be provided.");const i=[],l=document.createElement("video");if(l.crossOrigin="anonymous",l.muted=!0,"string"==typeof e)l.src=e;else if(e instanceof Blob)l.src=URL.createObjectURL(e);else{if(!(e instanceof HTMLVideoElement))throw new Error("Invalid URL or video element provided.");l.src=e.src}if(await new Promise((e=>l.onloadedmetadata=e)),l.seekable.start(0)===l.seekable.end(0)){const e=await fetch(l.src),t=await e.blob();l.src=URL.createObjectURL(t),await new Promise((e=>l.onloadedmetadata=e))}const c=l.duration;let d,u;null!=t?(d=t,u=1===t?0:c/(t-1)):(u=1/s,d=Math.floor(c/u));let _=[];for(let e=0;e<d;++e)_.push(1===t?c/2:e*u);const m=document.createElement("canvas");m.width=l.videoWidth,m.height=l.videoHeight;const p=m.getContext("2d",{willReadFrequently:!0});for(const e of _){l.currentTime=e,await new Promise((e=>{l.onseeked=e})),p.drawImage(l,0,0,m.width,m.height);const t=p.getImageData(0,0,m.width,m.height),s=new r.RawImage(t.data,m.width,m.height,4),o=new n(s,e);i.push(o)}return l.remove(),new a(i,c)}}},c={};function d(e){var t=c[e];if(void 0!==t)return t.exports;var s=c[e]={exports:{}};return l[e](s,s.exports,d),s.exports}i=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,d.t=function(e,t){if(1&t&&(e=this(e)),8&t)return e;if("object"==typeof e&&e){if(4&t&&e.__esModule)return e;if(16&t&&"function"==typeof e.then)return e}var s=Object.create(null);d.r(s);var r={};a=a||[null,i({}),i([]),i(i)];for(var o=2&t&&e;"object"==typeof o&&!~a.indexOf(o);o=i(o))Object.getOwnPropertyNames(o).forEach((t=>r[t]=()=>e[t]));return r.default=()=>e,d.d(s,r),s},d.d=(e,t)=>{for(var s in t)d.o(t,s)&&!d.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},d.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),d.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var u={};(()=>{d.r(u),d.d(u,{ASTFeatureExtractor:()=>m.ASTFeatureExtractor,ASTForAudioClassification:()=>s.ASTForAudioClassification,ASTModel:()=>s.ASTModel,ASTPreTrainedModel:()=>s.ASTPreTrainedModel,AlbertForMaskedLM:()=>s.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>s.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>s.AlbertForSequenceClassification,AlbertModel:()=>s.AlbertModel,AlbertPreTrainedModel:()=>s.AlbertPreTrainedModel,AlbertTokenizer:()=>r.AlbertTokenizer,AudioClassificationPipeline:()=>t.AudioClassificationPipeline,AutoConfig:()=>o.AutoConfig,AutoFeatureExtractor:()=>p.AutoFeatureExtractor,AutoImageProcessor:()=>f.AutoImageProcessor,AutoModel:()=>s.AutoModel,AutoModelForAudioClassification:()=>s.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>s.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>s.AutoModelForAudioTextToText,AutoModelForCTC:()=>s.AutoModelForCTC,AutoModelForCausalLM:()=>s.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>s.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>s.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>s.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>s.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>s.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>s.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>s.AutoModelForImageTextToText,AutoModelForImageToImage:()=>s.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>s.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>s.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>s.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>s.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>s.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>s.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>s.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>s.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>s.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>s.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>s.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>s.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>s.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>s.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>s.AutoModelForVision2Seq,AutoModelForXVector:()=>s.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>s.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>T.AutoProcessor,AutoTokenizer:()=>r.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>t.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>t.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>s.BartForConditionalGeneration,BartForSequenceClassification:()=>s.BartForSequenceClassification,BartModel:()=>s.BartModel,BartPretrainedModel:()=>s.BartPretrainedModel,BartTokenizer:()=>r.BartTokenizer,BaseModelOutput:()=>s.BaseModelOutput,BaseStreamer:()=>b.BaseStreamer,BeitFeatureExtractor:()=>g.BeitFeatureExtractor,BeitForImageClassification:()=>s.BeitForImageClassification,BeitModel:()=>s.BeitModel,BeitPreTrainedModel:()=>s.BeitPreTrainedModel,BertForMaskedLM:()=>s.BertForMaskedLM,BertForQuestionAnswering:()=>s.BertForQuestionAnswering,BertForSequenceClassification:()=>s.BertForSequenceClassification,BertForTokenClassification:()=>s.BertForTokenClassification,BertModel:()=>s.BertModel,BertPreTrainedModel:()=>s.BertPreTrainedModel,BertTokenizer:()=>r.BertTokenizer,BitImageProcessor:()=>g.BitImageProcessor,BlenderbotForConditionalGeneration:()=>s.BlenderbotForConditionalGeneration,BlenderbotModel:()=>s.BlenderbotModel,BlenderbotPreTrainedModel:()=>s.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>s.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>s.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>s.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>r.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>r.BlenderbotTokenizer,BloomForCausalLM:()=>s.BloomForCausalLM,BloomModel:()=>s.BloomModel,BloomPreTrainedModel:()=>s.BloomPreTrainedModel,BloomTokenizer:()=>r.BloomTokenizer,CLIPFeatureExtractor:()=>g.CLIPFeatureExtractor,CLIPImageProcessor:()=>g.CLIPImageProcessor,CLIPModel:()=>s.CLIPModel,CLIPPreTrainedModel:()=>s.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>s.CLIPSegForImageSegmentation,CLIPSegModel:()=>s.CLIPSegModel,CLIPSegPreTrainedModel:()=>s.CLIPSegPreTrainedModel,CLIPTextModel:()=>s.CLIPTextModel,CLIPTextModelWithProjection:()=>s.CLIPTextModelWithProjection,CLIPTokenizer:()=>r.CLIPTokenizer,CLIPVisionModel:()=>s.CLIPVisionModel,CLIPVisionModelWithProjection:()=>s.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>s.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>s.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>s.CamembertForSequenceClassification,CamembertForTokenClassification:()=>s.CamembertForTokenClassification,CamembertModel:()=>s.CamembertModel,CamembertPreTrainedModel:()=>s.CamembertPreTrainedModel,CamembertTokenizer:()=>r.CamembertTokenizer,CausalLMOutput:()=>s.CausalLMOutput,CausalLMOutputWithPast:()=>s.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>g.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>s.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>s.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>s.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>m.ClapFeatureExtractor,ClapModel:()=>s.ClapModel,ClapPreTrainedModel:()=>s.ClapPreTrainedModel,ClapTextModelWithProjection:()=>s.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>P.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>s.CodeGenForCausalLM,CodeGenModel:()=>s.CodeGenModel,CodeGenPreTrainedModel:()=>s.CodeGenPreTrainedModel,CodeGenTokenizer:()=>r.CodeGenTokenizer,CodeLlamaTokenizer:()=>r.CodeLlamaTokenizer,CohereForCausalLM:()=>s.CohereForCausalLM,CohereModel:()=>s.CohereModel,CoherePreTrainedModel:()=>s.CoherePreTrainedModel,CohereTokenizer:()=>r.CohereTokenizer,ConvBertForMaskedLM:()=>s.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>s.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>s.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>s.ConvBertForTokenClassification,ConvBertModel:()=>s.ConvBertModel,ConvBertPreTrainedModel:()=>s.ConvBertPreTrainedModel,ConvBertTokenizer:()=>r.ConvBertTokenizer,ConvNextFeatureExtractor:()=>g.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>s.ConvNextForImageClassification,ConvNextImageProcessor:()=>g.ConvNextImageProcessor,ConvNextModel:()=>s.ConvNextModel,ConvNextPreTrainedModel:()=>s.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>s.ConvNextV2ForImageClassification,ConvNextV2Model:()=>s.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>s.ConvNextV2PreTrainedModel,DFineForObjectDetection:()=>s.DFineForObjectDetection,DFineModel:()=>s.DFineModel,DFinePreTrainedModel:()=>s.DFinePreTrainedModel,DPTFeatureExtractor:()=>g.DPTFeatureExtractor,DPTForDepthEstimation:()=>s.DPTForDepthEstimation,DPTImageProcessor:()=>g.DPTImageProcessor,DPTModel:()=>s.DPTModel,DPTPreTrainedModel:()=>s.DPTPreTrainedModel,DacDecoderModel:()=>s.DacDecoderModel,DacDecoderOutput:()=>s.DacDecoderOutput,DacEncoderModel:()=>s.DacEncoderModel,DacEncoderOutput:()=>s.DacEncoderOutput,DacFeatureExtractor:()=>m.DacFeatureExtractor,DacModel:()=>s.DacModel,DacPreTrainedModel:()=>s.DacPreTrainedModel,DataTypeMap:()=>l.DataTypeMap,DebertaForMaskedLM:()=>s.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>s.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>s.DebertaForSequenceClassification,DebertaForTokenClassification:()=>s.DebertaForTokenClassification,DebertaModel:()=>s.DebertaModel,DebertaPreTrainedModel:()=>s.DebertaPreTrainedModel,DebertaTokenizer:()=>r.DebertaTokenizer,DebertaV2ForMaskedLM:()=>s.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>s.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>s.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>s.DebertaV2ForTokenClassification,DebertaV2Model:()=>s.DebertaV2Model,DebertaV2PreTrainedModel:()=>s.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>r.DebertaV2Tokenizer,DecisionTransformerModel:()=>s.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>s.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>g.DeiTFeatureExtractor,DeiTForImageClassification:()=>s.DeiTForImageClassification,DeiTImageProcessor:()=>g.DeiTImageProcessor,DeiTModel:()=>s.DeiTModel,DeiTPreTrainedModel:()=>s.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>s.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>s.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>t.DepthEstimationPipeline,DepthProForDepthEstimation:()=>s.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>s.DepthProPreTrainedModel,DetrFeatureExtractor:()=>g.DetrFeatureExtractor,DetrForObjectDetection:()=>s.DetrForObjectDetection,DetrForSegmentation:()=>s.DetrForSegmentation,DetrImageProcessor:()=>g.DetrImageProcessor,DetrModel:()=>s.DetrModel,DetrObjectDetectionOutput:()=>s.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>s.DetrPreTrainedModel,DetrSegmentationOutput:()=>s.DetrSegmentationOutput,Dinov2ForImageClassification:()=>s.Dinov2ForImageClassification,Dinov2Model:()=>s.Dinov2Model,Dinov2PreTrainedModel:()=>s.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>s.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>s.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>s.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>s.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>s.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>s.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>s.DistilBertForTokenClassification,DistilBertModel:()=>s.DistilBertModel,DistilBertPreTrainedModel:()=>s.DistilBertPreTrainedModel,DistilBertTokenizer:()=>r.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>t.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>g.DonutFeatureExtractor,DonutImageProcessor:()=>g.DonutImageProcessor,DonutSwinModel:()=>s.DonutSwinModel,DonutSwinPreTrainedModel:()=>s.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>s.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>g.EfficientNetImageProcessor,EfficientNetModel:()=>s.EfficientNetModel,EfficientNetPreTrainedModel:()=>s.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>s.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>s.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>s.ElectraForSequenceClassification,ElectraForTokenClassification:()=>s.ElectraForTokenClassification,ElectraModel:()=>s.ElectraModel,ElectraPreTrainedModel:()=>s.ElectraPreTrainedModel,ElectraTokenizer:()=>r.ElectraTokenizer,EncodecFeatureExtractor:()=>m.EncodecFeatureExtractor,EosTokenCriteria:()=>x.EosTokenCriteria,EsmForMaskedLM:()=>s.EsmForMaskedLM,EsmForSequenceClassification:()=>s.EsmForSequenceClassification,EsmForTokenClassification:()=>s.EsmForTokenClassification,EsmModel:()=>s.EsmModel,EsmPreTrainedModel:()=>s.EsmPreTrainedModel,EsmTokenizer:()=>r.EsmTokenizer,ExaoneForCausalLM:()=>s.ExaoneForCausalLM,ExaoneModel:()=>s.ExaoneModel,ExaonePreTrainedModel:()=>s.ExaonePreTrainedModel,FFT:()=>c.FFT,FalconForCausalLM:()=>s.FalconForCausalLM,FalconModel:()=>s.FalconModel,FalconPreTrainedModel:()=>s.FalconPreTrainedModel,FalconTokenizer:()=>r.FalconTokenizer,FastViTForImageClassification:()=>s.FastViTForImageClassification,FastViTModel:()=>s.FastViTModel,FastViTPreTrainedModel:()=>s.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>t.FeatureExtractionPipeline,FeatureExtractor:()=>_.FeatureExtractor,FillMaskPipeline:()=>t.FillMaskPipeline,Florence2ForConditionalGeneration:()=>s.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>s.Florence2PreTrainedModel,Florence2Processor:()=>w.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>P.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>P.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>g.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>s.GLPNForDepthEstimation,GLPNModel:()=>s.GLPNModel,GLPNPreTrainedModel:()=>s.GLPNPreTrainedModel,GPT2LMHeadModel:()=>s.GPT2LMHeadModel,GPT2Model:()=>s.GPT2Model,GPT2PreTrainedModel:()=>s.GPT2PreTrainedModel,GPT2Tokenizer:()=>r.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>s.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>s.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>s.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>s.GPTJForCausalLM,GPTJModel:()=>s.GPTJModel,GPTJPreTrainedModel:()=>s.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>s.GPTNeoForCausalLM,GPTNeoModel:()=>s.GPTNeoModel,GPTNeoPreTrainedModel:()=>s.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>s.GPTNeoXForCausalLM,GPTNeoXModel:()=>s.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>s.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>r.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>s.Gemma2ForCausalLM,Gemma2Model:()=>s.Gemma2Model,Gemma2PreTrainedModel:()=>s.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>s.Gemma3ForCausalLM,Gemma3Model:()=>s.Gemma3Model,Gemma3PreTrainedModel:()=>s.Gemma3PreTrainedModel,Gemma3nAudioFeatureExtractor:()=>m.Gemma3nAudioFeatureExtractor,Gemma3nForConditionalGeneration:()=>s.Gemma3nForConditionalGeneration,Gemma3nPreTrainedModel:()=>s.Gemma3nPreTrainedModel,Gemma3nProcessor:()=>w.Gemma3nProcessor,GemmaForCausalLM:()=>s.GemmaForCausalLM,GemmaModel:()=>s.GemmaModel,GemmaPreTrainedModel:()=>s.GemmaPreTrainedModel,GemmaTokenizer:()=>r.GemmaTokenizer,GlmForCausalLM:()=>s.GlmForCausalLM,GlmModel:()=>s.GlmModel,GlmPreTrainedModel:()=>s.GlmPreTrainedModel,GraniteForCausalLM:()=>s.GraniteForCausalLM,GraniteModel:()=>s.GraniteModel,GranitePreTrainedModel:()=>s.GranitePreTrainedModel,Grok1Tokenizer:()=>r.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>s.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>g.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>s.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>w.GroundingDinoProcessor,GroupViTModel:()=>s.GroupViTModel,GroupViTPreTrainedModel:()=>s.GroupViTPreTrainedModel,HeliumForCausalLM:()=>s.HeliumForCausalLM,HeliumModel:()=>s.HeliumModel,HeliumPreTrainedModel:()=>s.HeliumPreTrainedModel,HerbertTokenizer:()=>r.HerbertTokenizer,HieraForImageClassification:()=>s.HieraForImageClassification,HieraModel:()=>s.HieraModel,HieraPreTrainedModel:()=>s.HieraPreTrainedModel,HubertForCTC:()=>s.HubertForCTC,HubertForSequenceClassification:()=>s.HubertForSequenceClassification,HubertModel:()=>s.HubertModel,HubertPreTrainedModel:()=>s.HubertPreTrainedModel,IJepaForImageClassification:()=>s.IJepaForImageClassification,IJepaModel:()=>s.IJepaModel,IJepaPreTrainedModel:()=>s.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>s.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>g.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>s.Idefics3PreTrainedModel,Idefics3Processor:()=>w.Idefics3Processor,ImageClassificationPipeline:()=>t.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>t.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>m.ImageFeatureExtractor,ImageMattingOutput:()=>s.ImageMattingOutput,ImageProcessor:()=>h.ImageProcessor,ImageSegmentationPipeline:()=>t.ImageSegmentationPipeline,ImageToImagePipeline:()=>t.ImageToImagePipeline,ImageToTextPipeline:()=>t.ImageToTextPipeline,InterruptableStoppingCriteria:()=>x.InterruptableStoppingCriteria,JAISLMHeadModel:()=>s.JAISLMHeadModel,JAISModel:()=>s.JAISModel,JAISPreTrainedModel:()=>s.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>g.JinaCLIPImageProcessor,JinaCLIPModel:()=>s.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>s.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>w.JinaCLIPProcessor,JinaCLIPTextModel:()=>s.JinaCLIPTextModel,JinaCLIPVisionModel:()=>s.JinaCLIPVisionModel,LiteWhisperForConditionalGeneration:()=>s.LiteWhisperForConditionalGeneration,LlamaForCausalLM:()=>s.LlamaForCausalLM,LlamaModel:()=>s.LlamaModel,LlamaPreTrainedModel:()=>s.LlamaPreTrainedModel,LlamaTokenizer:()=>r.LlamaTokenizer,LlavaForConditionalGeneration:()=>s.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>s.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>g.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>s.LlavaPreTrainedModel,LlavaProcessor:()=>w.LlavaProcessor,LlavaQwen2ForCausalLM:()=>s.LlavaQwen2ForCausalLM,LogitsProcessor:()=>P.LogitsProcessor,LogitsProcessorList:()=>P.LogitsProcessorList,LogitsWarper:()=>P.LogitsWarper,LongT5ForConditionalGeneration:()=>s.LongT5ForConditionalGeneration,LongT5Model:()=>s.LongT5Model,LongT5PreTrainedModel:()=>s.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>s.M2M100ForConditionalGeneration,M2M100Model:()=>s.M2M100Model,M2M100PreTrainedModel:()=>s.M2M100PreTrainedModel,M2M100Tokenizer:()=>r.M2M100Tokenizer,MBart50Tokenizer:()=>r.MBart50Tokenizer,MBartForCausalLM:()=>s.MBartForCausalLM,MBartForConditionalGeneration:()=>s.MBartForConditionalGeneration,MBartForSequenceClassification:()=>s.MBartForSequenceClassification,MBartModel:()=>s.MBartModel,MBartPreTrainedModel:()=>s.MBartPreTrainedModel,MBartTokenizer:()=>r.MBartTokenizer,MPNetForMaskedLM:()=>s.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>s.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>s.MPNetForSequenceClassification,MPNetForTokenClassification:()=>s.MPNetForTokenClassification,MPNetModel:()=>s.MPNetModel,MPNetPreTrainedModel:()=>s.MPNetPreTrainedModel,MPNetTokenizer:()=>r.MPNetTokenizer,MT5ForConditionalGeneration:()=>s.MT5ForConditionalGeneration,MT5Model:()=>s.MT5Model,MT5PreTrainedModel:()=>s.MT5PreTrainedModel,MarianMTModel:()=>s.MarianMTModel,MarianModel:()=>s.MarianModel,MarianPreTrainedModel:()=>s.MarianPreTrainedModel,MarianTokenizer:()=>r.MarianTokenizer,Mask2FormerImageProcessor:()=>g.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>g.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>s.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>g.MaskFormerImageProcessor,MaskFormerModel:()=>s.MaskFormerModel,MaskFormerPreTrainedModel:()=>s.MaskFormerPreTrainedModel,MaskedLMOutput:()=>s.MaskedLMOutput,MaxLengthCriteria:()=>x.MaxLengthCriteria,Metric3DForDepthEstimation:()=>s.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>s.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>s.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>s.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>s.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>s.MgpstrModelOutput,MgpstrPreTrainedModel:()=>s.MgpstrPreTrainedModel,MgpstrProcessor:()=>w.MgpstrProcessor,MgpstrTokenizer:()=>r.MgpstrTokenizer,MimiDecoderModel:()=>s.MimiDecoderModel,MimiDecoderOutput:()=>s.MimiDecoderOutput,MimiEncoderModel:()=>s.MimiEncoderModel,MimiEncoderOutput:()=>s.MimiEncoderOutput,MimiModel:()=>s.MimiModel,MimiPreTrainedModel:()=>s.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>P.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>P.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>s.MistralForCausalLM,MistralModel:()=>s.MistralModel,MistralPreTrainedModel:()=>s.MistralPreTrainedModel,MobileBertForMaskedLM:()=>s.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>s.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>s.MobileBertForSequenceClassification,MobileBertModel:()=>s.MobileBertModel,MobileBertPreTrainedModel:()=>s.MobileBertPreTrainedModel,MobileBertTokenizer:()=>r.MobileBertTokenizer,MobileLLMForCausalLM:()=>s.MobileLLMForCausalLM,MobileLLMModel:()=>s.MobileLLMModel,MobileLLMPreTrainedModel:()=>s.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>g.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>s.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>s.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>g.MobileNetV1ImageProcessor,MobileNetV1Model:()=>s.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>s.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>g.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>s.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>s.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>g.MobileNetV2ImageProcessor,MobileNetV2Model:()=>s.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>s.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>g.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>s.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>s.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>g.MobileNetV3ImageProcessor,MobileNetV3Model:()=>s.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>s.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>g.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>s.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>s.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>g.MobileNetV4ImageProcessor,MobileNetV4Model:()=>s.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>s.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>g.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>s.MobileViTForImageClassification,MobileViTImageProcessor:()=>g.MobileViTImageProcessor,MobileViTModel:()=>s.MobileViTModel,MobileViTPreTrainedModel:()=>s.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>s.MobileViTV2ForImageClassification,MobileViTV2Model:()=>s.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>s.MobileViTV2PreTrainedModel,ModelOutput:()=>s.ModelOutput,ModernBertForMaskedLM:()=>s.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>s.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>s.ModernBertForTokenClassification,ModernBertModel:()=>s.ModernBertModel,ModernBertPreTrainedModel:()=>s.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>s.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>m.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>s.MoonshineForConditionalGeneration,MoonshineModel:()=>s.MoonshineModel,MoonshinePreTrainedModel:()=>s.MoonshinePreTrainedModel,MoonshineProcessor:()=>w.MoonshineProcessor,MptForCausalLM:()=>s.MptForCausalLM,MptModel:()=>s.MptModel,MptPreTrainedModel:()=>s.MptPreTrainedModel,MultiModalityCausalLM:()=>s.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>s.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>s.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>s.MusicgenForConditionalGeneration,MusicgenModel:()=>s.MusicgenModel,MusicgenPreTrainedModel:()=>s.MusicgenPreTrainedModel,NeoBertForMaskedLM:()=>s.NeoBertForMaskedLM,NeoBertForQuestionAnswering:()=>s.NeoBertForQuestionAnswering,NeoBertForSequenceClassification:()=>s.NeoBertForSequenceClassification,NeoBertForTokenClassification:()=>s.NeoBertForTokenClassification,NeoBertModel:()=>s.NeoBertModel,NeoBertPreTrainedModel:()=>s.NeoBertPreTrainedModel,NllbTokenizer:()=>r.NllbTokenizer,NoBadWordsLogitsProcessor:()=>P.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>P.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>s.NomicBertModel,NomicBertPreTrainedModel:()=>s.NomicBertPreTrainedModel,NougatImageProcessor:()=>g.NougatImageProcessor,NougatTokenizer:()=>r.NougatTokenizer,OPTForCausalLM:()=>s.OPTForCausalLM,OPTModel:()=>s.OPTModel,OPTPreTrainedModel:()=>s.OPTPreTrainedModel,ObjectDetectionPipeline:()=>t.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>s.Olmo2ForCausalLM,Olmo2Model:()=>s.Olmo2Model,Olmo2PreTrainedModel:()=>s.Olmo2PreTrainedModel,OlmoForCausalLM:()=>s.OlmoForCausalLM,OlmoModel:()=>s.OlmoModel,OlmoPreTrainedModel:()=>s.OlmoPreTrainedModel,OpenELMForCausalLM:()=>s.OpenELMForCausalLM,OpenELMModel:()=>s.OpenELMModel,OpenELMPreTrainedModel:()=>s.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>g.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>s.OwlViTForObjectDetection,OwlViTImageProcessor:()=>g.OwlViTImageProcessor,OwlViTModel:()=>s.OwlViTModel,OwlViTPreTrainedModel:()=>s.OwlViTPreTrainedModel,OwlViTProcessor:()=>w.OwlViTProcessor,Owlv2ForObjectDetection:()=>s.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>g.Owlv2ImageProcessor,Owlv2Model:()=>s.Owlv2Model,Owlv2PreTrainedModel:()=>s.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>s.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>s.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>w.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>s.PatchTSMixerForPrediction,PatchTSMixerModel:()=>s.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>s.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>s.PatchTSTForPrediction,PatchTSTModel:()=>s.PatchTSTModel,PatchTSTPreTrainedModel:()=>s.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>s.Phi3ForCausalLM,Phi3Model:()=>s.Phi3Model,Phi3PreTrainedModel:()=>s.Phi3PreTrainedModel,Phi3VForCausalLM:()=>s.Phi3VForCausalLM,Phi3VImageProcessor:()=>g.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>s.Phi3VPreTrainedModel,Phi3VProcessor:()=>w.Phi3VProcessor,PhiForCausalLM:()=>s.PhiForCausalLM,PhiModel:()=>s.PhiModel,PhiPreTrainedModel:()=>s.PhiPreTrainedModel,Pipeline:()=>t.Pipeline,PreTrainedModel:()=>s.PreTrainedModel,PreTrainedTokenizer:()=>r.PreTrainedTokenizer,PretrainedConfig:()=>o.PretrainedConfig,PretrainedMixin:()=>s.PretrainedMixin,Processor:()=>M.Processor,PvtForImageClassification:()=>s.PvtForImageClassification,PvtImageProcessor:()=>g.PvtImageProcessor,PvtModel:()=>s.PvtModel,PvtPreTrainedModel:()=>s.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>m.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>s.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>s.PyAnnoteModel,PyAnnotePreTrainedModel:()=>s.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>w.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>s.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>t.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>s.Qwen2ForCausalLM,Qwen2Model:()=>s.Qwen2Model,Qwen2PreTrainedModel:()=>s.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>r.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>s.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>g.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>s.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>w.Qwen2VLProcessor,Qwen3ForCausalLM:()=>s.Qwen3ForCausalLM,Qwen3Model:()=>s.Qwen3Model,Qwen3PreTrainedModel:()=>s.Qwen3PreTrainedModel,RFDetrForObjectDetection:()=>s.RFDetrForObjectDetection,RFDetrModel:()=>s.RFDetrModel,RFDetrObjectDetectionOutput:()=>s.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>s.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>s.RTDetrForObjectDetection,RTDetrImageProcessor:()=>g.RTDetrImageProcessor,RTDetrModel:()=>s.RTDetrModel,RTDetrObjectDetectionOutput:()=>s.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>s.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>s.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>s.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>s.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>s.RTDetrV2PreTrainedModel,RawAudio:()=>n.RawAudio,RawImage:()=>a.RawImage,RawVideo:()=>i.RawVideo,RawVideoFrame:()=>i.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>P.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>s.ResNetForImageClassification,ResNetModel:()=>s.ResNetModel,ResNetPreTrainedModel:()=>s.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>s.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>s.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>s.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>s.RoFormerForTokenClassification,RoFormerModel:()=>s.RoFormerModel,RoFormerPreTrainedModel:()=>s.RoFormerPreTrainedModel,RoFormerTokenizer:()=>r.RoFormerTokenizer,RobertaForMaskedLM:()=>s.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>s.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>s.RobertaForSequenceClassification,RobertaForTokenClassification:()=>s.RobertaForTokenClassification,RobertaModel:()=>s.RobertaModel,RobertaPreTrainedModel:()=>s.RobertaPreTrainedModel,RobertaTokenizer:()=>r.RobertaTokenizer,SamImageProcessor:()=>g.SamImageProcessor,SamImageSegmentationOutput:()=>s.SamImageSegmentationOutput,SamModel:()=>s.SamModel,SamPreTrainedModel:()=>s.SamPreTrainedModel,SamProcessor:()=>w.SamProcessor,SapiensForDepthEstimation:()=>s.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>s.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>s.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>s.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>m.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>g.SegformerFeatureExtractor,SegformerForImageClassification:()=>s.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>s.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>g.SegformerImageProcessor,SegformerModel:()=>s.SegformerModel,SegformerPreTrainedModel:()=>s.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>s.Seq2SeqLMOutput,SequenceClassifierOutput:()=>s.SequenceClassifierOutput,SiglipImageProcessor:()=>g.SiglipImageProcessor,SiglipModel:()=>s.SiglipModel,SiglipPreTrainedModel:()=>s.SiglipPreTrainedModel,SiglipTextModel:()=>s.SiglipTextModel,SiglipTokenizer:()=>r.SiglipTokenizer,SiglipVisionModel:()=>s.SiglipVisionModel,SmolVLMForConditionalGeneration:()=>s.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>g.SmolVLMImageProcessor,SmolVLMProcessor:()=>w.SmolVLMProcessor,SnacDecoderModel:()=>s.SnacDecoderModel,SnacEncoderModel:()=>s.SnacEncoderModel,SnacFeatureExtractor:()=>m.SnacFeatureExtractor,SnacModel:()=>s.SnacModel,SnacPreTrainedModel:()=>s.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>m.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>s.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>s.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>s.SpeechT5HifiGan,SpeechT5Model:()=>s.SpeechT5Model,SpeechT5PreTrainedModel:()=>s.SpeechT5PreTrainedModel,SpeechT5Processor:()=>w.SpeechT5Processor,SpeechT5Tokenizer:()=>r.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>s.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>s.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>s.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>s.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>s.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>r.SqueezeBertTokenizer,StableLmForCausalLM:()=>s.StableLmForCausalLM,StableLmModel:()=>s.StableLmModel,StableLmPreTrainedModel:()=>s.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>s.Starcoder2ForCausalLM,Starcoder2Model:()=>s.Starcoder2Model,Starcoder2PreTrainedModel:()=>s.Starcoder2PreTrainedModel,StoppingCriteria:()=>x.StoppingCriteria,StoppingCriteriaList:()=>x.StoppingCriteriaList,StyleTextToSpeech2Model:()=>s.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>s.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>t.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>P.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>s.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>g.Swin2SRImageProcessor,Swin2SRModel:()=>s.Swin2SRModel,Swin2SRPreTrainedModel:()=>s.Swin2SRPreTrainedModel,SwinForImageClassification:()=>s.SwinForImageClassification,SwinForSemanticSegmentation:()=>s.SwinForSemanticSegmentation,SwinModel:()=>s.SwinModel,SwinPreTrainedModel:()=>s.SwinPreTrainedModel,T5ForConditionalGeneration:()=>s.T5ForConditionalGeneration,T5Model:()=>s.T5Model,T5PreTrainedModel:()=>s.T5PreTrainedModel,T5Tokenizer:()=>r.T5Tokenizer,TableTransformerForObjectDetection:()=>s.TableTransformerForObjectDetection,TableTransformerModel:()=>s.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>s.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>s.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>P.TemperatureLogitsWarper,Tensor:()=>l.Tensor,Text2TextGenerationPipeline:()=>t.Text2TextGenerationPipeline,TextClassificationPipeline:()=>t.TextClassificationPipeline,TextGenerationPipeline:()=>t.TextGenerationPipeline,TextStreamer:()=>b.TextStreamer,TextToAudioPipeline:()=>t.TextToAudioPipeline,TokenClassificationPipeline:()=>t.TokenClassificationPipeline,TokenClassifierOutput:()=>s.TokenClassifierOutput,TokenizerModel:()=>r.TokenizerModel,TopKLogitsWarper:()=>P.TopKLogitsWarper,TopPLogitsWarper:()=>P.TopPLogitsWarper,TrOCRForCausalLM:()=>s.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>s.TrOCRPreTrainedModel,TranslationPipeline:()=>t.TranslationPipeline,UltravoxModel:()=>s.UltravoxModel,UltravoxPreTrainedModel:()=>s.UltravoxPreTrainedModel,UltravoxProcessor:()=>w.UltravoxProcessor,UniSpeechForCTC:()=>s.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>s.UniSpeechForSequenceClassification,UniSpeechModel:()=>s.UniSpeechModel,UniSpeechPreTrainedModel:()=>s.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>s.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>s.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>s.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>s.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>s.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>w.VLChatProcessor,VLMImageProcessor:()=>g.VLMImageProcessor,ViTFeatureExtractor:()=>g.ViTFeatureExtractor,ViTForImageClassification:()=>s.ViTForImageClassification,ViTImageProcessor:()=>g.ViTImageProcessor,ViTMAEModel:()=>s.ViTMAEModel,ViTMAEPreTrainedModel:()=>s.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>s.ViTMSNForImageClassification,ViTMSNModel:()=>s.ViTMSNModel,ViTMSNPreTrainedModel:()=>s.ViTMSNPreTrainedModel,ViTModel:()=>s.ViTModel,ViTPreTrainedModel:()=>s.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>s.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>s.VitMatteForImageMatting,VitMatteImageProcessor:()=>g.VitMatteImageProcessor,VitMattePreTrainedModel:()=>s.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>s.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>g.VitPoseImageProcessor,VitPosePreTrainedModel:()=>s.VitPosePreTrainedModel,VitsModel:()=>s.VitsModel,VitsModelOutput:()=>s.VitsModelOutput,VitsPreTrainedModel:()=>s.VitsPreTrainedModel,VitsTokenizer:()=>r.VitsTokenizer,Wav2Vec2BertForCTC:()=>s.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>s.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>s.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>s.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>r.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>m.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>s.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>s.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>s.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>s.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>s.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>w.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>w.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>s.WavLMForAudioFrameClassification,WavLMForCTC:()=>s.WavLMForCTC,WavLMForSequenceClassification:()=>s.WavLMForSequenceClassification,WavLMForXVector:()=>s.WavLMForXVector,WavLMModel:()=>s.WavLMModel,WavLMPreTrainedModel:()=>s.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>m.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>s.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>s.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>m.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>s.WhisperForConditionalGeneration,WhisperModel:()=>s.WhisperModel,WhisperPreTrainedModel:()=>s.WhisperPreTrainedModel,WhisperProcessor:()=>w.WhisperProcessor,WhisperTextStreamer:()=>b.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>P.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>r.WhisperTokenizer,XLMForQuestionAnswering:()=>s.XLMForQuestionAnswering,XLMForSequenceClassification:()=>s.XLMForSequenceClassification,XLMForTokenClassification:()=>s.XLMForTokenClassification,XLMModel:()=>s.XLMModel,XLMPreTrainedModel:()=>s.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>s.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>s.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>s.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>s.XLMRobertaForTokenClassification,XLMRobertaModel:()=>s.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>s.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>r.XLMRobertaTokenizer,XLMTokenizer:()=>r.XLMTokenizer,XLMWithLMHeadModel:()=>s.XLMWithLMHeadModel,XVectorOutput:()=>s.XVectorOutput,YolosFeatureExtractor:()=>g.YolosFeatureExtractor,YolosForObjectDetection:()=>s.YolosForObjectDetection,YolosImageProcessor:()=>g.YolosImageProcessor,YolosModel:()=>s.YolosModel,YolosObjectDetectionOutput:()=>s.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>s.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>t.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>t.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>t.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>t.ZeroShotObjectDetectionPipeline,bankers_round:()=>c.bankers_round,cat:()=>l.cat,cos_sim:()=>c.cos_sim,dot:()=>c.dot,dynamic_time_warping:()=>c.dynamic_time_warping,env:()=>e.env,full:()=>l.full,full_like:()=>l.full_like,getKeyValueShapes:()=>o.getKeyValueShapes,hamming:()=>n.hamming,hanning:()=>n.hanning,interpolate:()=>l.interpolate,interpolate_4d:()=>l.interpolate_4d,interpolate_data:()=>c.interpolate_data,is_chinese_char:()=>r.is_chinese_char,layer_norm:()=>l.layer_norm,load_image:()=>a.load_image,load_video:()=>i.load_video,log_softmax:()=>c.log_softmax,magnitude:()=>c.magnitude,matmul:()=>l.matmul,max:()=>c.max,mean:()=>l.mean,mean_pooling:()=>l.mean_pooling,medianFilter:()=>c.medianFilter,mel_filter_bank:()=>n.mel_filter_bank,min:()=>c.min,ones:()=>l.ones,ones_like:()=>l.ones_like,permute:()=>l.permute,permute_data:()=>c.permute_data,pipeline:()=>t.pipeline,quantize_embeddings:()=>l.quantize_embeddings,rand:()=>l.rand,read_audio:()=>n.read_audio,rfft:()=>l.rfft,round:()=>c.round,slice:()=>l.slice,softmax:()=>c.softmax,spectrogram:()=>n.spectrogram,stack:()=>l.stack,std_mean:()=>l.std_mean,topk:()=>l.topk,window_function:()=>n.window_function,zeros:()=>l.zeros,zeros_like:()=>l.zeros_like});var e=d("./src/env.js"),t=d("./src/pipelines.js"),s=d("./src/models.js"),r=d("./src/tokenizers.js"),o=d("./src/configs.js"),n=d("./src/utils/audio.js"),a=d("./src/utils/image.js"),i=d("./src/utils/video.js"),l=d("./src/utils/tensor.js"),c=d("./src/utils/maths.js"),_=d("./src/base/feature_extraction_utils.js"),m=d("./src/models/feature_extractors.js"),p=d("./src/models/auto/feature_extraction_auto.js"),h=d("./src/base/image_processors_utils.js"),g=d("./src/models/image_processors.js"),f=d("./src/models/auto/image_processing_auto.js"),M=d("./src/base/processing_utils.js"),w=d("./src/models/processors.js"),T=d("./src/models/auto/processing_auto.js"),b=d("./src/generation/streamers.js"),x=d("./src/generation/stopping_criteria.js"),P=d("./src/generation/logits_process.js")})();var _=u.ASTFeatureExtractor,m=u.ASTForAudioClassification,p=u.ASTModel,h=u.ASTPreTrainedModel,g=u.AlbertForMaskedLM,f=u.AlbertForQuestionAnswering,M=u.AlbertForSequenceClassification,w=u.AlbertModel,T=u.AlbertPreTrainedModel,b=u.AlbertTokenizer,x=u.AudioClassificationPipeline,P=u.AutoConfig,k=u.AutoFeatureExtractor,F=u.AutoImageProcessor,y=u.AutoModel,v=u.AutoModelForAudioClassification,C=u.AutoModelForAudioFrameClassification,S=u.AutoModelForAudioTextToText,A=u.AutoModelForCTC,E=u.AutoModelForCausalLM,L=u.AutoModelForDepthEstimation,I=u.AutoModelForDocumentQuestionAnswering,z=u.AutoModelForImageClassification,D=u.AutoModelForImageFeatureExtraction,j=u.AutoModelForImageMatting,V=u.AutoModelForImageSegmentation,N=u.AutoModelForImageTextToText,O=u.AutoModelForImageToImage,B=u.AutoModelForMaskGeneration,G=u.AutoModelForMaskedLM,R=u.AutoModelForNormalEstimation,q=u.AutoModelForObjectDetection,W=u.AutoModelForPoseEstimation,$=u.AutoModelForQuestionAnswering,U=u.AutoModelForSemanticSegmentation,Q=u.AutoModelForSeq2SeqLM,X=u.AutoModelForSequenceClassification,H=u.AutoModelForSpeechSeq2Seq,J=u.AutoModelForTextToSpectrogram,Y=u.AutoModelForTextToWaveform,K=u.AutoModelForTokenClassification,Z=u.AutoModelForUniversalSegmentation,ee=u.AutoModelForVision2Seq,te=u.AutoModelForXVector,se=u.AutoModelForZeroShotObjectDetection,re=u.AutoProcessor,oe=u.AutoTokenizer,ne=u.AutomaticSpeechRecognitionPipeline,ae=u.BackgroundRemovalPipeline,ie=u.BartForConditionalGeneration,le=u.BartForSequenceClassification,ce=u.BartModel,de=u.BartPretrainedModel,ue=u.BartTokenizer,_e=u.BaseModelOutput,me=u.BaseStreamer,pe=u.BeitFeatureExtractor,he=u.BeitForImageClassification,ge=u.BeitModel,fe=u.BeitPreTrainedModel,Me=u.BertForMaskedLM,we=u.BertForQuestionAnswering,Te=u.BertForSequenceClassification,be=u.BertForTokenClassification,xe=u.BertModel,Pe=u.BertPreTrainedModel,ke=u.BertTokenizer,Fe=u.BitImageProcessor,ye=u.BlenderbotForConditionalGeneration,ve=u.BlenderbotModel,Ce=u.BlenderbotPreTrainedModel,Se=u.BlenderbotSmallForConditionalGeneration,Ae=u.BlenderbotSmallModel,Ee=u.BlenderbotSmallPreTrainedModel,Le=u.BlenderbotSmallTokenizer,Ie=u.BlenderbotTokenizer,ze=u.BloomForCausalLM,De=u.BloomModel,je=u.BloomPreTrainedModel,Ve=u.BloomTokenizer,Ne=u.CLIPFeatureExtractor,Oe=u.CLIPImageProcessor,Be=u.CLIPModel,Ge=u.CLIPPreTrainedModel,Re=u.CLIPSegForImageSegmentation,qe=u.CLIPSegModel,We=u.CLIPSegPreTrainedModel,$e=u.CLIPTextModel,Ue=u.CLIPTextModelWithProjection,Qe=u.CLIPTokenizer,Xe=u.CLIPVisionModel,He=u.CLIPVisionModelWithProjection,Je=u.CamembertForMaskedLM,Ye=u.CamembertForQuestionAnswering,Ke=u.CamembertForSequenceClassification,Ze=u.CamembertForTokenClassification,et=u.CamembertModel,tt=u.CamembertPreTrainedModel,st=u.CamembertTokenizer,rt=u.CausalLMOutput,ot=u.CausalLMOutputWithPast,nt=u.ChineseCLIPFeatureExtractor,at=u.ChineseCLIPModel,it=u.ChineseCLIPPreTrainedModel,lt=u.ClapAudioModelWithProjection,ct=u.ClapFeatureExtractor,dt=u.ClapModel,ut=u.ClapPreTrainedModel,_t=u.ClapTextModelWithProjection,mt=u.ClassifierFreeGuidanceLogitsProcessor,pt=u.CodeGenForCausalLM,ht=u.CodeGenModel,gt=u.CodeGenPreTrainedModel,ft=u.CodeGenTokenizer,Mt=u.CodeLlamaTokenizer,wt=u.CohereForCausalLM,Tt=u.CohereModel,bt=u.CoherePreTrainedModel,xt=u.CohereTokenizer,Pt=u.ConvBertForMaskedLM,kt=u.ConvBertForQuestionAnswering,Ft=u.ConvBertForSequenceClassification,yt=u.ConvBertForTokenClassification,vt=u.ConvBertModel,Ct=u.ConvBertPreTrainedModel,St=u.ConvBertTokenizer,At=u.ConvNextFeatureExtractor,Et=u.ConvNextForImageClassification,Lt=u.ConvNextImageProcessor,It=u.ConvNextModel,zt=u.ConvNextPreTrainedModel,Dt=u.ConvNextV2ForImageClassification,jt=u.ConvNextV2Model,Vt=u.ConvNextV2PreTrainedModel,Nt=u.DFineForObjectDetection,Ot=u.DFineModel,Bt=u.DFinePreTrainedModel,Gt=u.DPTFeatureExtractor,Rt=u.DPTForDepthEstimation,qt=u.DPTImageProcessor,Wt=u.DPTModel,$t=u.DPTPreTrainedModel,Ut=u.DacDecoderModel,Qt=u.DacDecoderOutput,Xt=u.DacEncoderModel,Ht=u.DacEncoderOutput,Jt=u.DacFeatureExtractor,Yt=u.DacModel,Kt=u.DacPreTrainedModel,Zt=u.DataTypeMap,es=u.DebertaForMaskedLM,ts=u.DebertaForQuestionAnswering,ss=u.DebertaForSequenceClassification,rs=u.DebertaForTokenClassification,os=u.DebertaModel,ns=u.DebertaPreTrainedModel,as=u.DebertaTokenizer,is=u.DebertaV2ForMaskedLM,ls=u.DebertaV2ForQuestionAnswering,cs=u.DebertaV2ForSequenceClassification,ds=u.DebertaV2ForTokenClassification,us=u.DebertaV2Model,_s=u.DebertaV2PreTrainedModel,ms=u.DebertaV2Tokenizer,ps=u.DecisionTransformerModel,hs=u.DecisionTransformerPreTrainedModel,gs=u.DeiTFeatureExtractor,fs=u.DeiTForImageClassification,Ms=u.DeiTImageProcessor,ws=u.DeiTModel,Ts=u.DeiTPreTrainedModel,bs=u.DepthAnythingForDepthEstimation,xs=u.DepthAnythingPreTrainedModel,Ps=u.DepthEstimationPipeline,ks=u.DepthProForDepthEstimation,Fs=u.DepthProPreTrainedModel,ys=u.DetrFeatureExtractor,vs=u.DetrForObjectDetection,Cs=u.DetrForSegmentation,Ss=u.DetrImageProcessor,As=u.DetrModel,Es=u.DetrObjectDetectionOutput,Ls=u.DetrPreTrainedModel,Is=u.DetrSegmentationOutput,zs=u.Dinov2ForImageClassification,Ds=u.Dinov2Model,js=u.Dinov2PreTrainedModel,Vs=u.Dinov2WithRegistersForImageClassification,Ns=u.Dinov2WithRegistersModel,Os=u.Dinov2WithRegistersPreTrainedModel,Bs=u.DistilBertForMaskedLM,Gs=u.DistilBertForQuestionAnswering,Rs=u.DistilBertForSequenceClassification,qs=u.DistilBertForTokenClassification,Ws=u.DistilBertModel,$s=u.DistilBertPreTrainedModel,Us=u.DistilBertTokenizer,Qs=u.DocumentQuestionAnsweringPipeline,Xs=u.DonutFeatureExtractor,Hs=u.DonutImageProcessor,Js=u.DonutSwinModel,Ys=u.DonutSwinPreTrainedModel,Ks=u.EfficientNetForImageClassification,Zs=u.EfficientNetImageProcessor,er=u.EfficientNetModel,tr=u.EfficientNetPreTrainedModel,sr=u.ElectraForMaskedLM,rr=u.ElectraForQuestionAnswering,or=u.ElectraForSequenceClassification,nr=u.ElectraForTokenClassification,ar=u.ElectraModel,ir=u.ElectraPreTrainedModel,lr=u.ElectraTokenizer,cr=u.EncodecFeatureExtractor,dr=u.EosTokenCriteria,ur=u.EsmForMaskedLM,_r=u.EsmForSequenceClassification,mr=u.EsmForTokenClassification,pr=u.EsmModel,hr=u.EsmPreTrainedModel,gr=u.EsmTokenizer,fr=u.ExaoneForCausalLM,Mr=u.ExaoneModel,wr=u.ExaonePreTrainedModel,Tr=u.FFT,br=u.FalconForCausalLM,xr=u.FalconModel,Pr=u.FalconPreTrainedModel,kr=u.FalconTokenizer,Fr=u.FastViTForImageClassification,yr=u.FastViTModel,vr=u.FastViTPreTrainedModel,Cr=u.FeatureExtractionPipeline,Sr=u.FeatureExtractor,Ar=u.FillMaskPipeline,Er=u.Florence2ForConditionalGeneration,Lr=u.Florence2PreTrainedModel,Ir=u.Florence2Processor,zr=u.ForcedBOSTokenLogitsProcessor,Dr=u.ForcedEOSTokenLogitsProcessor,jr=u.GLPNFeatureExtractor,Vr=u.GLPNForDepthEstimation,Nr=u.GLPNModel,Or=u.GLPNPreTrainedModel,Br=u.GPT2LMHeadModel,Gr=u.GPT2Model,Rr=u.GPT2PreTrainedModel,qr=u.GPT2Tokenizer,Wr=u.GPTBigCodeForCausalLM,$r=u.GPTBigCodeModel,Ur=u.GPTBigCodePreTrainedModel,Qr=u.GPTJForCausalLM,Xr=u.GPTJModel,Hr=u.GPTJPreTrainedModel,Jr=u.GPTNeoForCausalLM,Yr=u.GPTNeoModel,Kr=u.GPTNeoPreTrainedModel,Zr=u.GPTNeoXForCausalLM,eo=u.GPTNeoXModel,to=u.GPTNeoXPreTrainedModel,so=u.GPTNeoXTokenizer,ro=u.Gemma2ForCausalLM,oo=u.Gemma2Model,no=u.Gemma2PreTrainedModel,ao=u.Gemma3ForCausalLM,io=u.Gemma3Model,lo=u.Gemma3PreTrainedModel,co=u.Gemma3nAudioFeatureExtractor,uo=u.Gemma3nForConditionalGeneration,_o=u.Gemma3nPreTrainedModel,mo=u.Gemma3nProcessor,po=u.GemmaForCausalLM,ho=u.GemmaModel,go=u.GemmaPreTrainedModel,fo=u.GemmaTokenizer,Mo=u.GlmForCausalLM,wo=u.GlmModel,To=u.GlmPreTrainedModel,bo=u.GraniteForCausalLM,xo=u.GraniteModel,Po=u.GranitePreTrainedModel,ko=u.Grok1Tokenizer,Fo=u.GroundingDinoForObjectDetection,yo=u.GroundingDinoImageProcessor,vo=u.GroundingDinoPreTrainedModel,Co=u.GroundingDinoProcessor,So=u.GroupViTModel,Ao=u.GroupViTPreTrainedModel,Eo=u.HeliumForCausalLM,Lo=u.HeliumModel,Io=u.HeliumPreTrainedModel,zo=u.HerbertTokenizer,Do=u.HieraForImageClassification,jo=u.HieraModel,Vo=u.HieraPreTrainedModel,No=u.HubertForCTC,Oo=u.HubertForSequenceClassification,Bo=u.HubertModel,Go=u.HubertPreTrainedModel,Ro=u.IJepaForImageClassification,qo=u.IJepaModel,Wo=u.IJepaPreTrainedModel,$o=u.Idefics3ForConditionalGeneration,Uo=u.Idefics3ImageProcessor,Qo=u.Idefics3PreTrainedModel,Xo=u.Idefics3Processor,Ho=u.ImageClassificationPipeline,Jo=u.ImageFeatureExtractionPipeline,Yo=u.ImageFeatureExtractor,Ko=u.ImageMattingOutput,Zo=u.ImageProcessor,en=u.ImageSegmentationPipeline,tn=u.ImageToImagePipeline,sn=u.ImageToTextPipeline,rn=u.InterruptableStoppingCriteria,on=u.JAISLMHeadModel,nn=u.JAISModel,an=u.JAISPreTrainedModel,ln=u.JinaCLIPImageProcessor,cn=u.JinaCLIPModel,dn=u.JinaCLIPPreTrainedModel,un=u.JinaCLIPProcessor,_n=u.JinaCLIPTextModel,mn=u.JinaCLIPVisionModel,pn=u.LiteWhisperForConditionalGeneration,hn=u.LlamaForCausalLM,gn=u.LlamaModel,fn=u.LlamaPreTrainedModel,Mn=u.LlamaTokenizer,wn=u.LlavaForConditionalGeneration,Tn=u.LlavaOnevisionForConditionalGeneration,bn=u.LlavaOnevisionImageProcessor,xn=u.LlavaPreTrainedModel,Pn=u.LlavaProcessor,kn=u.LlavaQwen2ForCausalLM,Fn=u.LogitsProcessor,yn=u.LogitsProcessorList,vn=u.LogitsWarper,Cn=u.LongT5ForConditionalGeneration,Sn=u.LongT5Model,An=u.LongT5PreTrainedModel,En=u.M2M100ForConditionalGeneration,Ln=u.M2M100Model,In=u.M2M100PreTrainedModel,zn=u.M2M100Tokenizer,Dn=u.MBart50Tokenizer,jn=u.MBartForCausalLM,Vn=u.MBartForConditionalGeneration,Nn=u.MBartForSequenceClassification,On=u.MBartModel,Bn=u.MBartPreTrainedModel,Gn=u.MBartTokenizer,Rn=u.MPNetForMaskedLM,qn=u.MPNetForQuestionAnswering,Wn=u.MPNetForSequenceClassification,$n=u.MPNetForTokenClassification,Un=u.MPNetModel,Qn=u.MPNetPreTrainedModel,Xn=u.MPNetTokenizer,Hn=u.MT5ForConditionalGeneration,Jn=u.MT5Model,Yn=u.MT5PreTrainedModel,Kn=u.MarianMTModel,Zn=u.MarianModel,ea=u.MarianPreTrainedModel,ta=u.MarianTokenizer,sa=u.Mask2FormerImageProcessor,ra=u.MaskFormerFeatureExtractor,oa=u.MaskFormerForInstanceSegmentation,na=u.MaskFormerImageProcessor,aa=u.MaskFormerModel,ia=u.MaskFormerPreTrainedModel,la=u.MaskedLMOutput,ca=u.MaxLengthCriteria,da=u.Metric3DForDepthEstimation,ua=u.Metric3DPreTrainedModel,_a=u.Metric3Dv2ForDepthEstimation,ma=u.Metric3Dv2PreTrainedModel,pa=u.MgpstrForSceneTextRecognition,ha=u.MgpstrModelOutput,ga=u.MgpstrPreTrainedModel,fa=u.MgpstrProcessor,Ma=u.MgpstrTokenizer,wa=u.MimiDecoderModel,Ta=u.MimiDecoderOutput,ba=u.MimiEncoderModel,xa=u.MimiEncoderOutput,Pa=u.MimiModel,ka=u.MimiPreTrainedModel,Fa=u.MinLengthLogitsProcessor,ya=u.MinNewTokensLengthLogitsProcessor,va=u.MistralForCausalLM,Ca=u.MistralModel,Sa=u.MistralPreTrainedModel,Aa=u.MobileBertForMaskedLM,Ea=u.MobileBertForQuestionAnswering,La=u.MobileBertForSequenceClassification,Ia=u.MobileBertModel,za=u.MobileBertPreTrainedModel,Da=u.MobileBertTokenizer,ja=u.MobileLLMForCausalLM,Va=u.MobileLLMModel,Na=u.MobileLLMPreTrainedModel,Oa=u.MobileNetV1FeatureExtractor,Ba=u.MobileNetV1ForImageClassification,Ga=u.MobileNetV1ForSemanticSegmentation,Ra=u.MobileNetV1ImageProcessor,qa=u.MobileNetV1Model,Wa=u.MobileNetV1PreTrainedModel,$a=u.MobileNetV2FeatureExtractor,Ua=u.MobileNetV2ForImageClassification,Qa=u.MobileNetV2ForSemanticSegmentation,Xa=u.MobileNetV2ImageProcessor,Ha=u.MobileNetV2Model,Ja=u.MobileNetV2PreTrainedModel,Ya=u.MobileNetV3FeatureExtractor,Ka=u.MobileNetV3ForImageClassification,Za=u.MobileNetV3ForSemanticSegmentation,ei=u.MobileNetV3ImageProcessor,ti=u.MobileNetV3Model,si=u.MobileNetV3PreTrainedModel,ri=u.MobileNetV4FeatureExtractor,oi=u.MobileNetV4ForImageClassification,ni=u.MobileNetV4ForSemanticSegmentation,ai=u.MobileNetV4ImageProcessor,ii=u.MobileNetV4Model,li=u.MobileNetV4PreTrainedModel,ci=u.MobileViTFeatureExtractor,di=u.MobileViTForImageClassification,ui=u.MobileViTImageProcessor,_i=u.MobileViTModel,mi=u.MobileViTPreTrainedModel,pi=u.MobileViTV2ForImageClassification,hi=u.MobileViTV2Model,gi=u.MobileViTV2PreTrainedModel,fi=u.ModelOutput,Mi=u.ModernBertForMaskedLM,wi=u.ModernBertForSequenceClassification,Ti=u.ModernBertForTokenClassification,bi=u.ModernBertModel,xi=u.ModernBertPreTrainedModel,Pi=u.Moondream1ForConditionalGeneration,ki=u.MoonshineFeatureExtractor,Fi=u.MoonshineForConditionalGeneration,yi=u.MoonshineModel,vi=u.MoonshinePreTrainedModel,Ci=u.MoonshineProcessor,Si=u.MptForCausalLM,Ai=u.MptModel,Ei=u.MptPreTrainedModel,Li=u.MultiModalityCausalLM,Ii=u.MultiModalityPreTrainedModel,zi=u.MusicgenForCausalLM,Di=u.MusicgenForConditionalGeneration,ji=u.MusicgenModel,Vi=u.MusicgenPreTrainedModel,Ni=u.NeoBertForMaskedLM,Oi=u.NeoBertForQuestionAnswering,Bi=u.NeoBertForSequenceClassification,Gi=u.NeoBertForTokenClassification,Ri=u.NeoBertModel,qi=u.NeoBertPreTrainedModel,Wi=u.NllbTokenizer,$i=u.NoBadWordsLogitsProcessor,Ui=u.NoRepeatNGramLogitsProcessor,Qi=u.NomicBertModel,Xi=u.NomicBertPreTrainedModel,Hi=u.NougatImageProcessor,Ji=u.NougatTokenizer,Yi=u.OPTForCausalLM,Ki=u.OPTModel,Zi=u.OPTPreTrainedModel,el=u.ObjectDetectionPipeline,tl=u.Olmo2ForCausalLM,sl=u.Olmo2Model,rl=u.Olmo2PreTrainedModel,ol=u.OlmoForCausalLM,nl=u.OlmoModel,al=u.OlmoPreTrainedModel,il=u.OpenELMForCausalLM,ll=u.OpenELMModel,cl=u.OpenELMPreTrainedModel,dl=u.OwlViTFeatureExtractor,ul=u.OwlViTForObjectDetection,_l=u.OwlViTImageProcessor,ml=u.OwlViTModel,pl=u.OwlViTPreTrainedModel,hl=u.OwlViTProcessor,gl=u.Owlv2ForObjectDetection,fl=u.Owlv2ImageProcessor,Ml=u.Owlv2Model,wl=u.Owlv2PreTrainedModel,Tl=u.PaliGemmaForConditionalGeneration,bl=u.PaliGemmaPreTrainedModel,xl=u.PaliGemmaProcessor,Pl=u.PatchTSMixerForPrediction,kl=u.PatchTSMixerModel,Fl=u.PatchTSMixerPreTrainedModel,yl=u.PatchTSTForPrediction,vl=u.PatchTSTModel,Cl=u.PatchTSTPreTrainedModel,Sl=u.Phi3ForCausalLM,Al=u.Phi3Model,El=u.Phi3PreTrainedModel,Ll=u.Phi3VForCausalLM,Il=u.Phi3VImageProcessor,zl=u.Phi3VPreTrainedModel,Dl=u.Phi3VProcessor,jl=u.PhiForCausalLM,Vl=u.PhiModel,Nl=u.PhiPreTrainedModel,Ol=u.Pipeline,Bl=u.PreTrainedModel,Gl=u.PreTrainedTokenizer,Rl=u.PretrainedConfig,ql=u.PretrainedMixin,Wl=u.Processor,$l=u.PvtForImageClassification,Ul=u.PvtImageProcessor,Ql=u.PvtModel,Xl=u.PvtPreTrainedModel,Hl=u.PyAnnoteFeatureExtractor,Jl=u.PyAnnoteForAudioFrameClassification,Yl=u.PyAnnoteModel,Kl=u.PyAnnotePreTrainedModel,Zl=u.PyAnnoteProcessor,ec=u.QuestionAnsweringModelOutput,tc=u.QuestionAnsweringPipeline,sc=u.Qwen2ForCausalLM,rc=u.Qwen2Model,oc=u.Qwen2PreTrainedModel,nc=u.Qwen2Tokenizer,ac=u.Qwen2VLForConditionalGeneration,ic=u.Qwen2VLImageProcessor,lc=u.Qwen2VLPreTrainedModel,cc=u.Qwen2VLProcessor,dc=u.Qwen3ForCausalLM,uc=u.Qwen3Model,_c=u.Qwen3PreTrainedModel,mc=u.RFDetrForObjectDetection,pc=u.RFDetrModel,hc=u.RFDetrObjectDetectionOutput,gc=u.RFDetrPreTrainedModel,fc=u.RTDetrForObjectDetection,Mc=u.RTDetrImageProcessor,wc=u.RTDetrModel,Tc=u.RTDetrObjectDetectionOutput,bc=u.RTDetrPreTrainedModel,xc=u.RTDetrV2ForObjectDetection,Pc=u.RTDetrV2Model,kc=u.RTDetrV2ObjectDetectionOutput,Fc=u.RTDetrV2PreTrainedModel,yc=u.RawAudio,vc=u.RawImage,Cc=u.RawVideo,Sc=u.RawVideoFrame,Ac=u.RepetitionPenaltyLogitsProcessor,Ec=u.ResNetForImageClassification,Lc=u.ResNetModel,Ic=u.ResNetPreTrainedModel,zc=u.RoFormerForMaskedLM,Dc=u.RoFormerForQuestionAnswering,jc=u.RoFormerForSequenceClassification,Vc=u.RoFormerForTokenClassification,Nc=u.RoFormerModel,Oc=u.RoFormerPreTrainedModel,Bc=u.RoFormerTokenizer,Gc=u.RobertaForMaskedLM,Rc=u.RobertaForQuestionAnswering,qc=u.RobertaForSequenceClassification,Wc=u.RobertaForTokenClassification,$c=u.RobertaModel,Uc=u.RobertaPreTrainedModel,Qc=u.RobertaTokenizer,Xc=u.SamImageProcessor,Hc=u.SamImageSegmentationOutput,Jc=u.SamModel,Yc=u.SamPreTrainedModel,Kc=u.SamProcessor,Zc=u.SapiensForDepthEstimation,ed=u.SapiensForNormalEstimation,td=u.SapiensForSemanticSegmentation,sd=u.SapiensPreTrainedModel,rd=u.SeamlessM4TFeatureExtractor,od=u.SegformerFeatureExtractor,nd=u.SegformerForImageClassification,ad=u.SegformerForSemanticSegmentation,id=u.SegformerImageProcessor,ld=u.SegformerModel,cd=u.SegformerPreTrainedModel,dd=u.Seq2SeqLMOutput,ud=u.SequenceClassifierOutput,_d=u.SiglipImageProcessor,md=u.SiglipModel,pd=u.SiglipPreTrainedModel,hd=u.SiglipTextModel,gd=u.SiglipTokenizer,fd=u.SiglipVisionModel,Md=u.SmolVLMForConditionalGeneration,wd=u.SmolVLMImageProcessor,Td=u.SmolVLMProcessor,bd=u.SnacDecoderModel,xd=u.SnacEncoderModel,Pd=u.SnacFeatureExtractor,kd=u.SnacModel,Fd=u.SnacPreTrainedModel,yd=u.SpeechT5FeatureExtractor,vd=u.SpeechT5ForSpeechToText,Cd=u.SpeechT5ForTextToSpeech,Sd=u.SpeechT5HifiGan,Ad=u.SpeechT5Model,Ed=u.SpeechT5PreTrainedModel,Ld=u.SpeechT5Processor,Id=u.SpeechT5Tokenizer,zd=u.SqueezeBertForMaskedLM,Dd=u.SqueezeBertForQuestionAnswering,jd=u.SqueezeBertForSequenceClassification,Vd=u.SqueezeBertModel,Nd=u.SqueezeBertPreTrainedModel,Od=u.SqueezeBertTokenizer,Bd=u.StableLmForCausalLM,Gd=u.StableLmModel,Rd=u.StableLmPreTrainedModel,qd=u.Starcoder2ForCausalLM,Wd=u.Starcoder2Model,$d=u.Starcoder2PreTrainedModel,Ud=u.StoppingCriteria,Qd=u.StoppingCriteriaList,Xd=u.StyleTextToSpeech2Model,Hd=u.StyleTextToSpeech2PreTrainedModel,Jd=u.SummarizationPipeline,Yd=u.SuppressTokensAtBeginLogitsProcessor,Kd=u.Swin2SRForImageSuperResolution,Zd=u.Swin2SRImageProcessor,eu=u.Swin2SRModel,tu=u.Swin2SRPreTrainedModel,su=u.SwinForImageClassification,ru=u.SwinForSemanticSegmentation,ou=u.SwinModel,nu=u.SwinPreTrainedModel,au=u.T5ForConditionalGeneration,iu=u.T5Model,lu=u.T5PreTrainedModel,cu=u.T5Tokenizer,du=u.TableTransformerForObjectDetection,uu=u.TableTransformerModel,_u=u.TableTransformerObjectDetectionOutput,mu=u.TableTransformerPreTrainedModel,pu=u.TemperatureLogitsWarper,hu=u.Tensor,gu=u.Text2TextGenerationPipeline,fu=u.TextClassificationPipeline,Mu=u.TextGenerationPipeline,wu=u.TextStreamer,Tu=u.TextToAudioPipeline,bu=u.TokenClassificationPipeline,xu=u.TokenClassifierOutput,Pu=u.TokenizerModel,ku=u.TopKLogitsWarper,Fu=u.TopPLogitsWarper,yu=u.TrOCRForCausalLM,vu=u.TrOCRPreTrainedModel,Cu=u.TranslationPipeline,Su=u.UltravoxModel,Au=u.UltravoxPreTrainedModel,Eu=u.UltravoxProcessor,Lu=u.UniSpeechForCTC,Iu=u.UniSpeechForSequenceClassification,zu=u.UniSpeechModel,Du=u.UniSpeechPreTrainedModel,ju=u.UniSpeechSatForAudioFrameClassification,Vu=u.UniSpeechSatForCTC,Nu=u.UniSpeechSatForSequenceClassification,Ou=u.UniSpeechSatModel,Bu=u.UniSpeechSatPreTrainedModel,Gu=u.VLChatProcessor,Ru=u.VLMImageProcessor,qu=u.ViTFeatureExtractor,Wu=u.ViTForImageClassification,$u=u.ViTImageProcessor,Uu=u.ViTMAEModel,Qu=u.ViTMAEPreTrainedModel,Xu=u.ViTMSNForImageClassification,Hu=u.ViTMSNModel,Ju=u.ViTMSNPreTrainedModel,Yu=u.ViTModel,Ku=u.ViTPreTrainedModel,Zu=u.VisionEncoderDecoderModel,e_=u.VitMatteForImageMatting,t_=u.VitMatteImageProcessor,s_=u.VitMattePreTrainedModel,r_=u.VitPoseForPoseEstimation,o_=u.VitPoseImageProcessor,n_=u.VitPosePreTrainedModel,a_=u.VitsModel,i_=u.VitsModelOutput,l_=u.VitsPreTrainedModel,c_=u.VitsTokenizer,d_=u.Wav2Vec2BertForCTC,u_=u.Wav2Vec2BertForSequenceClassification,__=u.Wav2Vec2BertModel,m_=u.Wav2Vec2BertPreTrainedModel,p_=u.Wav2Vec2CTCTokenizer,h_=u.Wav2Vec2FeatureExtractor,g_=u.Wav2Vec2ForAudioFrameClassification,f_=u.Wav2Vec2ForCTC,M_=u.Wav2Vec2ForSequenceClassification,w_=u.Wav2Vec2Model,T_=u.Wav2Vec2PreTrainedModel,b_=u.Wav2Vec2Processor,x_=u.Wav2Vec2ProcessorWithLM,P_=u.WavLMForAudioFrameClassification,k_=u.WavLMForCTC,F_=u.WavLMForSequenceClassification,y_=u.WavLMForXVector,v_=u.WavLMModel,C_=u.WavLMPreTrainedModel,S_=u.WeSpeakerFeatureExtractor,A_=u.WeSpeakerResNetModel,E_=u.WeSpeakerResNetPreTrainedModel,L_=u.WhisperFeatureExtractor,I_=u.WhisperForConditionalGeneration,z_=u.WhisperModel,D_=u.WhisperPreTrainedModel,j_=u.WhisperProcessor,V_=u.WhisperTextStreamer,N_=u.WhisperTimeStampLogitsProcessor,O_=u.WhisperTokenizer,B_=u.XLMForQuestionAnswering,G_=u.XLMForSequenceClassification,R_=u.XLMForTokenClassification,q_=u.XLMModel,W_=u.XLMPreTrainedModel,$_=u.XLMRobertaForMaskedLM,U_=u.XLMRobertaForQuestionAnswering,Q_=u.XLMRobertaForSequenceClassification,X_=u.XLMRobertaForTokenClassification,H_=u.XLMRobertaModel,J_=u.XLMRobertaPreTrainedModel,Y_=u.XLMRobertaTokenizer,K_=u.XLMTokenizer,Z_=u.XLMWithLMHeadModel,em=u.XVectorOutput,tm=u.YolosFeatureExtractor,sm=u.YolosForObjectDetection,rm=u.YolosImageProcessor,om=u.YolosModel,nm=u.YolosObjectDetectionOutput,am=u.YolosPreTrainedModel,im=u.ZeroShotAudioClassificationPipeline,lm=u.ZeroShotClassificationPipeline,cm=u.ZeroShotImageClassificationPipeline,dm=u.ZeroShotObjectDetectionPipeline,um=u.bankers_round,_m=u.cat,mm=u.cos_sim,pm=u.dot,hm=u.dynamic_time_warping,gm=u.env,fm=u.full,Mm=u.full_like,wm=u.getKeyValueShapes,Tm=u.hamming,bm=u.hanning,xm=u.interpolate,Pm=u.interpolate_4d,km=u.interpolate_data,Fm=u.is_chinese_char,ym=u.layer_norm,vm=u.load_image,Cm=u.load_video,Sm=u.log_softmax,Am=u.magnitude,Em=u.matmul,Lm=u.max,Im=u.mean,zm=u.mean_pooling,Dm=u.medianFilter,jm=u.mel_filter_bank,Vm=u.min,Nm=u.ones,Om=u.ones_like,Bm=u.permute,Gm=u.permute_data,Rm=u.pipeline,qm=u.quantize_embeddings,Wm=u.rand,$m=u.read_audio,Um=u.rfft,Qm=u.round,Xm=u.slice,Hm=u.softmax,Jm=u.spectrogram,Ym=u.stack,Km=u.std_mean,Zm=u.topk,ep=u.window_function,tp=u.zeros,sp=u.zeros_like;export{_ as ASTFeatureExtractor,m as ASTForAudioClassification,p as ASTModel,h as ASTPreTrainedModel,g as AlbertForMaskedLM,f as AlbertForQuestionAnswering,M as AlbertForSequenceClassification,w as AlbertModel,T as AlbertPreTrainedModel,b as AlbertTokenizer,x as AudioClassificationPipeline,P as AutoConfig,k as AutoFeatureExtractor,F as AutoImageProcessor,y as AutoModel,v as AutoModelForAudioClassification,C as AutoModelForAudioFrameClassification,S as AutoModelForAudioTextToText,A as AutoModelForCTC,E as AutoModelForCausalLM,L as AutoModelForDepthEstimation,I as AutoModelForDocumentQuestionAnswering,z as AutoModelForImageClassification,D as AutoModelForImageFeatureExtraction,j as AutoModelForImageMatting,V as AutoModelForImageSegmentation,N as AutoModelForImageTextToText,O as AutoModelForImageToImage,B as AutoModelForMaskGeneration,G as AutoModelForMaskedLM,R as AutoModelForNormalEstimation,q as AutoModelForObjectDetection,W as AutoModelForPoseEstimation,$ as AutoModelForQuestionAnswering,U as AutoModelForSemanticSegmentation,Q as AutoModelForSeq2SeqLM,X as AutoModelForSequenceClassification,H as AutoModelForSpeechSeq2Seq,J as AutoModelForTextToSpectrogram,Y as AutoModelForTextToWaveform,K as AutoModelForTokenClassification,Z as AutoModelForUniversalSegmentation,ee as AutoModelForVision2Seq,te as AutoModelForXVector,se as AutoModelForZeroShotObjectDetection,re as AutoProcessor,oe as AutoTokenizer,ne as AutomaticSpeechRecognitionPipeline,ae as BackgroundRemovalPipeline,ie as BartForConditionalGeneration,le as BartForSequenceClassification,ce as BartModel,de as BartPretrainedModel,ue as BartTokenizer,_e as BaseModelOutput,me as BaseStreamer,pe as BeitFeatureExtractor,he as BeitForImageClassification,ge as BeitModel,fe as BeitPreTrainedModel,Me as BertForMaskedLM,we as BertForQuestionAnswering,Te as BertForSequenceClassification,be as BertForTokenClassification,xe as BertModel,Pe as BertPreTrainedModel,ke as BertTokenizer,Fe as BitImageProcessor,ye as BlenderbotForConditionalGeneration,ve as BlenderbotModel,Ce as BlenderbotPreTrainedModel,Se as BlenderbotSmallForConditionalGeneration,Ae as BlenderbotSmallModel,Ee as BlenderbotSmallPreTrainedModel,Le as BlenderbotSmallTokenizer,Ie as BlenderbotTokenizer,ze as BloomForCausalLM,De as BloomModel,je as BloomPreTrainedModel,Ve as BloomTokenizer,Ne as CLIPFeatureExtractor,Oe as CLIPImageProcessor,Be as CLIPModel,Ge as CLIPPreTrainedModel,Re as CLIPSegForImageSegmentation,qe as CLIPSegModel,We as CLIPSegPreTrainedModel,$e as CLIPTextModel,Ue as CLIPTextModelWithProjection,Qe as CLIPTokenizer,Xe as CLIPVisionModel,He as CLIPVisionModelWithProjection,Je as CamembertForMaskedLM,Ye as CamembertForQuestionAnswering,Ke as CamembertForSequenceClassification,Ze as CamembertForTokenClassification,et as CamembertModel,tt as CamembertPreTrainedModel,st as CamembertTokenizer,rt as CausalLMOutput,ot as CausalLMOutputWithPast,nt as ChineseCLIPFeatureExtractor,at as ChineseCLIPModel,it as ChineseCLIPPreTrainedModel,lt as ClapAudioModelWithProjection,ct as ClapFeatureExtractor,dt as ClapModel,ut as ClapPreTrainedModel,_t as ClapTextModelWithProjection,mt as ClassifierFreeGuidanceLogitsProcessor,pt as CodeGenForCausalLM,ht as CodeGenModel,gt as CodeGenPreTrainedModel,ft as CodeGenTokenizer,Mt as CodeLlamaTokenizer,wt as CohereForCausalLM,Tt as CohereModel,bt as CoherePreTrainedModel,xt as CohereTokenizer,Pt as ConvBertForMaskedLM,kt as ConvBertForQuestionAnswering,Ft as ConvBertForSequenceClassification,yt as ConvBertForTokenClassification,vt as ConvBertModel,Ct as ConvBertPreTrainedModel,St as ConvBertTokenizer,At as ConvNextFeatureExtractor,Et as ConvNextForImageClassification,Lt as ConvNextImageProcessor,It as ConvNextModel,zt as ConvNextPreTrainedModel,Dt as ConvNextV2ForImageClassification,jt as ConvNextV2Model,Vt as ConvNextV2PreTrainedModel,Nt as DFineForObjectDetection,Ot as DFineModel,Bt as DFinePreTrainedModel,Gt as DPTFeatureExtractor,Rt as DPTForDepthEstimation,qt as DPTImageProcessor,Wt as DPTModel,$t as DPTPreTrainedModel,Ut as DacDecoderModel,Qt as DacDecoderOutput,Xt as DacEncoderModel,Ht as DacEncoderOutput,Jt as DacFeatureExtractor,Yt as DacModel,Kt as DacPreTrainedModel,Zt as DataTypeMap,es as DebertaForMaskedLM,ts as DebertaForQuestionAnswering,ss as DebertaForSequenceClassification,rs as DebertaForTokenClassification,os as DebertaModel,ns as DebertaPreTrainedModel,as as DebertaTokenizer,is as DebertaV2ForMaskedLM,ls as DebertaV2ForQuestionAnswering,cs as DebertaV2ForSequenceClassification,ds as DebertaV2ForTokenClassification,us as DebertaV2Model,_s as DebertaV2PreTrainedModel,ms as DebertaV2Tokenizer,ps as DecisionTransformerModel,hs as DecisionTransformerPreTrainedModel,gs as DeiTFeatureExtractor,fs as DeiTForImageClassification,Ms as DeiTImageProcessor,ws as DeiTModel,Ts as DeiTPreTrainedModel,bs as DepthAnythingForDepthEstimation,xs as DepthAnythingPreTrainedModel,Ps as DepthEstimationPipeline,ks as DepthProForDepthEstimation,Fs as DepthProPreTrainedModel,ys as DetrFeatureExtractor,vs as DetrForObjectDetection,Cs as DetrForSegmentation,Ss as DetrImageProcessor,As as DetrModel,Es as DetrObjectDetectionOutput,Ls as DetrPreTrainedModel,Is as DetrSegmentationOutput,zs as Dinov2ForImageClassification,Ds as Dinov2Model,js as Dinov2PreTrainedModel,Vs as Dinov2WithRegistersForImageClassification,Ns as Dinov2WithRegistersModel,Os as Dinov2WithRegistersPreTrainedModel,Bs as DistilBertForMaskedLM,Gs as DistilBertForQuestionAnswering,Rs as DistilBertForSequenceClassification,qs as DistilBertForTokenClassification,Ws as DistilBertModel,$s as DistilBertPreTrainedModel,Us as DistilBertTokenizer,Qs as DocumentQuestionAnsweringPipeline,Xs as DonutFeatureExtractor,Hs as DonutImageProcessor,Js as DonutSwinModel,Ys as DonutSwinPreTrainedModel,Ks as EfficientNetForImageClassification,Zs as EfficientNetImageProcessor,er as EfficientNetModel,tr as EfficientNetPreTrainedModel,sr as ElectraForMaskedLM,rr as ElectraForQuestionAnswering,or as ElectraForSequenceClassification,nr as ElectraForTokenClassification,ar as ElectraModel,ir as ElectraPreTrainedModel,lr as ElectraTokenizer,cr as EncodecFeatureExtractor,dr as EosTokenCriteria,ur as EsmForMaskedLM,_r as EsmForSequenceClassification,mr as EsmForTokenClassification,pr as EsmModel,hr as EsmPreTrainedModel,gr as EsmTokenizer,fr as ExaoneForCausalLM,Mr as ExaoneModel,wr as ExaonePreTrainedModel,Tr as FFT,br as FalconForCausalLM,xr as FalconModel,Pr as FalconPreTrainedModel,kr as FalconTokenizer,Fr as FastViTForImageClassification,yr as FastViTModel,vr as FastViTPreTrainedModel,Cr as FeatureExtractionPipeline,Sr as FeatureExtractor,Ar as FillMaskPipeline,Er as Florence2ForConditionalGeneration,Lr as Florence2PreTrainedModel,Ir as Florence2Processor,zr as ForcedBOSTokenLogitsProcessor,Dr as ForcedEOSTokenLogitsProcessor,jr as GLPNFeatureExtractor,Vr as GLPNForDepthEstimation,Nr as GLPNModel,Or as GLPNPreTrainedModel,Br as GPT2LMHeadModel,Gr as GPT2Model,Rr as GPT2PreTrainedModel,qr as GPT2Tokenizer,Wr as GPTBigCodeForCausalLM,$r as GPTBigCodeModel,Ur as GPTBigCodePreTrainedModel,Qr as GPTJForCausalLM,Xr as GPTJModel,Hr as GPTJPreTrainedModel,Jr as GPTNeoForCausalLM,Yr as GPTNeoModel,Kr as GPTNeoPreTrainedModel,Zr as GPTNeoXForCausalLM,eo as GPTNeoXModel,to as GPTNeoXPreTrainedModel,so as GPTNeoXTokenizer,ro as Gemma2ForCausalLM,oo as Gemma2Model,no as Gemma2PreTrainedModel,ao as Gemma3ForCausalLM,io as Gemma3Model,lo as Gemma3PreTrainedModel,co as Gemma3nAudioFeatureExtractor,uo as Gemma3nForConditionalGeneration,_o as Gemma3nPreTrainedModel,mo as Gemma3nProcessor,po as GemmaForCausalLM,ho as GemmaModel,go as GemmaPreTrainedModel,fo as GemmaTokenizer,Mo as GlmForCausalLM,wo as GlmModel,To as GlmPreTrainedModel,bo as GraniteForCausalLM,xo as GraniteModel,Po as GranitePreTrainedModel,ko as Grok1Tokenizer,Fo as GroundingDinoForObjectDetection,yo as GroundingDinoImageProcessor,vo as GroundingDinoPreTrainedModel,Co as GroundingDinoProcessor,So as GroupViTModel,Ao as GroupViTPreTrainedModel,Eo as HeliumForCausalLM,Lo as HeliumModel,Io as HeliumPreTrainedModel,zo as HerbertTokenizer,Do as HieraForImageClassification,jo as HieraModel,Vo as HieraPreTrainedModel,No as HubertForCTC,Oo as HubertForSequenceClassification,Bo as HubertModel,Go as HubertPreTrainedModel,Ro as IJepaForImageClassification,qo as IJepaModel,Wo as IJepaPreTrainedModel,$o as Idefics3ForConditionalGeneration,Uo as Idefics3ImageProcessor,Qo as Idefics3PreTrainedModel,Xo as Idefics3Processor,Ho as ImageClassificationPipeline,Jo as ImageFeatureExtractionPipeline,Yo as ImageFeatureExtractor,Ko as ImageMattingOutput,Zo as ImageProcessor,en as ImageSegmentationPipeline,tn as ImageToImagePipeline,sn as ImageToTextPipeline,rn as InterruptableStoppingCriteria,on as JAISLMHeadModel,nn as JAISModel,an as JAISPreTrainedModel,ln as JinaCLIPImageProcessor,cn as JinaCLIPModel,dn as JinaCLIPPreTrainedModel,un as JinaCLIPProcessor,_n as JinaCLIPTextModel,mn as JinaCLIPVisionModel,pn as LiteWhisperForConditionalGeneration,hn as LlamaForCausalLM,gn as LlamaModel,fn as LlamaPreTrainedModel,Mn as LlamaTokenizer,wn as LlavaForConditionalGeneration,Tn as LlavaOnevisionForConditionalGeneration,bn as LlavaOnevisionImageProcessor,xn as LlavaPreTrainedModel,Pn as LlavaProcessor,kn as LlavaQwen2ForCausalLM,Fn as LogitsProcessor,yn as LogitsProcessorList,vn as LogitsWarper,Cn as LongT5ForConditionalGeneration,Sn as LongT5Model,An as LongT5PreTrainedModel,En as M2M100ForConditionalGeneration,Ln as M2M100Model,In as M2M100PreTrainedModel,zn as M2M100Tokenizer,Dn as MBart50Tokenizer,jn as MBartForCausalLM,Vn as MBartForConditionalGeneration,Nn as MBartForSequenceClassification,On as MBartModel,Bn as MBartPreTrainedModel,Gn as MBartTokenizer,Rn as MPNetForMaskedLM,qn as MPNetForQuestionAnswering,Wn as MPNetForSequenceClassification,$n as MPNetForTokenClassification,Un as MPNetModel,Qn as MPNetPreTrainedModel,Xn as MPNetTokenizer,Hn as MT5ForConditionalGeneration,Jn as MT5Model,Yn as MT5PreTrainedModel,Kn as MarianMTModel,Zn as MarianModel,ea as MarianPreTrainedModel,ta as MarianTokenizer,sa as Mask2FormerImageProcessor,ra as MaskFormerFeatureExtractor,oa as MaskFormerForInstanceSegmentation,na as MaskFormerImageProcessor,aa as MaskFormerModel,ia as MaskFormerPreTrainedModel,la as MaskedLMOutput,ca as MaxLengthCriteria,da as Metric3DForDepthEstimation,ua as Metric3DPreTrainedModel,_a as Metric3Dv2ForDepthEstimation,ma as Metric3Dv2PreTrainedModel,pa as MgpstrForSceneTextRecognition,ha as MgpstrModelOutput,ga as MgpstrPreTrainedModel,fa as MgpstrProcessor,Ma as MgpstrTokenizer,wa as MimiDecoderModel,Ta as MimiDecoderOutput,ba as MimiEncoderModel,xa as MimiEncoderOutput,Pa as MimiModel,ka as MimiPreTrainedModel,Fa as MinLengthLogitsProcessor,ya as MinNewTokensLengthLogitsProcessor,va as MistralForCausalLM,Ca as MistralModel,Sa as MistralPreTrainedModel,Aa as MobileBertForMaskedLM,Ea as MobileBertForQuestionAnswering,La as MobileBertForSequenceClassification,Ia as MobileBertModel,za as MobileBertPreTrainedModel,Da as MobileBertTokenizer,ja as MobileLLMForCausalLM,Va as MobileLLMModel,Na as MobileLLMPreTrainedModel,Oa as MobileNetV1FeatureExtractor,Ba as MobileNetV1ForImageClassification,Ga as MobileNetV1ForSemanticSegmentation,Ra as MobileNetV1ImageProcessor,qa as MobileNetV1Model,Wa as MobileNetV1PreTrainedModel,$a as MobileNetV2FeatureExtractor,Ua as MobileNetV2ForImageClassification,Qa as MobileNetV2ForSemanticSegmentation,Xa as MobileNetV2ImageProcessor,Ha as MobileNetV2Model,Ja as MobileNetV2PreTrainedModel,Ya as MobileNetV3FeatureExtractor,Ka as MobileNetV3ForImageClassification,Za as MobileNetV3ForSemanticSegmentation,ei as MobileNetV3ImageProcessor,ti as MobileNetV3Model,si as MobileNetV3PreTrainedModel,ri as MobileNetV4FeatureExtractor,oi as MobileNetV4ForImageClassification,ni as MobileNetV4ForSemanticSegmentation,ai as MobileNetV4ImageProcessor,ii as MobileNetV4Model,li as MobileNetV4PreTrainedModel,ci as MobileViTFeatureExtractor,di as MobileViTForImageClassification,ui as MobileViTImageProcessor,_i as MobileViTModel,mi as MobileViTPreTrainedModel,pi as MobileViTV2ForImageClassification,hi as MobileViTV2Model,gi as MobileViTV2PreTrainedModel,fi as ModelOutput,Mi as ModernBertForMaskedLM,wi as ModernBertForSequenceClassification,Ti as ModernBertForTokenClassification,bi as ModernBertModel,xi as ModernBertPreTrainedModel,Pi as Moondream1ForConditionalGeneration,ki as MoonshineFeatureExtractor,Fi as MoonshineForConditionalGeneration,yi as MoonshineModel,vi as MoonshinePreTrainedModel,Ci as MoonshineProcessor,Si as MptForCausalLM,Ai as MptModel,Ei as MptPreTrainedModel,Li as MultiModalityCausalLM,Ii as MultiModalityPreTrainedModel,zi as MusicgenForCausalLM,Di as MusicgenForConditionalGeneration,ji as MusicgenModel,Vi as MusicgenPreTrainedModel,Ni as NeoBertForMaskedLM,Oi as NeoBertForQuestionAnswering,Bi as NeoBertForSequenceClassification,Gi as NeoBertForTokenClassification,Ri as NeoBertModel,qi as NeoBertPreTrainedModel,Wi as NllbTokenizer,$i as NoBadWordsLogitsProcessor,Ui as NoRepeatNGramLogitsProcessor,Qi as NomicBertModel,Xi as NomicBertPreTrainedModel,Hi as NougatImageProcessor,Ji as NougatTokenizer,Yi as OPTForCausalLM,Ki as OPTModel,Zi as OPTPreTrainedModel,el as ObjectDetectionPipeline,tl as Olmo2ForCausalLM,sl as Olmo2Model,rl as Olmo2PreTrainedModel,ol as OlmoForCausalLM,nl as OlmoModel,al as OlmoPreTrainedModel,il as OpenELMForCausalLM,ll as OpenELMModel,cl as OpenELMPreTrainedModel,dl as OwlViTFeatureExtractor,ul as OwlViTForObjectDetection,_l as OwlViTImageProcessor,ml as OwlViTModel,pl as OwlViTPreTrainedModel,hl as OwlViTProcessor,gl as Owlv2ForObjectDetection,fl as Owlv2ImageProcessor,Ml as Owlv2Model,wl as Owlv2PreTrainedModel,Tl as PaliGemmaForConditionalGeneration,bl as PaliGemmaPreTrainedModel,xl as PaliGemmaProcessor,Pl as PatchTSMixerForPrediction,kl as PatchTSMixerModel,Fl as PatchTSMixerPreTrainedModel,yl as PatchTSTForPrediction,vl as PatchTSTModel,Cl as PatchTSTPreTrainedModel,Sl as Phi3ForCausalLM,Al as Phi3Model,El as Phi3PreTrainedModel,Ll as Phi3VForCausalLM,Il as Phi3VImageProcessor,zl as Phi3VPreTrainedModel,Dl as Phi3VProcessor,jl as PhiForCausalLM,Vl as PhiModel,Nl as PhiPreTrainedModel,Ol as Pipeline,Bl as PreTrainedModel,Gl as PreTrainedTokenizer,Rl as PretrainedConfig,ql as PretrainedMixin,Wl as Processor,$l as PvtForImageClassification,Ul as PvtImageProcessor,Ql as PvtModel,Xl as PvtPreTrainedModel,Hl as PyAnnoteFeatureExtractor,Jl as PyAnnoteForAudioFrameClassification,Yl as PyAnnoteModel,Kl as PyAnnotePreTrainedModel,Zl as PyAnnoteProcessor,ec as QuestionAnsweringModelOutput,tc as QuestionAnsweringPipeline,sc as Qwen2ForCausalLM,rc as Qwen2Model,oc as Qwen2PreTrainedModel,nc as Qwen2Tokenizer,ac as Qwen2VLForConditionalGeneration,ic as Qwen2VLImageProcessor,lc as Qwen2VLPreTrainedModel,cc as Qwen2VLProcessor,dc as Qwen3ForCausalLM,uc as Qwen3Model,_c as Qwen3PreTrainedModel,mc as RFDetrForObjectDetection,pc as RFDetrModel,hc as RFDetrObjectDetectionOutput,gc as RFDetrPreTrainedModel,fc as RTDetrForObjectDetection,Mc as RTDetrImageProcessor,wc as RTDetrModel,Tc as RTDetrObjectDetectionOutput,bc as RTDetrPreTrainedModel,xc as RTDetrV2ForObjectDetection,Pc as RTDetrV2Model,kc as RTDetrV2ObjectDetectionOutput,Fc as RTDetrV2PreTrainedModel,yc as RawAudio,vc as RawImage,Cc as RawVideo,Sc as RawVideoFrame,Ac as RepetitionPenaltyLogitsProcessor,Ec as ResNetForImageClassification,Lc as ResNetModel,Ic as ResNetPreTrainedModel,zc as RoFormerForMaskedLM,Dc as RoFormerForQuestionAnswering,jc as RoFormerForSequenceClassification,Vc as RoFormerForTokenClassification,Nc as RoFormerModel,Oc as RoFormerPreTrainedModel,Bc as RoFormerTokenizer,Gc as RobertaForMaskedLM,Rc as RobertaForQuestionAnswering,qc as RobertaForSequenceClassification,Wc as RobertaForTokenClassification,$c as RobertaModel,Uc as RobertaPreTrainedModel,Qc as RobertaTokenizer,Xc as SamImageProcessor,Hc as SamImageSegmentationOutput,Jc as SamModel,Yc as SamPreTrainedModel,Kc as SamProcessor,Zc as SapiensForDepthEstimation,ed as SapiensForNormalEstimation,td as SapiensForSemanticSegmentation,sd as SapiensPreTrainedModel,rd as SeamlessM4TFeatureExtractor,od as SegformerFeatureExtractor,nd as SegformerForImageClassification,ad as SegformerForSemanticSegmentation,id as SegformerImageProcessor,ld as SegformerModel,cd as SegformerPreTrainedModel,dd as Seq2SeqLMOutput,ud as SequenceClassifierOutput,_d as SiglipImageProcessor,md as SiglipModel,pd as SiglipPreTrainedModel,hd as SiglipTextModel,gd as SiglipTokenizer,fd as SiglipVisionModel,Md as SmolVLMForConditionalGeneration,wd as SmolVLMImageProcessor,Td as SmolVLMProcessor,bd as SnacDecoderModel,xd as SnacEncoderModel,Pd as SnacFeatureExtractor,kd as SnacModel,Fd as SnacPreTrainedModel,yd as SpeechT5FeatureExtractor,vd as SpeechT5ForSpeechToText,Cd as SpeechT5ForTextToSpeech,Sd as SpeechT5HifiGan,Ad as SpeechT5Model,Ed as SpeechT5PreTrainedModel,Ld as SpeechT5Processor,Id as SpeechT5Tokenizer,zd as SqueezeBertForMaskedLM,Dd as SqueezeBertForQuestionAnswering,jd as SqueezeBertForSequenceClassification,Vd as SqueezeBertModel,Nd as SqueezeBertPreTrainedModel,Od as SqueezeBertTokenizer,Bd as StableLmForCausalLM,Gd as StableLmModel,Rd as StableLmPreTrainedModel,qd as Starcoder2ForCausalLM,Wd as Starcoder2Model,$d as Starcoder2PreTrainedModel,Ud as StoppingCriteria,Qd as StoppingCriteriaList,Xd as StyleTextToSpeech2Model,Hd as StyleTextToSpeech2PreTrainedModel,Jd as SummarizationPipeline,Yd as SuppressTokensAtBeginLogitsProcessor,Kd as Swin2SRForImageSuperResolution,Zd as Swin2SRImageProcessor,eu as Swin2SRModel,tu as Swin2SRPreTrainedModel,su as SwinForImageClassification,ru as SwinForSemanticSegmentation,ou as SwinModel,nu as SwinPreTrainedModel,au as T5ForConditionalGeneration,iu as T5Model,lu as T5PreTrainedModel,cu as T5Tokenizer,du as TableTransformerForObjectDetection,uu as TableTransformerModel,_u as TableTransformerObjectDetectionOutput,mu as TableTransformerPreTrainedModel,pu as TemperatureLogitsWarper,hu as Tensor,gu as Text2TextGenerationPipeline,fu as TextClassificationPipeline,Mu as TextGenerationPipeline,wu as TextStreamer,Tu as TextToAudioPipeline,bu as TokenClassificationPipeline,xu as TokenClassifierOutput,Pu as TokenizerModel,ku as TopKLogitsWarper,Fu as TopPLogitsWarper,yu as TrOCRForCausalLM,vu as TrOCRPreTrainedModel,Cu as TranslationPipeline,Su as UltravoxModel,Au as UltravoxPreTrainedModel,Eu as UltravoxProcessor,Lu as UniSpeechForCTC,Iu as UniSpeechForSequenceClassification,zu as UniSpeechModel,Du as UniSpeechPreTrainedModel,ju as UniSpeechSatForAudioFrameClassification,Vu as UniSpeechSatForCTC,Nu as UniSpeechSatForSequenceClassification,Ou as UniSpeechSatModel,Bu as UniSpeechSatPreTrainedModel,Gu as VLChatProcessor,Ru as VLMImageProcessor,qu as ViTFeatureExtractor,Wu as ViTForImageClassification,$u as ViTImageProcessor,Uu as ViTMAEModel,Qu as ViTMAEPreTrainedModel,Xu as ViTMSNForImageClassification,Hu as ViTMSNModel,Ju as ViTMSNPreTrainedModel,Yu as ViTModel,Ku as ViTPreTrainedModel,Zu as VisionEncoderDecoderModel,e_ as VitMatteForImageMatting,t_ as VitMatteImageProcessor,s_ as VitMattePreTrainedModel,r_ as VitPoseForPoseEstimation,o_ as VitPoseImageProcessor,n_ as VitPosePreTrainedModel,a_ as VitsModel,i_ as VitsModelOutput,l_ as VitsPreTrainedModel,c_ as VitsTokenizer,d_ as Wav2Vec2BertForCTC,u_ as Wav2Vec2BertForSequenceClassification,__ as Wav2Vec2BertModel,m_ as Wav2Vec2BertPreTrainedModel,p_ as Wav2Vec2CTCTokenizer,h_ as Wav2Vec2FeatureExtractor,g_ as Wav2Vec2ForAudioFrameClassification,f_ as Wav2Vec2ForCTC,M_ as Wav2Vec2ForSequenceClassification,w_ as Wav2Vec2Model,T_ as Wav2Vec2PreTrainedModel,b_ as Wav2Vec2Processor,x_ as Wav2Vec2ProcessorWithLM,P_ as WavLMForAudioFrameClassification,k_ as WavLMForCTC,F_ as WavLMForSequenceClassification,y_ as WavLMForXVector,v_ as WavLMModel,C_ as WavLMPreTrainedModel,S_ as WeSpeakerFeatureExtractor,A_ as WeSpeakerResNetModel,E_ as WeSpeakerResNetPreTrainedModel,L_ as WhisperFeatureExtractor,I_ as WhisperForConditionalGeneration,z_ as WhisperModel,D_ as WhisperPreTrainedModel,j_ as WhisperProcessor,V_ as WhisperTextStreamer,N_ as WhisperTimeStampLogitsProcessor,O_ as WhisperTokenizer,B_ as XLMForQuestionAnswering,G_ as XLMForSequenceClassification,R_ as XLMForTokenClassification,q_ as XLMModel,W_ as XLMPreTrainedModel,$_ as XLMRobertaForMaskedLM,U_ as XLMRobertaForQuestionAnswering,Q_ as XLMRobertaForSequenceClassification,X_ as XLMRobertaForTokenClassification,H_ as XLMRobertaModel,J_ as XLMRobertaPreTrainedModel,Y_ as XLMRobertaTokenizer,K_ as XLMTokenizer,Z_ as XLMWithLMHeadModel,em as XVectorOutput,tm as YolosFeatureExtractor,sm as YolosForObjectDetection,rm as YolosImageProcessor,om as YolosModel,nm as YolosObjectDetectionOutput,am as YolosPreTrainedModel,im as ZeroShotAudioClassificationPipeline,lm as ZeroShotClassificationPipeline,cm as ZeroShotImageClassificationPipeline,dm as ZeroShotObjectDetectionPipeline,um as bankers_round,_m as cat,mm as cos_sim,pm as dot,hm as dynamic_time_warping,gm as env,fm as full,Mm as full_like,wm as getKeyValueShapes,Tm as hamming,bm as hanning,xm as interpolate,Pm as interpolate_4d,km as interpolate_data,Fm as is_chinese_char,ym as layer_norm,vm as load_image,Cm as load_video,Sm as log_softmax,Am as magnitude,Em as matmul,Lm as max,Im as mean,zm as mean_pooling,Dm as medianFilter,jm as mel_filter_bank,Vm as min,Nm as ones,Om as ones_like,Bm as permute,Gm as permute_data,Rm as pipeline,qm as quantize_embeddings,Wm as rand,$m as read_audio,Um as rfft,Qm as round,Xm as slice,Hm as softmax,Jm as spectrogram,Ym as stack,Km as std_mean,Zm as topk,ep as window_function,tp as zeros,sp as zeros_like};
//# sourceMappingURL=transformers.node.min.mjs.map